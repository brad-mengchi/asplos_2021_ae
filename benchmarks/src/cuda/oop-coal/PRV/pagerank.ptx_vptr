//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_70
.address_size 64

.func  (.param .b32 func_retval0) _ZN9ChiVertexIffE5getIdEv
(
	.param .b64 _ZN9ChiVertexIffE5getIdEv_param_0
)
;
.func _ZN9ChiVertexIffE5setIdEi
(
	.param .b64 _ZN9ChiVertexIffE5setIdEi_param_0,
	.param .b32 _ZN9ChiVertexIffE5setIdEi_param_1
)
;
.func  (.param .b32 func_retval0) _ZN9ChiVertexIffE8getValueEv
(
	.param .b64 _ZN9ChiVertexIffE8getValueEv_param_0
)
;
.func _ZN9ChiVertexIffE8setValueEf
(
	.param .b64 _ZN9ChiVertexIffE8setValueEf_param_0,
	.param .b32 _ZN9ChiVertexIffE8setValueEf_param_1
)
;
.func  (.param .b32 func_retval0) _ZN9ChiVertexIffE10numInEdgesEv
(
	.param .b64 _ZN9ChiVertexIffE10numInEdgesEv_param_0
)
;
.func  (.param .b32 func_retval0) _ZN9ChiVertexIffE11numOutEdgesEv
(
	.param .b64 _ZN9ChiVertexIffE11numOutEdgesEv_param_0
)
;
.func  (.param .b64 func_retval0) _ZN9ChiVertexIffE9getInEdgeEi
(
	.param .b64 _ZN9ChiVertexIffE9getInEdgeEi_param_0,
	.param .b32 _ZN9ChiVertexIffE9getInEdgeEi_param_1
)
;
.func  (.param .b64 func_retval0) _ZN9ChiVertexIffE10getOutEdgeEi
(
	.param .b64 _ZN9ChiVertexIffE10getOutEdgeEi_param_0,
	.param .b32 _ZN9ChiVertexIffE10getOutEdgeEi_param_1
)
;
.func _ZN9ChiVertexIffE10setOutEdgeEPP10VirtVertexIffEiiif
(
	.param .b64 _ZN9ChiVertexIffE10setOutEdgeEPP10VirtVertexIffEiiif_param_0,
	.param .b64 _ZN9ChiVertexIffE10setOutEdgeEPP10VirtVertexIffEiiif_param_1,
	.param .b32 _ZN9ChiVertexIffE10setOutEdgeEPP10VirtVertexIffEiiif_param_2,
	.param .b32 _ZN9ChiVertexIffE10setOutEdgeEPP10VirtVertexIffEiiif_param_3,
	.param .b32 _ZN9ChiVertexIffE10setOutEdgeEPP10VirtVertexIffEiiif_param_4,
	.param .b32 _ZN9ChiVertexIffE10setOutEdgeEPP10VirtVertexIffEiiif_param_5
)
;
.func _ZN9ChiVertexIffE9setInEdgeEiif
(
	.param .b64 _ZN9ChiVertexIffE9setInEdgeEiif_param_0,
	.param .b32 _ZN9ChiVertexIffE9setInEdgeEiif_param_1,
	.param .b32 _ZN9ChiVertexIffE9setInEdgeEiif_param_2,
	.param .b32 _ZN9ChiVertexIffE9setInEdgeEiif_param_3
)
;
.func  (.param .b32 func_retval0) _ZN4EdgeIfE11getVertexIdEv
(
	.param .b64 _ZN4EdgeIfE11getVertexIdEv_param_0
)
;
.func  (.param .b32 func_retval0) _ZN4EdgeIfE8getValueEv
(
	.param .b64 _ZN4EdgeIfE8getValueEv_param_0
)
;
.func _ZN4EdgeIfE8setValueEf
(
	.param .b64 _ZN4EdgeIfE8setValueEf_param_0,
	.param .b32 _ZN4EdgeIfE8setValueEf_param_1
)
;
.func  (.param .b32 func_retval0) _ZN15GraphChiContext14getNumVerticesEv
(
	.param .b32 _ZN15GraphChiContext14getNumVerticesEv_param_0
)
;
.func  (.param .b32 func_retval0) _ZN15GraphChiContext11getNumEdgesEv
(
	.param .b32 _ZN15GraphChiContext11getNumEdgesEv_param_0
)
;
.func _ZN9ChiVertexIffEC1Eiii
(
	.param .b64 _ZN9ChiVertexIffEC1Eiii_param_0,
	.param .b32 _ZN9ChiVertexIffEC1Eiii_param_1,
	.param .b32 _ZN9ChiVertexIffEC1Eiii_param_2,
	.param .b32 _ZN9ChiVertexIffEC1Eiii_param_3
)
;
.func _ZN9ChiVertexIffEC1Ev
(

)
;
.func _ZN4EdgeIfEC1Ev
(

)
;
.func _ZN10VirtVertexIffEC1Ev
(

)
;
.func _ZN10VirtVertexIffEC1Eiii
(
	.param .b64 _ZN10VirtVertexIffEC1Eiii_param_0
)
;
.func _ZN4EdgeIfEC1Eii
(
	.param .b64 _ZN4EdgeIfEC1Eii_param_0,
	.param .b32 _ZN4EdgeIfEC1Eii_param_1,
	.param .b32 _ZN4EdgeIfEC1Eii_param_2
)
;
.func _ZN7ChiEdgeIfEC1Ev
(

)
;
.func _ZN7ChiEdgeIfEC1Eii
(
	.param .b64 _ZN7ChiEdgeIfEC1Eii_param_0
)
;
.extern .func  (.param .b64 func_retval0) malloc
(
	.param .b64 malloc_param_0
)
;
.global .attribute(.managed) .align 16 .b8 buf5[128];
.global .align 16 .b8 _ZTV10VirtVertexIffE[96];
.global .align 16 .u64 _ZTV9ChiVertexIffE[12] = {0, 0, _ZN9ChiVertexIffE5getIdEv, _ZN9ChiVertexIffE5setIdEi, _ZN9ChiVertexIffE8getValueEv, _ZN9ChiVertexIffE8setValueEf, _ZN9ChiVertexIffE10numInEdgesEv, _ZN9ChiVertexIffE11numOutEdgesEv, _ZN9ChiVertexIffE9getInEdgeEi, _ZN9ChiVertexIffE10getOutEdgeEi, _ZN9ChiVertexIffE10setOutEdgeEPP10VirtVertexIffEiiif, _ZN9ChiVertexIffE9setInEdgeEiif};
.global .attribute(.managed) .align 8 .u64 range_tree;
.global .attribute(.managed) .align 4 .u32 tree_size_g;
.global .attribute(.managed) .align 8 .u64 temp_copyBack;
.global .attribute(.managed) .align 8 .u64 temp_PR;
.global .align 16 .b8 _ZTV7ChiEdgeIfE[40];
.global .align 16 .u64 _ZTV4EdgeIfE[5] = {0, 0, _ZN4EdgeIfE11getVertexIdEv, _ZN4EdgeIfE8getValueEv, _ZN4EdgeIfE8setValueEf};

.func  (.param .b32 func_retval0) _ZN9ChiVertexIffE5getIdEv(
	.param .b64 _ZN9ChiVertexIffE5getIdEv_param_0
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN9ChiVertexIffE5getIdEv_param_0];
	ld.u32 	%r1, [%rd1+8];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.func _ZN9ChiVertexIffE5setIdEi(
	.param .b64 _ZN9ChiVertexIffE5setIdEi_param_0,
	.param .b32 _ZN9ChiVertexIffE5setIdEi_param_1
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN9ChiVertexIffE5setIdEi_param_0];
	ld.param.u32 	%r1, [_ZN9ChiVertexIffE5setIdEi_param_1];
	st.u32 	[%rd1+8], %r1;
	ret;
}

.func  (.param .b32 func_retval0) _ZN9ChiVertexIffE8getValueEv(
	.param .b64 _ZN9ChiVertexIffE8getValueEv_param_0
)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN9ChiVertexIffE8getValueEv_param_0];
	ld.f32 	%f1, [%rd1+20];
	st.param.f32	[func_retval0+0], %f1;
	ret;
}

.func _ZN9ChiVertexIffE8setValueEf(
	.param .b64 _ZN9ChiVertexIffE8setValueEf_param_0,
	.param .b32 _ZN9ChiVertexIffE8setValueEf_param_1
)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN9ChiVertexIffE8setValueEf_param_0];
	ld.param.f32 	%f1, [_ZN9ChiVertexIffE8setValueEf_param_1];
	st.f32 	[%rd1+20], %f1;
	ret;
}

.func  (.param .b32 func_retval0) _ZN9ChiVertexIffE10numInEdgesEv(
	.param .b64 _ZN9ChiVertexIffE10numInEdgesEv_param_0
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN9ChiVertexIffE10numInEdgesEv_param_0];
	ld.u32 	%r1, [%rd1+12];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.func  (.param .b32 func_retval0) _ZN9ChiVertexIffE11numOutEdgesEv(
	.param .b64 _ZN9ChiVertexIffE11numOutEdgesEv_param_0
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN9ChiVertexIffE11numOutEdgesEv_param_0];
	ld.u32 	%r1, [%rd1+16];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.func  (.param .b64 func_retval0) _ZN9ChiVertexIffE9getInEdgeEi(
	.param .b64 _ZN9ChiVertexIffE9getInEdgeEi_param_0,
	.param .b32 _ZN9ChiVertexIffE9getInEdgeEi_param_1
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [_ZN9ChiVertexIffE9getInEdgeEi_param_0];
	ld.param.u32 	%r1, [_ZN9ChiVertexIffE9getInEdgeEi_param_1];
	ld.u64 	%rd2, [%rd1+24];
	mul.wide.s32 	%rd3, %r1, 8;
	add.s64 	%rd4, %rd2, %rd3;
	ld.u64 	%rd5, [%rd4];
	st.param.b64	[func_retval0+0], %rd5;
	ret;
}

.func  (.param .b64 func_retval0) _ZN9ChiVertexIffE10getOutEdgeEi(
	.param .b64 _ZN9ChiVertexIffE10getOutEdgeEi_param_0,
	.param .b32 _ZN9ChiVertexIffE10getOutEdgeEi_param_1
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [_ZN9ChiVertexIffE10getOutEdgeEi_param_0];
	ld.param.u32 	%r1, [_ZN9ChiVertexIffE10getOutEdgeEi_param_1];
	ld.u64 	%rd2, [%rd1+32];
	mul.wide.s32 	%rd3, %r1, 8;
	add.s64 	%rd4, %rd2, %rd3;
	ld.u64 	%rd5, [%rd4];
	st.param.b64	[func_retval0+0], %rd5;
	ret;
}

.func _ZN9ChiVertexIffE10setOutEdgeEPP10VirtVertexIffEiiif(
	.param .b64 _ZN9ChiVertexIffE10setOutEdgeEPP10VirtVertexIffEiiif_param_0,
	.param .b64 _ZN9ChiVertexIffE10setOutEdgeEPP10VirtVertexIffEiiif_param_1,
	.param .b32 _ZN9ChiVertexIffE10setOutEdgeEPP10VirtVertexIffEiiif_param_2,
	.param .b32 _ZN9ChiVertexIffE10setOutEdgeEPP10VirtVertexIffEiiif_param_3,
	.param .b32 _ZN9ChiVertexIffE10setOutEdgeEPP10VirtVertexIffEiiif_param_4,
	.param .b32 _ZN9ChiVertexIffE10setOutEdgeEPP10VirtVertexIffEiiif_param_5
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<23>;


	ld.param.u64 	%rd4, [_ZN9ChiVertexIffE10setOutEdgeEPP10VirtVertexIffEiiif_param_0];
	ld.param.u64 	%rd5, [_ZN9ChiVertexIffE10setOutEdgeEPP10VirtVertexIffEiiif_param_1];
	ld.param.u32 	%r3, [_ZN9ChiVertexIffE10setOutEdgeEPP10VirtVertexIffEiiif_param_2];
	ld.param.u32 	%r4, [_ZN9ChiVertexIffE10setOutEdgeEPP10VirtVertexIffEiiif_param_3];
	ld.param.u32 	%r6, [_ZN9ChiVertexIffE10setOutEdgeEPP10VirtVertexIffEiiif_param_4];
	mul.wide.s32 	%rd6, %r6, 8;
	add.s64 	%rd1, %rd5, %rd6;
	ld.u64 	%rd7, [%rd1];
	ld.u64 	%rd8, [%rd7];
	ld.u64 	%rd9, [%rd8+32];
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b32 retval0;
	prototype_0 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd9, 
	(
	param0
	)
	, prototype_0;
	ld.param.b32	%r7, [retval0+0];
	
	//{
	}// Callseq End 0
	mov.u32 	%r10, 0;
	setp.lt.s32	%p1, %r7, 1;
	@%p1 bra 	BB8_4;

BB8_1:
	ld.u64 	%rd10, [%rd1];
	ld.u64 	%rd11, [%rd10];
	ld.u64 	%rd12, [%rd11+48];
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b32 param1;
	st.param.b32	[param1+0], %r10;
	.param .b64 retval0;
	prototype_1 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _);
	call (retval0), 
	%rd12, 
	(
	param0, 
	param1
	)
	, prototype_1;
	ld.param.b64	%rd13, [retval0+0];
	
	//{
	}// Callseq End 1
	ld.u64 	%rd14, [%rd13];
	ld.u64 	%rd15, [%rd14];
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd13;
	.param .b32 retval0;
	prototype_2 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd15, 
	(
	param0
	)
	, prototype_2;
	ld.param.b32	%r8, [retval0+0];
	
	//{
	}// Callseq End 2
	setp.eq.s32	%p2, %r8, %r3;
	add.s32 	%r2, %r10, 1;
	ld.u64 	%rd2, [%rd1];
	ld.u64 	%rd16, [%rd2];
	add.s64 	%rd3, %rd16, 32;
	@%p2 bra 	BB8_3;

	ld.u64 	%rd17, [%rd3];
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_3 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd17, 
	(
	param0
	)
	, prototype_3;
	ld.param.b32	%r9, [retval0+0];
	
	//{
	}// Callseq End 3
	setp.lt.s32	%p3, %r2, %r9;
	mov.u32 	%r10, %r2;
	@%p3 bra 	BB8_1;
	bra.uni 	BB8_4;

BB8_3:
	ld.u64 	%rd18, [%rd3+16];
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 param1;
	st.param.b32	[param1+0], %r10;
	.param .b64 retval0;
	prototype_4 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _);
	call (retval0), 
	%rd18, 
	(
	param0, 
	param1
	)
	, prototype_4;
	ld.param.b64	%rd19, [retval0+0];
	
	//{
	}// Callseq End 4
	ld.u64 	%rd20, [%rd4+32];
	mul.wide.s32 	%rd21, %r4, 8;
	add.s64 	%rd22, %rd20, %rd21;
	st.u64 	[%rd22], %rd19;

BB8_4:
	ret;
}

.func _ZN9ChiVertexIffE9setInEdgeEiif(
	.param .b64 _ZN9ChiVertexIffE9setInEdgeEiif_param_0,
	.param .b32 _ZN9ChiVertexIffE9setInEdgeEiif_param_1,
	.param .b32 _ZN9ChiVertexIffE9setInEdgeEiif_param_2,
	.param .b32 _ZN9ChiVertexIffE9setInEdgeEiif_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd2, [_ZN9ChiVertexIffE9setInEdgeEiif_param_0];
	ld.param.u32 	%r2, [_ZN9ChiVertexIffE9setInEdgeEiif_param_1];
	ld.param.u32 	%r1, [_ZN9ChiVertexIffE9setInEdgeEiif_param_2];
	ld.param.f32 	%f1, [_ZN9ChiVertexIffE9setInEdgeEiif_param_3];
	ld.u64 	%rd3, [%rd2+24];
	mul.wide.s32 	%rd4, %r2, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.u64 	%rd1, [%rd5];
	setp.eq.s64	%p1, %rd1, 0;
	@%p1 bra 	BB9_2;

	cvt.rzi.s32.f32	%r3, %f1;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b32 param2;
	st.param.b32	[param2+0], %r3;
	call.uni 
	_ZN4EdgeIfEC1Eii, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 5

BB9_2:
	ret;
}

.func  (.param .b32 func_retval0) _ZN4EdgeIfE11getVertexIdEv(
	.param .b64 _ZN4EdgeIfE11getVertexIdEv_param_0
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN4EdgeIfE11getVertexIdEv_param_0];
	ld.u32 	%r1, [%rd1+12];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.func  (.param .b32 func_retval0) _ZN4EdgeIfE8getValueEv(
	.param .b64 _ZN4EdgeIfE8getValueEv_param_0
)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN4EdgeIfE8getValueEv_param_0];
	ld.f32 	%f1, [%rd1+8];
	st.param.f32	[func_retval0+0], %f1;
	ret;
}

.func _ZN4EdgeIfE8setValueEf(
	.param .b64 _ZN4EdgeIfE8setValueEf_param_0,
	.param .b32 _ZN4EdgeIfE8setValueEf_param_1
)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN4EdgeIfE8setValueEf_param_0];
	ld.param.f32 	%f1, [_ZN4EdgeIfE8setValueEf_param_1];
	st.f32 	[%rd1+8], %f1;
	ret;
}

	// .globl	_Z21part_kern0_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5_
.visible .entry _Z21part_kern0_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5_(
	.param .u64 _Z21part_kern0_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_0,
	.param .u64 _Z21part_kern0_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_1,
	.param .u64 _Z21part_kern0_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_2,
	.param .u64 _Z21part_kern0_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_3,
	.param .u64 _Z21part_kern0_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_4,
	.param .u64 _Z21part_kern0_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_5
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<24>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd5, [_Z21part_kern0_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_0];
	ld.param.u64 	%rd8, [_Z21part_kern0_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_1];
	ld.param.u64 	%rd6, [_Z21part_kern0_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_2];
	ld.param.u64 	%rd7, [_Z21part_kern0_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_4];
	cvta.to.global.u64 	%rd9, %rd8;
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r1, %r14, %r15, %r16;
	add.s64 	%rd1, %rd9, 4;
	ld.global.u32 	%r2, [%rd9+4];
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r2;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN15GraphChiContext14getNumVerticesEv, 
	(
	param0
	);
	ld.param.b32	%r17, [retval0+0];
	
	//{
	}// Callseq End 6
	setp.ge.s32	%p1, %r1, %r17;
	@%p1 bra 	BB13_9;

	cvta.to.global.u64 	%rd10, %rd6;
	mul.wide.s32 	%rd11, %r1, 4;
	add.s64 	%rd2, %rd10, %rd11;
	ld.global.u32 	%r3, [%rd2];
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r2;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN15GraphChiContext14getNumVerticesEv, 
	(
	param0
	);
	ld.param.b32	%r18, [retval0+0];
	
	//{
	}// Callseq End 7
	add.s32 	%r4, %r1, 1;
	setp.lt.s32	%p2, %r4, %r18;
	@%p2 bra 	BB13_3;
	bra.uni 	BB13_2;

BB13_3:
	ld.global.u32 	%r22, [%rd2+4];
	bra.uni 	BB13_4;

BB13_2:
	ld.global.u32 	%r19, [%rd1+4];
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r19;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN15GraphChiContext11getNumEdgesEv, 
	(
	param0
	);
	ld.param.b32	%r22, [retval0+0];
	
	//{
	}// Callseq End 8

BB13_4:
	cvta.to.global.u64 	%rd12, %rd7;
	add.s64 	%rd3, %rd12, %rd11;
	ld.global.u32 	%r8, [%rd3];
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r2;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN15GraphChiContext14getNumVerticesEv, 
	(
	param0
	);
	ld.param.b32	%r20, [retval0+0];
	
	//{
	}// Callseq End 9
	setp.lt.s32	%p3, %r4, %r20;
	@%p3 bra 	BB13_6;
	bra.uni 	BB13_5;

BB13_6:
	ld.global.u32 	%r23, [%rd3+4];
	bra.uni 	BB13_7;

BB13_5:
	ld.global.u32 	%r21, [%rd1+4];
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r21;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN15GraphChiContext11getNumEdgesEv, 
	(
	param0
	);
	ld.param.b32	%r23, [retval0+0];
	
	//{
	}// Callseq End 10

BB13_7:
	cvta.to.global.u64 	%rd14, %rd5;
	sub.s32 	%r12, %r23, %r8;
	sub.s32 	%r13, %r22, %r3;
	mul.wide.s32 	%rd15, %r1, 8;
	add.s64 	%rd16, %rd14, %rd15;
	ld.global.u64 	%rd4, [%rd16];
	setp.eq.s64	%p4, %rd4, 0;
	@%p4 bra 	BB13_9;

	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b32 param2;
	st.param.b32	[param2+0], %r12;
	.param .b32 param3;
	st.param.b32	[param3+0], %r13;
	call.uni 
	_ZN9ChiVertexIffEC1Eiii, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	
	//{
	}// Callseq End 11

BB13_9:
	ret;
}

.func  (.param .b32 func_retval0) _ZN15GraphChiContext14getNumVerticesEv(
	.param .b32 _ZN15GraphChiContext14getNumVerticesEv_param_0
)
{
	.reg .b32 	%r<2>;


	ld.param.u32 	%r1, [_ZN15GraphChiContext14getNumVerticesEv_param_0];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.func  (.param .b32 func_retval0) _ZN15GraphChiContext11getNumEdgesEv(
	.param .b32 _ZN15GraphChiContext11getNumEdgesEv_param_0
)
{
	.reg .b32 	%r<2>;


	ld.param.u32 	%r1, [_ZN15GraphChiContext11getNumEdgesEv_param_0];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.func _ZN9ChiVertexIffEC1Eiii(
	.param .b64 _ZN9ChiVertexIffEC1Eiii_param_0,
	.param .b32 _ZN9ChiVertexIffEC1Eiii_param_1,
	.param .b32 _ZN9ChiVertexIffEC1Eiii_param_2,
	.param .b32 _ZN9ChiVertexIffEC1Eiii_param_3
)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_ZN9ChiVertexIffEC1Eiii_param_0];
	ld.param.u32 	%r1, [_ZN9ChiVertexIffEC1Eiii_param_3];
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	call.uni 
	_ZN10VirtVertexIffEC1Eiii, 
	(
	param0
	);
	
	//{
	}// Callseq End 12
	mov.u64 	%rd2, _ZTV9ChiVertexIffE;
	add.s64 	%rd3, %rd2, 16;
	cvta.global.u64 	%rd4, %rd3;
	st.u64 	[%rd1], %rd4;
	ld.param.u32 	%r2, [_ZN9ChiVertexIffEC1Eiii_param_2];
	ld.param.u32 	%r3, [_ZN9ChiVertexIffEC1Eiii_param_1];
	st.v2.u32 	[%rd1+8], {%r3, %r2};
	st.u32 	[%rd1+16], %r1;
	ret;
}

	// .globl	_Z21part_kern1_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5_
.visible .entry _Z21part_kern1_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5_(
	.param .u64 _Z21part_kern1_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_0,
	.param .u64 _Z21part_kern1_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_1,
	.param .u64 _Z21part_kern1_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_2,
	.param .u64 _Z21part_kern1_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_3,
	.param .u64 _Z21part_kern1_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_4,
	.param .u64 _Z21part_kern1_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_5
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<46>;
	.reg .b64 	%rd<43>;


	ld.param.u64 	%rd5, [_Z21part_kern1_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_0];
	ld.param.u64 	%rd7, [_Z21part_kern1_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_1];
	ld.param.u64 	%rd6, [_Z21part_kern1_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_4];
	ld.param.u64 	%rd8, [_Z21part_kern1_initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_5];
	cvta.to.global.u64 	%rd9, %rd7;
	cvta.to.global.u64 	%rd1, %rd8;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %ntid.x;
	mov.u32 	%r19, %tid.x;
	mad.lo.s32 	%r1, %r17, %r18, %r19;
	add.s64 	%rd2, %rd9, 4;
	ld.global.u32 	%r2, [%rd9+4];
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r2;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN15GraphChiContext14getNumVerticesEv, 
	(
	param0
	);
	ld.param.b32	%r20, [retval0+0];
	
	//{
	}// Callseq End 13
	setp.ge.s32	%p1, %r1, %r20;
	@%p1 bra 	BB17_13;

	cvta.to.global.u64 	%rd10, %rd6;
	mul.wide.s32 	%rd11, %r1, 4;
	add.s64 	%rd3, %rd10, %rd11;
	ld.global.u32 	%r3, [%rd3];
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r2;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN15GraphChiContext14getNumVerticesEv, 
	(
	param0
	);
	ld.param.b32	%r21, [retval0+0];
	
	//{
	}// Callseq End 14
	add.s32 	%r22, %r1, 1;
	setp.lt.s32	%p2, %r22, %r21;
	@%p2 bra 	BB17_3;
	bra.uni 	BB17_2;

BB17_3:
	ld.global.u32 	%r41, [%rd3+4];
	bra.uni 	BB17_4;

BB17_2:
	ld.global.u32 	%r23, [%rd2+4];
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r23;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN15GraphChiContext11getNumEdgesEv, 
	(
	param0
	);
	ld.param.b32	%r41, [retval0+0];
	
	//{
	}// Callseq End 15

BB17_4:
	setp.le.s32	%p3, %r41, %r3;
	@%p3 bra 	BB17_13;

	cvta.to.global.u64 	%rd12, %rd5;
	mul.wide.s32 	%rd13, %r1, 8;
	add.s64 	%rd4, %rd12, %rd13;
	sub.s32 	%r7, %r41, %r3;
	and.b32  	%r8, %r7, 3;
	setp.eq.s32	%p4, %r8, 0;
	mov.u32 	%r45, %r3;
	@%p4 bra 	BB17_11;

	setp.eq.s32	%p5, %r8, 1;
	mov.u32 	%r43, %r3;
	@%p5 bra 	BB17_10;

	setp.eq.s32	%p6, %r8, 2;
	mov.u32 	%r42, %r3;
	@%p6 bra 	BB17_9;

	ld.global.u64 	%rd14, [%rd4];
	ld.u64 	%rd15, [%rd14];
	ld.u64 	%rd16, [%rd15+72];
	mul.wide.s32 	%rd17, %r3, 4;
	add.s64 	%rd18, %rd1, %rd17;
	ld.global.u32 	%r24, [%rd18];
	mov.u32 	%r25, 0;
	mov.f32 	%f1, 0f00000000;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b32 param1;
	st.param.b32	[param1+0], %r25;
	.param .b32 param2;
	st.param.b32	[param2+0], %r24;
	.param .b32 param3;
	st.param.f32	[param3+0], %f1;
	prototype_16 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd16, 
	(
	param0, 
	param1, 
	param2, 
	param3
	)
	, prototype_16;
	
	//{
	}// Callseq End 16
	add.s32 	%r42, %r3, 1;

BB17_9:
	ld.global.u64 	%rd19, [%rd4];
	ld.u64 	%rd20, [%rd19];
	ld.u64 	%rd21, [%rd20+72];
	mul.wide.s32 	%rd22, %r42, 4;
	add.s64 	%rd23, %rd1, %rd22;
	ld.global.u32 	%r26, [%rd23];
	sub.s32 	%r27, %r42, %r3;
	mov.f32 	%f2, 0f00000000;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b32 param1;
	st.param.b32	[param1+0], %r27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r26;
	.param .b32 param3;
	st.param.f32	[param3+0], %f2;
	prototype_17 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd21, 
	(
	param0, 
	param1, 
	param2, 
	param3
	)
	, prototype_17;
	
	//{
	}// Callseq End 17
	add.s32 	%r43, %r42, 1;

BB17_10:
	ld.global.u64 	%rd24, [%rd4];
	ld.u64 	%rd25, [%rd24];
	ld.u64 	%rd26, [%rd25+72];
	mul.wide.s32 	%rd27, %r43, 4;
	add.s64 	%rd28, %rd1, %rd27;
	ld.global.u32 	%r28, [%rd28];
	sub.s32 	%r29, %r43, %r3;
	mov.f32 	%f3, 0f00000000;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd24;
	.param .b32 param1;
	st.param.b32	[param1+0], %r29;
	.param .b32 param2;
	st.param.b32	[param2+0], %r28;
	.param .b32 param3;
	st.param.f32	[param3+0], %f3;
	prototype_18 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd26, 
	(
	param0, 
	param1, 
	param2, 
	param3
	)
	, prototype_18;
	
	//{
	}// Callseq End 18
	add.s32 	%r45, %r43, 1;

BB17_11:
	setp.lt.u32	%p7, %r7, 4;
	@%p7 bra 	BB17_13;

BB17_12:
	ld.global.u64 	%rd29, [%rd4];
	ld.u64 	%rd30, [%rd29];
	ld.u64 	%rd31, [%rd30+72];
	mul.wide.s32 	%rd32, %r45, 4;
	add.s64 	%rd33, %rd1, %rd32;
	ld.global.u32 	%r30, [%rd33];
	sub.s32 	%r31, %r45, %r3;
	mov.f32 	%f4, 0f00000000;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd29;
	.param .b32 param1;
	st.param.b32	[param1+0], %r31;
	.param .b32 param2;
	st.param.b32	[param2+0], %r30;
	.param .b32 param3;
	st.param.f32	[param3+0], %f4;
	prototype_19 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd31, 
	(
	param0, 
	param1, 
	param2, 
	param3
	)
	, prototype_19;
	
	//{
	}// Callseq End 19
	ld.global.u64 	%rd34, [%rd4];
	ld.u64 	%rd35, [%rd34];
	ld.u64 	%rd36, [%rd35+72];
	add.s32 	%r32, %r45, 1;
	sub.s32 	%r33, %r32, %r3;
	ld.global.u32 	%r34, [%rd33+4];
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd34;
	.param .b32 param1;
	st.param.b32	[param1+0], %r33;
	.param .b32 param2;
	st.param.b32	[param2+0], %r34;
	.param .b32 param3;
	st.param.f32	[param3+0], %f4;
	prototype_20 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd36, 
	(
	param0, 
	param1, 
	param2, 
	param3
	)
	, prototype_20;
	
	//{
	}// Callseq End 20
	ld.global.u64 	%rd37, [%rd4];
	ld.u64 	%rd38, [%rd37];
	ld.u64 	%rd39, [%rd38+72];
	add.s32 	%r35, %r45, 2;
	sub.s32 	%r36, %r35, %r3;
	ld.global.u32 	%r37, [%rd33+8];
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd37;
	.param .b32 param1;
	st.param.b32	[param1+0], %r36;
	.param .b32 param2;
	st.param.b32	[param2+0], %r37;
	.param .b32 param3;
	st.param.f32	[param3+0], %f4;
	prototype_21 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd39, 
	(
	param0, 
	param1, 
	param2, 
	param3
	)
	, prototype_21;
	
	//{
	}// Callseq End 21
	ld.global.u64 	%rd40, [%rd4];
	ld.u64 	%rd41, [%rd40];
	ld.u64 	%rd42, [%rd41+72];
	add.s32 	%r38, %r45, 3;
	sub.s32 	%r39, %r38, %r3;
	ld.global.u32 	%r40, [%rd33+12];
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd40;
	.param .b32 param1;
	st.param.b32	[param1+0], %r39;
	.param .b32 param2;
	st.param.b32	[param2+0], %r40;
	.param .b32 param3;
	st.param.f32	[param3+0], %f4;
	prototype_22 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd42, 
	(
	param0, 
	param1, 
	param2, 
	param3
	)
	, prototype_22;
	
	//{
	}// Callseq End 22
	add.s32 	%r45, %r45, 4;
	setp.lt.s32	%p8, %r45, %r41;
	@%p8 bra 	BB17_12;

BB17_13:
	ret;
}

	// .globl	_Z16kern_initOutEdgePP10VirtVertexIffEP15GraphChiContextPiS5_
.visible .entry _Z16kern_initOutEdgePP10VirtVertexIffEP15GraphChiContextPiS5_(
	.param .u64 _Z16kern_initOutEdgePP10VirtVertexIffEP15GraphChiContextPiS5__param_0,
	.param .u64 _Z16kern_initOutEdgePP10VirtVertexIffEP15GraphChiContextPiS5__param_1,
	.param .u64 _Z16kern_initOutEdgePP10VirtVertexIffEP15GraphChiContextPiS5__param_2,
	.param .u64 _Z16kern_initOutEdgePP10VirtVertexIffEP15GraphChiContextPiS5__param_3
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<46>;
	.reg .b64 	%rd<43>;


	ld.param.u64 	%rd5, [_Z16kern_initOutEdgePP10VirtVertexIffEP15GraphChiContextPiS5__param_0];
	ld.param.u64 	%rd7, [_Z16kern_initOutEdgePP10VirtVertexIffEP15GraphChiContextPiS5__param_1];
	ld.param.u64 	%rd6, [_Z16kern_initOutEdgePP10VirtVertexIffEP15GraphChiContextPiS5__param_2];
	ld.param.u64 	%rd8, [_Z16kern_initOutEdgePP10VirtVertexIffEP15GraphChiContextPiS5__param_3];
	cvta.to.global.u64 	%rd9, %rd7;
	cvta.to.global.u64 	%rd1, %rd8;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %ntid.x;
	mov.u32 	%r19, %tid.x;
	mad.lo.s32 	%r1, %r17, %r18, %r19;
	add.s64 	%rd2, %rd9, 4;
	ld.global.u32 	%r2, [%rd9+4];
	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r2;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN15GraphChiContext14getNumVerticesEv, 
	(
	param0
	);
	ld.param.b32	%r20, [retval0+0];
	
	//{
	}// Callseq End 23
	setp.ge.s32	%p1, %r1, %r20;
	@%p1 bra 	BB18_13;

	cvta.to.global.u64 	%rd10, %rd6;
	mul.wide.s32 	%rd11, %r1, 4;
	add.s64 	%rd3, %rd10, %rd11;
	ld.global.u32 	%r3, [%rd3];
	// Callseq Start 24
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r2;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN15GraphChiContext14getNumVerticesEv, 
	(
	param0
	);
	ld.param.b32	%r21, [retval0+0];
	
	//{
	}// Callseq End 24
	add.s32 	%r22, %r1, 1;
	setp.lt.s32	%p2, %r22, %r21;
	@%p2 bra 	BB18_3;
	bra.uni 	BB18_2;

BB18_3:
	ld.global.u32 	%r41, [%rd3+4];
	bra.uni 	BB18_4;

BB18_2:
	ld.global.u32 	%r23, [%rd2+4];
	// Callseq Start 25
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r23;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN15GraphChiContext11getNumEdgesEv, 
	(
	param0
	);
	ld.param.b32	%r41, [retval0+0];
	
	//{
	}// Callseq End 25

BB18_4:
	setp.le.s32	%p3, %r41, %r3;
	@%p3 bra 	BB18_13;

	cvta.to.global.u64 	%rd12, %rd5;
	mul.wide.s32 	%rd13, %r1, 8;
	add.s64 	%rd4, %rd12, %rd13;
	sub.s32 	%r7, %r41, %r3;
	and.b32  	%r8, %r7, 3;
	setp.eq.s32	%p4, %r8, 0;
	mov.u32 	%r45, %r3;
	@%p4 bra 	BB18_11;

	setp.eq.s32	%p5, %r8, 1;
	mov.u32 	%r43, %r3;
	@%p5 bra 	BB18_10;

	setp.eq.s32	%p6, %r8, 2;
	mov.u32 	%r42, %r3;
	@%p6 bra 	BB18_9;

	ld.global.u64 	%rd14, [%rd4];
	ld.u64 	%rd15, [%rd14];
	ld.u64 	%rd16, [%rd15+64];
	mul.wide.s32 	%rd17, %r3, 4;
	add.s64 	%rd18, %rd1, %rd17;
	ld.global.u32 	%r24, [%rd18];
	mov.u32 	%r25, 0;
	mov.f32 	%f1, 0f00000000;
	// Callseq Start 26
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b32 param3;
	st.param.b32	[param3+0], %r25;
	.param .b32 param4;
	st.param.b32	[param4+0], %r24;
	.param .b32 param5;
	st.param.f32	[param5+0], %f1;
	prototype_26 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd16, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	)
	, prototype_26;
	
	//{
	}// Callseq End 26
	add.s32 	%r42, %r3, 1;

BB18_9:
	ld.global.u64 	%rd19, [%rd4];
	ld.u64 	%rd20, [%rd19];
	ld.u64 	%rd21, [%rd20+64];
	mul.wide.s32 	%rd22, %r42, 4;
	add.s64 	%rd23, %rd1, %rd22;
	ld.global.u32 	%r26, [%rd23];
	sub.s32 	%r27, %r42, %r3;
	mov.f32 	%f2, 0f00000000;
	// Callseq Start 27
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b32 param3;
	st.param.b32	[param3+0], %r27;
	.param .b32 param4;
	st.param.b32	[param4+0], %r26;
	.param .b32 param5;
	st.param.f32	[param5+0], %f2;
	prototype_27 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd21, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	)
	, prototype_27;
	
	//{
	}// Callseq End 27
	add.s32 	%r43, %r42, 1;

BB18_10:
	ld.global.u64 	%rd24, [%rd4];
	ld.u64 	%rd25, [%rd24];
	ld.u64 	%rd26, [%rd25+64];
	mul.wide.s32 	%rd27, %r43, 4;
	add.s64 	%rd28, %rd1, %rd27;
	ld.global.u32 	%r28, [%rd28];
	sub.s32 	%r29, %r43, %r3;
	mov.f32 	%f3, 0f00000000;
	// Callseq Start 28
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd24;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b32 param3;
	st.param.b32	[param3+0], %r29;
	.param .b32 param4;
	st.param.b32	[param4+0], %r28;
	.param .b32 param5;
	st.param.f32	[param5+0], %f3;
	prototype_28 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd26, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	)
	, prototype_28;
	
	//{
	}// Callseq End 28
	add.s32 	%r45, %r43, 1;

BB18_11:
	setp.lt.u32	%p7, %r7, 4;
	@%p7 bra 	BB18_13;

BB18_12:
	ld.global.u64 	%rd29, [%rd4];
	ld.u64 	%rd30, [%rd29];
	ld.u64 	%rd31, [%rd30+64];
	mul.wide.s32 	%rd32, %r45, 4;
	add.s64 	%rd33, %rd1, %rd32;
	ld.global.u32 	%r30, [%rd33];
	sub.s32 	%r31, %r45, %r3;
	mov.f32 	%f4, 0f00000000;
	// Callseq Start 29
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd29;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b32 param3;
	st.param.b32	[param3+0], %r31;
	.param .b32 param4;
	st.param.b32	[param4+0], %r30;
	.param .b32 param5;
	st.param.f32	[param5+0], %f4;
	prototype_29 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd31, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	)
	, prototype_29;
	
	//{
	}// Callseq End 29
	ld.global.u64 	%rd34, [%rd4];
	ld.u64 	%rd35, [%rd34];
	ld.u64 	%rd36, [%rd35+64];
	add.s32 	%r32, %r45, 1;
	sub.s32 	%r33, %r32, %r3;
	ld.global.u32 	%r34, [%rd33+4];
	// Callseq Start 30
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd34;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b32 param3;
	st.param.b32	[param3+0], %r33;
	.param .b32 param4;
	st.param.b32	[param4+0], %r34;
	.param .b32 param5;
	st.param.f32	[param5+0], %f4;
	prototype_30 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd36, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	)
	, prototype_30;
	
	//{
	}// Callseq End 30
	ld.global.u64 	%rd37, [%rd4];
	ld.u64 	%rd38, [%rd37];
	ld.u64 	%rd39, [%rd38+64];
	add.s32 	%r35, %r45, 2;
	sub.s32 	%r36, %r35, %r3;
	ld.global.u32 	%r37, [%rd33+8];
	// Callseq Start 31
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd37;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b32 param3;
	st.param.b32	[param3+0], %r36;
	.param .b32 param4;
	st.param.b32	[param4+0], %r37;
	.param .b32 param5;
	st.param.f32	[param5+0], %f4;
	prototype_31 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd39, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	)
	, prototype_31;
	
	//{
	}// Callseq End 31
	ld.global.u64 	%rd40, [%rd4];
	ld.u64 	%rd41, [%rd40];
	ld.u64 	%rd42, [%rd41+64];
	add.s32 	%r38, %r45, 3;
	sub.s32 	%r39, %r38, %r3;
	ld.global.u32 	%r40, [%rd33+12];
	// Callseq Start 32
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd40;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b32 param3;
	st.param.b32	[param3+0], %r39;
	.param .b32 param4;
	st.param.b32	[param4+0], %r40;
	.param .b32 param5;
	st.param.f32	[param5+0], %f4;
	prototype_32 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd42, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	)
	, prototype_32;
	
	//{
	}// Callseq End 32
	add.s32 	%r45, %r45, 4;
	setp.lt.s32	%p8, %r45, %r41;
	@%p8 bra 	BB18_12;

BB18_13:
	ret;
}

	// .globl	_Z10initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5_
.visible .entry _Z10initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5_(
	.param .u64 _Z10initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_0,
	.param .u64 _Z10initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_1,
	.param .u64 _Z10initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_2,
	.param .u64 _Z10initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_3,
	.param .u64 _Z10initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_4,
	.param .u64 _Z10initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_5
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<54>;
	.reg .b64 	%rd<58>;


	ld.param.u64 	%rd15, [_Z10initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_0];
	ld.param.u64 	%rd18, [_Z10initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_1];
	ld.param.u64 	%rd16, [_Z10initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_2];
	ld.param.u64 	%rd17, [_Z10initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_4];
	ld.param.u64 	%rd19, [_Z10initObjectPP10VirtVertexIffEP15GraphChiContextPiS5_S5_S5__param_5];
	cvta.to.global.u64 	%rd20, %rd18;
	cvta.to.global.u64 	%rd1, %rd19;
	mov.u32 	%r23, %ctaid.x;
	mov.u32 	%r24, %ntid.x;
	mov.u32 	%r25, %tid.x;
	mad.lo.s32 	%r1, %r23, %r24, %r25;
	add.s64 	%rd2, %rd20, 4;
	ld.global.u32 	%r2, [%rd20+4];
	// Callseq Start 33
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r2;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN15GraphChiContext14getNumVerticesEv, 
	(
	param0
	);
	ld.param.b32	%r26, [retval0+0];
	
	//{
	}// Callseq End 33
	setp.ge.s32	%p1, %r1, %r26;
	@%p1 bra 	BB19_20;

	cvta.to.global.u64 	%rd21, %rd16;
	mul.wide.s32 	%rd22, %r1, 4;
	add.s64 	%rd3, %rd21, %rd22;
	ld.global.u32 	%r3, [%rd3];
	// Callseq Start 34
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r2;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN15GraphChiContext14getNumVerticesEv, 
	(
	param0
	);
	ld.param.b32	%r27, [retval0+0];
	
	//{
	}// Callseq End 34
	add.s32 	%r4, %r1, 1;
	setp.lt.s32	%p2, %r4, %r27;
	@%p2 bra 	BB19_3;
	bra.uni 	BB19_2;

BB19_3:
	ld.global.u32 	%r48, [%rd3+4];
	bra.uni 	BB19_4;

BB19_2:
	ld.global.u32 	%r28, [%rd2+4];
	// Callseq Start 35
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r28;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN15GraphChiContext11getNumEdgesEv, 
	(
	param0
	);
	ld.param.b32	%r48, [retval0+0];
	
	//{
	}// Callseq End 35

BB19_4:
	cvta.to.global.u64 	%rd23, %rd17;
	add.s64 	%rd4, %rd23, %rd22;
	ld.global.u32 	%r8, [%rd4];
	// Callseq Start 36
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r2;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN15GraphChiContext14getNumVerticesEv, 
	(
	param0
	);
	ld.param.b32	%r29, [retval0+0];
	
	//{
	}// Callseq End 36
	setp.lt.s32	%p3, %r4, %r29;
	@%p3 bra 	BB19_6;
	bra.uni 	BB19_5;

BB19_6:
	ld.global.u32 	%r49, [%rd4+4];
	bra.uni 	BB19_7;

BB19_5:
	ld.global.u32 	%r30, [%rd2+4];
	// Callseq Start 37
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r30;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN15GraphChiContext11getNumEdgesEv, 
	(
	param0
	);
	ld.param.b32	%r49, [retval0+0];
	
	//{
	}// Callseq End 37

BB19_7:
	sub.s32 	%r12, %r49, %r8;
	sub.s32 	%r13, %r48, %r3;
	mov.u64 	%rd26, 40;
	// Callseq Start 38
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd26;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64	%rd5, [retval0+0];
	
	//{
	}// Callseq End 38
	setp.eq.s64	%p4, %rd5, 0;
	mov.u64 	%rd7, 0;
	@%p4 bra 	BB19_9;

	// Callseq Start 39
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b32 param2;
	st.param.b32	[param2+0], %r12;
	.param .b32 param3;
	st.param.b32	[param3+0], %r13;
	call.uni 
	_ZN9ChiVertexIffEC1Eiii, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	
	//{
	}// Callseq End 39
	mov.u64 	%rd7, %rd5;

BB19_9:
	cvta.to.global.u64 	%rd27, %rd15;
	mul.wide.s32 	%rd28, %r1, 8;
	add.s64 	%rd8, %rd27, %rd28;
	st.global.u64 	[%rd8], %rd7;
	setp.le.s32	%p5, %r49, %r8;
	@%p5 bra 	BB19_20;

	and.b32  	%r14, %r12, 3;
	setp.eq.s32	%p6, %r14, 0;
	mov.u32 	%r53, %r8;
	@%p6 bra 	BB19_18;

	setp.eq.s32	%p7, %r14, 1;
	@%p7 bra 	BB19_12;
	bra.uni 	BB19_13;

BB19_12:
	mov.u32 	%r51, %r8;
	bra.uni 	BB19_17;

BB19_13:
	setp.eq.s32	%p8, %r14, 2;
	@%p8 bra 	BB19_14;
	bra.uni 	BB19_15;

BB19_14:
	mov.u32 	%r50, %r8;
	bra.uni 	BB19_16;

BB19_15:
	ld.u64 	%rd29, [%rd7];
	ld.u64 	%rd30, [%rd29+72];
	mul.wide.s32 	%rd31, %r8, 4;
	add.s64 	%rd32, %rd1, %rd31;
	ld.global.u32 	%r31, [%rd32];
	mov.u32 	%r32, 0;
	mov.f32 	%f1, 0f00000000;
	// Callseq Start 40
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b32 param1;
	st.param.b32	[param1+0], %r32;
	.param .b32 param2;
	st.param.b32	[param2+0], %r31;
	.param .b32 param3;
	st.param.f32	[param3+0], %f1;
	prototype_40 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd30, 
	(
	param0, 
	param1, 
	param2, 
	param3
	)
	, prototype_40;
	
	//{
	}// Callseq End 40
	add.s32 	%r50, %r8, 1;
	ld.global.u64 	%rd7, [%rd8];

BB19_16:
	ld.u64 	%rd33, [%rd7];
	ld.u64 	%rd34, [%rd33+72];
	mul.wide.s32 	%rd35, %r50, 4;
	add.s64 	%rd36, %rd1, %rd35;
	ld.global.u32 	%r33, [%rd36];
	sub.s32 	%r34, %r50, %r8;
	mov.f32 	%f2, 0f00000000;
	// Callseq Start 41
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b32 param1;
	st.param.b32	[param1+0], %r34;
	.param .b32 param2;
	st.param.b32	[param2+0], %r33;
	.param .b32 param3;
	st.param.f32	[param3+0], %f2;
	prototype_41 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd34, 
	(
	param0, 
	param1, 
	param2, 
	param3
	)
	, prototype_41;
	
	//{
	}// Callseq End 41
	add.s32 	%r51, %r50, 1;
	ld.global.u64 	%rd7, [%rd8];

BB19_17:
	ld.u64 	%rd37, [%rd7];
	ld.u64 	%rd38, [%rd37+72];
	mul.wide.s32 	%rd39, %r51, 4;
	add.s64 	%rd40, %rd1, %rd39;
	ld.global.u32 	%r35, [%rd40];
	sub.s32 	%r36, %r51, %r8;
	mov.f32 	%f3, 0f00000000;
	// Callseq Start 42
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b32 param1;
	st.param.b32	[param1+0], %r36;
	.param .b32 param2;
	st.param.b32	[param2+0], %r35;
	.param .b32 param3;
	st.param.f32	[param3+0], %f3;
	prototype_42 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd38, 
	(
	param0, 
	param1, 
	param2, 
	param3
	)
	, prototype_42;
	
	//{
	}// Callseq End 42
	add.s32 	%r53, %r51, 1;

BB19_18:
	setp.lt.u32	%p9, %r12, 4;
	@%p9 bra 	BB19_20;

BB19_19:
	ld.global.u64 	%rd41, [%rd8];
	ld.u64 	%rd42, [%rd41];
	ld.u64 	%rd43, [%rd42+72];
	mul.wide.s32 	%rd44, %r53, 4;
	add.s64 	%rd45, %rd1, %rd44;
	ld.global.u32 	%r37, [%rd45];
	sub.s32 	%r38, %r53, %r8;
	mov.f32 	%f4, 0f00000000;
	// Callseq Start 43
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd41;
	.param .b32 param1;
	st.param.b32	[param1+0], %r38;
	.param .b32 param2;
	st.param.b32	[param2+0], %r37;
	.param .b32 param3;
	st.param.f32	[param3+0], %f4;
	prototype_43 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd43, 
	(
	param0, 
	param1, 
	param2, 
	param3
	)
	, prototype_43;
	
	//{
	}// Callseq End 43
	ld.global.u64 	%rd46, [%rd8];
	ld.u64 	%rd47, [%rd46];
	ld.u64 	%rd48, [%rd47+72];
	add.s32 	%r39, %r53, 1;
	sub.s32 	%r40, %r39, %r8;
	ld.global.u32 	%r41, [%rd45+4];
	// Callseq Start 44
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd46;
	.param .b32 param1;
	st.param.b32	[param1+0], %r40;
	.param .b32 param2;
	st.param.b32	[param2+0], %r41;
	.param .b32 param3;
	st.param.f32	[param3+0], %f4;
	prototype_44 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd48, 
	(
	param0, 
	param1, 
	param2, 
	param3
	)
	, prototype_44;
	
	//{
	}// Callseq End 44
	ld.global.u64 	%rd49, [%rd8];
	ld.u64 	%rd50, [%rd49];
	ld.u64 	%rd51, [%rd50+72];
	add.s32 	%r42, %r53, 2;
	sub.s32 	%r43, %r42, %r8;
	ld.global.u32 	%r44, [%rd45+8];
	// Callseq Start 45
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd49;
	.param .b32 param1;
	st.param.b32	[param1+0], %r43;
	.param .b32 param2;
	st.param.b32	[param2+0], %r44;
	.param .b32 param3;
	st.param.f32	[param3+0], %f4;
	prototype_45 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd51, 
	(
	param0, 
	param1, 
	param2, 
	param3
	)
	, prototype_45;
	
	//{
	}// Callseq End 45
	ld.global.u64 	%rd52, [%rd8];
	ld.u64 	%rd53, [%rd52];
	ld.u64 	%rd54, [%rd53+72];
	add.s32 	%r45, %r53, 3;
	sub.s32 	%r46, %r45, %r8;
	ld.global.u32 	%r47, [%rd45+12];
	// Callseq Start 46
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd52;
	.param .b32 param1;
	st.param.b32	[param1+0], %r46;
	.param .b32 param2;
	st.param.b32	[param2+0], %r47;
	.param .b32 param3;
	st.param.f32	[param3+0], %f4;
	prototype_46 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd54, 
	(
	param0, 
	param1, 
	param2, 
	param3
	)
	, prototype_46;
	
	//{
	}// Callseq End 46
	add.s32 	%r53, %r53, 4;
	setp.lt.s32	%p10, %r53, %r49;
	@%p10 bra 	BB19_19;

BB19_20:
	ret;
}

	// .globl	_Z11initOutEdgePP10VirtVertexIffEP15GraphChiContextPiS5_
.visible .entry _Z11initOutEdgePP10VirtVertexIffEP15GraphChiContextPiS5_(
	.param .u64 _Z11initOutEdgePP10VirtVertexIffEP15GraphChiContextPiS5__param_0,
	.param .u64 _Z11initOutEdgePP10VirtVertexIffEP15GraphChiContextPiS5__param_1,
	.param .u64 _Z11initOutEdgePP10VirtVertexIffEP15GraphChiContextPiS5__param_2,
	.param .u64 _Z11initOutEdgePP10VirtVertexIffEP15GraphChiContextPiS5__param_3
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<46>;
	.reg .b64 	%rd<43>;


	ld.param.u64 	%rd5, [_Z11initOutEdgePP10VirtVertexIffEP15GraphChiContextPiS5__param_0];
	ld.param.u64 	%rd7, [_Z11initOutEdgePP10VirtVertexIffEP15GraphChiContextPiS5__param_1];
	ld.param.u64 	%rd6, [_Z11initOutEdgePP10VirtVertexIffEP15GraphChiContextPiS5__param_2];
	ld.param.u64 	%rd8, [_Z11initOutEdgePP10VirtVertexIffEP15GraphChiContextPiS5__param_3];
	cvta.to.global.u64 	%rd9, %rd7;
	cvta.to.global.u64 	%rd1, %rd8;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %ntid.x;
	mov.u32 	%r19, %tid.x;
	mad.lo.s32 	%r1, %r17, %r18, %r19;
	add.s64 	%rd2, %rd9, 4;
	ld.global.u32 	%r2, [%rd9+4];
	// Callseq Start 47
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r2;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN15GraphChiContext14getNumVerticesEv, 
	(
	param0
	);
	ld.param.b32	%r20, [retval0+0];
	
	//{
	}// Callseq End 47
	setp.ge.s32	%p1, %r1, %r20;
	@%p1 bra 	BB20_13;

	cvta.to.global.u64 	%rd10, %rd6;
	mul.wide.s32 	%rd11, %r1, 4;
	add.s64 	%rd3, %rd10, %rd11;
	ld.global.u32 	%r3, [%rd3];
	// Callseq Start 48
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r2;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN15GraphChiContext14getNumVerticesEv, 
	(
	param0
	);
	ld.param.b32	%r21, [retval0+0];
	
	//{
	}// Callseq End 48
	add.s32 	%r22, %r1, 1;
	setp.lt.s32	%p2, %r22, %r21;
	@%p2 bra 	BB20_3;
	bra.uni 	BB20_2;

BB20_3:
	ld.global.u32 	%r41, [%rd3+4];
	bra.uni 	BB20_4;

BB20_2:
	ld.global.u32 	%r23, [%rd2+4];
	// Callseq Start 49
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r23;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN15GraphChiContext11getNumEdgesEv, 
	(
	param0
	);
	ld.param.b32	%r41, [retval0+0];
	
	//{
	}// Callseq End 49

BB20_4:
	setp.le.s32	%p3, %r41, %r3;
	@%p3 bra 	BB20_13;

	cvta.to.global.u64 	%rd12, %rd5;
	mul.wide.s32 	%rd13, %r1, 8;
	add.s64 	%rd4, %rd12, %rd13;
	sub.s32 	%r7, %r41, %r3;
	and.b32  	%r8, %r7, 3;
	setp.eq.s32	%p4, %r8, 0;
	mov.u32 	%r45, %r3;
	@%p4 bra 	BB20_11;

	setp.eq.s32	%p5, %r8, 1;
	mov.u32 	%r43, %r3;
	@%p5 bra 	BB20_10;

	setp.eq.s32	%p6, %r8, 2;
	mov.u32 	%r42, %r3;
	@%p6 bra 	BB20_9;

	ld.global.u64 	%rd14, [%rd4];
	ld.u64 	%rd15, [%rd14];
	ld.u64 	%rd16, [%rd15+64];
	mul.wide.s32 	%rd17, %r3, 4;
	add.s64 	%rd18, %rd1, %rd17;
	ld.global.u32 	%r24, [%rd18];
	mov.u32 	%r25, 0;
	mov.f32 	%f1, 0f00000000;
	// Callseq Start 50
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b32 param3;
	st.param.b32	[param3+0], %r25;
	.param .b32 param4;
	st.param.b32	[param4+0], %r24;
	.param .b32 param5;
	st.param.f32	[param5+0], %f1;
	prototype_50 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd16, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	)
	, prototype_50;
	
	//{
	}// Callseq End 50
	add.s32 	%r42, %r3, 1;

BB20_9:
	ld.global.u64 	%rd19, [%rd4];
	ld.u64 	%rd20, [%rd19];
	ld.u64 	%rd21, [%rd20+64];
	mul.wide.s32 	%rd22, %r42, 4;
	add.s64 	%rd23, %rd1, %rd22;
	ld.global.u32 	%r26, [%rd23];
	sub.s32 	%r27, %r42, %r3;
	mov.f32 	%f2, 0f00000000;
	// Callseq Start 51
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b32 param3;
	st.param.b32	[param3+0], %r27;
	.param .b32 param4;
	st.param.b32	[param4+0], %r26;
	.param .b32 param5;
	st.param.f32	[param5+0], %f2;
	prototype_51 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd21, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	)
	, prototype_51;
	
	//{
	}// Callseq End 51
	add.s32 	%r43, %r42, 1;

BB20_10:
	ld.global.u64 	%rd24, [%rd4];
	ld.u64 	%rd25, [%rd24];
	ld.u64 	%rd26, [%rd25+64];
	mul.wide.s32 	%rd27, %r43, 4;
	add.s64 	%rd28, %rd1, %rd27;
	ld.global.u32 	%r28, [%rd28];
	sub.s32 	%r29, %r43, %r3;
	mov.f32 	%f3, 0f00000000;
	// Callseq Start 52
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd24;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b32 param3;
	st.param.b32	[param3+0], %r29;
	.param .b32 param4;
	st.param.b32	[param4+0], %r28;
	.param .b32 param5;
	st.param.f32	[param5+0], %f3;
	prototype_52 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd26, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	)
	, prototype_52;
	
	//{
	}// Callseq End 52
	add.s32 	%r45, %r43, 1;

BB20_11:
	setp.lt.u32	%p7, %r7, 4;
	@%p7 bra 	BB20_13;

BB20_12:
	ld.global.u64 	%rd29, [%rd4];
	ld.u64 	%rd30, [%rd29];
	ld.u64 	%rd31, [%rd30+64];
	mul.wide.s32 	%rd32, %r45, 4;
	add.s64 	%rd33, %rd1, %rd32;
	ld.global.u32 	%r30, [%rd33];
	sub.s32 	%r31, %r45, %r3;
	mov.f32 	%f4, 0f00000000;
	// Callseq Start 53
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd29;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b32 param3;
	st.param.b32	[param3+0], %r31;
	.param .b32 param4;
	st.param.b32	[param4+0], %r30;
	.param .b32 param5;
	st.param.f32	[param5+0], %f4;
	prototype_53 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd31, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	)
	, prototype_53;
	
	//{
	}// Callseq End 53
	ld.global.u64 	%rd34, [%rd4];
	ld.u64 	%rd35, [%rd34];
	ld.u64 	%rd36, [%rd35+64];
	add.s32 	%r32, %r45, 1;
	sub.s32 	%r33, %r32, %r3;
	ld.global.u32 	%r34, [%rd33+4];
	// Callseq Start 54
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd34;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b32 param3;
	st.param.b32	[param3+0], %r33;
	.param .b32 param4;
	st.param.b32	[param4+0], %r34;
	.param .b32 param5;
	st.param.f32	[param5+0], %f4;
	prototype_54 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd36, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	)
	, prototype_54;
	
	//{
	}// Callseq End 54
	ld.global.u64 	%rd37, [%rd4];
	ld.u64 	%rd38, [%rd37];
	ld.u64 	%rd39, [%rd38+64];
	add.s32 	%r35, %r45, 2;
	sub.s32 	%r36, %r35, %r3;
	ld.global.u32 	%r37, [%rd33+8];
	// Callseq Start 55
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd37;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b32 param3;
	st.param.b32	[param3+0], %r36;
	.param .b32 param4;
	st.param.b32	[param4+0], %r37;
	.param .b32 param5;
	st.param.f32	[param5+0], %f4;
	prototype_55 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd39, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	)
	, prototype_55;
	
	//{
	}// Callseq End 55
	ld.global.u64 	%rd40, [%rd4];
	ld.u64 	%rd41, [%rd40];
	ld.u64 	%rd42, [%rd41+64];
	add.s32 	%r38, %r45, 3;
	sub.s32 	%r39, %r38, %r3;
	ld.global.u32 	%r40, [%rd33+12];
	// Callseq Start 56
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd40;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b32 param3;
	st.param.b32	[param3+0], %r39;
	.param .b32 param4;
	st.param.b32	[param4+0], %r40;
	.param .b32 param5;
	st.param.f32	[param5+0], %f4;
	prototype_56 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b32 _, .param .b32 _, .param .b32 _, .param .b32 _);
	call 
	%rd42, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	)
	, prototype_56;
	
	//{
	}// Callseq End 56
	add.s32 	%r45, %r45, 4;
	setp.lt.s32	%p8, %r45, %r41;
	@%p8 bra 	BB20_12;

BB20_13:
	ret;
}

	// .globl	_Z13PageRank_vptrPP10VirtVertexIffEP15GraphChiContexti
.visible .entry _Z13PageRank_vptrPP10VirtVertexIffEP15GraphChiContexti(
	.param .u64 _Z13PageRank_vptrPP10VirtVertexIffEP15GraphChiContexti_param_0,
	.param .u64 _Z13PageRank_vptrPP10VirtVertexIffEP15GraphChiContexti_param_1,
	.param .u32 _Z13PageRank_vptrPP10VirtVertexIffEP15GraphChiContexti_param_2
)
{
	.reg .pred 	%p<51>;
	.reg .f32 	%f<14>;
	.reg .b32 	%r<117>;
	.reg .b64 	%rd<181>;


	ld.param.u64 	%rd33, [_Z13PageRank_vptrPP10VirtVertexIffEP15GraphChiContexti_param_0];
	ld.param.u64 	%rd34, [_Z13PageRank_vptrPP10VirtVertexIffEP15GraphChiContexti_param_1];
	ld.param.u32 	%r53, [_Z13PageRank_vptrPP10VirtVertexIffEP15GraphChiContexti_param_2];
	cvta.to.global.u64 	%rd35, %rd34;
	mov.u32 	%r54, %ctaid.x;
	mov.u32 	%r55, %ntid.x;
	mov.u32 	%r56, %tid.x;
	mad.lo.s32 	%r1, %r54, %r55, %r56;
	ld.global.u32 	%r2, [tree_size_g];
	ld.global.u64 	%rd1, [range_tree];
	ld.global.u32 	%r57, [%rd35+4];
	// Callseq Start 57
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r57;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN15GraphChiContext14getNumVerticesEv, 
	(
	param0
	);
	ld.param.b32	%r58, [retval0+0];
	
	//{
	}// Callseq End 57
	setp.ge.s32	%p1, %r1, %r58;
	@%p1 bra 	BB21_28;

	cvta.to.global.u64 	%rd36, %rd33;
	mul.wide.s32 	%rd37, %r1, 8;
	add.s64 	%rd2, %rd36, %rd37;
	ld.global.u64 	%rd3, [%rd2];
	ld.u64 	%rd38, [%rd1+16];
	setp.gt.u64	%p2, %rd38, %rd3;
	selp.b32	%r97, 1, 2, %p2;
	setp.eq.s32	%p3, %r53, 0;
	@%p3 bra 	BB21_25;

	mov.u64 	%rd170, 0;
	mov.u32 	%r98, 0;
	setp.ge.u32	%p4, %r97, %r2;
	@%p4 bra 	BB21_4;

BB21_3:
	mul.wide.u32 	%rd40, %r97, 32;
	add.s64 	%rd41, %rd1, %rd40;
	ld.u64 	%rd42, [%rd41+16];
	setp.eq.s64	%p5, %rd42, 0;
	add.s32 	%r60, %r98, 1;
	selp.b32	%r61, %r60, %r97, %p5;
	cvt.u64.u32	%rd170, %r61;
	mul.wide.u32 	%rd43, %r61, 32;
	add.s64 	%rd44, %rd1, %rd43;
	ld.u64 	%rd45, [%rd44+16];
	setp.gt.u64	%p6, %rd45, %rd3;
	shl.b32 	%r98, %r61, 1;
	selp.b32	%r62, 1, 2, %p6;
	add.s32 	%r97, %r62, %r98;
	setp.lt.u32	%p7, %r97, %r2;
	@%p7 bra 	BB21_3;

BB21_4:
	shl.b64 	%rd46, %rd170, 5;
	add.s64 	%rd47, %rd1, %rd46;
	ld.u64 	%rd48, [%rd47+24];
	ld.u64 	%rd49, [%rd48+48];

	ld.global.u64 	%rd50, [%rd2];

	// Callseq Start 58
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd50;
	.param .b32 retval0;
	prototype_58 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd49, 
	(
	param0
	)
	, prototype_58;
	ld.param.b32	%r8, [retval0+0];
	
	//{
	}// Callseq End 58
	ld.global.u64 	%rd171, [%rd2];
	mov.f32 	%f13, 0f3E19999A;
	mov.f32 	%f12, 0f00000000;
	mov.u32 	%r63, 0;
	setp.lt.s32	%p8, %r8, 1;
	@%p8 bra 	BB21_12;

	mov.u32 	%r99, %r63;

BB21_6:
	ld.u64 	%rd54, [%rd1+16];
	setp.gt.u64	%p9, %rd54, %rd171;
	selp.b32	%r100, 1, 2, %p9;
	mov.u64 	%rd173, 0;
	setp.ge.u32	%p10, %r100, %r2;
	mov.u32 	%r101, %r63;
	mov.u64 	%rd172, %rd173;
	@%p10 bra 	BB21_8;

BB21_7:
	mul.wide.u32 	%rd55, %r100, 32;
	add.s64 	%rd56, %rd1, %rd55;
	ld.u64 	%rd57, [%rd56+16];
	setp.eq.s64	%p11, %rd57, 0;
	add.s32 	%r65, %r101, 1;
	selp.b32	%r66, %r65, %r100, %p11;
	cvt.u64.u32	%rd172, %r66;
	mul.wide.u32 	%rd58, %r66, 32;
	add.s64 	%rd59, %rd1, %rd58;
	ld.u64 	%rd60, [%rd59+16];
	setp.gt.u64	%p12, %rd60, %rd171;
	shl.b32 	%r101, %r66, 1;
	selp.b32	%r67, 1, 2, %p12;
	add.s32 	%r100, %r67, %r101;
	setp.lt.u32	%p13, %r100, %r2;
	@%p13 bra 	BB21_7;

BB21_8:
	shl.b64 	%rd62, %rd172, 5;
	add.s64 	%rd63, %rd1, %rd62;
	ld.u64 	%rd64, [%rd63+24];
	ld.u64 	%rd65, [%rd64+64];

	ld.global.u64 	%rd66, [%rd2];

	// Callseq Start 59
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd66;
	.param .b32 param1;
	st.param.b32	[param1+0], %r99;
	.param .b64 retval0;
	prototype_59 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _);
	call (retval0), 
	%rd65, 
	(
	param0, 
	param1
	)
	, prototype_59;
	ld.param.b64	%rd10, [retval0+0];
	
	//{
	}// Callseq End 59
	ld.u64 	%rd69, [%rd1+16];
	setp.gt.u64	%p14, %rd69, %rd10;
	selp.b32	%r102, 1, 2, %p14;
	mov.u32 	%r103, 0;
	setp.ge.u32	%p15, %r102, %r2;
	@%p15 bra 	BB21_10;

BB21_9:
	mul.wide.u32 	%rd70, %r102, 32;
	add.s64 	%rd71, %rd1, %rd70;
	ld.u64 	%rd72, [%rd71+16];
	setp.eq.s64	%p16, %rd72, 0;
	add.s32 	%r69, %r103, 1;
	selp.b32	%r70, %r69, %r102, %p16;
	cvt.u64.u32	%rd173, %r70;
	mul.wide.u32 	%rd73, %r70, 32;
	add.s64 	%rd74, %rd1, %rd73;
	ld.u64 	%rd75, [%rd74+16];
	setp.gt.u64	%p17, %rd75, %rd10;
	shl.b32 	%r103, %r70, 1;
	selp.b32	%r71, 1, 2, %p17;
	add.s32 	%r102, %r71, %r103;
	setp.lt.u32	%p18, %r102, %r2;
	@%p18 bra 	BB21_9;

BB21_10:
	shl.b64 	%rd76, %rd173, 5;
	add.s64 	%rd77, %rd1, %rd76;
	ld.u64 	%rd78, [%rd77+24];
	ld.u64 	%rd79, [%rd78+24];

	// Callseq Start 60
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b32 retval0;
	prototype_60 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd79, 
	(
	param0
	)
	, prototype_60;
	ld.param.f32	%f8, [retval0+0];
	
	//{
	}// Callseq End 60
	add.f32 	%f12, %f12, %f8;
	add.s32 	%r99, %r99, 1;
	setp.lt.s32	%p19, %r99, %r8;
	ld.global.u64 	%rd171, [%rd2];
	@%p19 bra 	BB21_6;

	fma.rn.f32 	%f13, %f12, 0f3F59999A, 0f3E19999A;

BB21_12:
	ld.u64 	%rd83, [%rd1+16];
	setp.gt.u64	%p20, %rd83, %rd171;
	selp.b32	%r104, 1, 2, %p20;
	mov.u64 	%rd177, 0;
	mov.u32 	%r105, 0;
	setp.ge.u32	%p21, %r104, %r2;
	mov.u64 	%rd175, %rd177;
	@%p21 bra 	BB21_14;

BB21_13:
	mul.wide.u32 	%rd84, %r104, 32;
	add.s64 	%rd85, %rd1, %rd84;
	ld.u64 	%rd86, [%rd85+16];
	setp.eq.s64	%p22, %rd86, 0;
	add.s32 	%r73, %r105, 1;
	selp.b32	%r74, %r73, %r104, %p22;
	cvt.u64.u32	%rd175, %r74;
	mul.wide.u32 	%rd87, %r74, 32;
	add.s64 	%rd88, %rd1, %rd87;
	ld.u64 	%rd89, [%rd88+16];
	setp.gt.u64	%p23, %rd89, %rd171;
	shl.b32 	%r105, %r74, 1;
	selp.b32	%r75, 1, 2, %p23;
	add.s32 	%r104, %r75, %r105;
	setp.lt.u32	%p24, %r104, %r2;
	@%p24 bra 	BB21_13;

BB21_14:
	shl.b64 	%rd91, %rd175, 5;
	add.s64 	%rd92, %rd1, %rd91;
	ld.u64 	%rd93, [%rd92+24];
	ld.u64 	%rd94, [%rd93+40];

	ld.global.u64 	%rd95, [%rd2];

	// Callseq Start 61
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd95;
	.param .b32 param1;
	st.param.f32	[param1+0], %f13;
	prototype_61 : .callprototype ()_ (.param .b64 _, .param .b32 _);
	call 
	%rd94, 
	(
	param0, 
	param1
	)
	, prototype_61;
	
	//{
	}// Callseq End 61
	ld.global.u64 	%rd19, [%rd2];
	ld.u64 	%rd98, [%rd1+16];
	setp.gt.u64	%p25, %rd98, %rd19;
	selp.b32	%r106, 1, 2, %p25;
	mov.u32 	%r107, 0;
	setp.ge.u32	%p26, %r106, %r2;
	mov.u64 	%rd176, %rd177;
	@%p26 bra 	BB21_16;

BB21_15:
	mul.wide.u32 	%rd99, %r106, 32;
	add.s64 	%rd100, %rd1, %rd99;
	ld.u64 	%rd101, [%rd100+16];
	setp.eq.s64	%p27, %rd101, 0;
	add.s32 	%r77, %r107, 1;
	selp.b32	%r78, %r77, %r106, %p27;
	cvt.u64.u32	%rd176, %r78;
	mul.wide.u32 	%rd102, %r78, 32;
	add.s64 	%rd103, %rd1, %rd102;
	ld.u64 	%rd104, [%rd103+16];
	setp.gt.u64	%p28, %rd104, %rd19;
	shl.b32 	%r107, %r78, 1;
	selp.b32	%r79, 1, 2, %p28;
	add.s32 	%r106, %r79, %r107;
	setp.lt.u32	%p29, %r106, %r2;
	@%p29 bra 	BB21_15;

BB21_16:
	shl.b64 	%rd106, %rd176, 5;
	add.s64 	%rd107, %rd1, %rd106;
	ld.u64 	%rd108, [%rd107+24];
	ld.u64 	%rd109, [%rd108+56];

	ld.global.u64 	%rd110, [%rd2];

	// Callseq Start 62
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd110;
	.param .b32 retval0;
	prototype_62 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd109, 
	(
	param0
	)
	, prototype_62;
	ld.param.b32	%r31, [retval0+0];
	
	//{
	}// Callseq End 62
	ld.global.u64 	%rd22, [%rd2];
	ld.u64 	%rd113, [%rd1+16];
	setp.gt.u64	%p30, %rd113, %rd22;
	selp.b32	%r108, 1, 2, %p30;
	mov.u32 	%r109, 0;
	setp.ge.u32	%p31, %r108, %r2;
	@%p31 bra 	BB21_18;

BB21_17:
	mul.wide.u32 	%rd114, %r108, 32;
	add.s64 	%rd115, %rd1, %rd114;
	ld.u64 	%rd116, [%rd115+16];
	setp.eq.s64	%p32, %rd116, 0;
	add.s32 	%r81, %r109, 1;
	selp.b32	%r82, %r81, %r108, %p32;
	cvt.u64.u32	%rd177, %r82;
	mul.wide.u32 	%rd117, %r82, 32;
	add.s64 	%rd118, %rd1, %rd117;
	ld.u64 	%rd119, [%rd118+16];
	setp.gt.u64	%p33, %rd119, %rd22;
	shl.b32 	%r109, %r82, 1;
	selp.b32	%r83, 1, 2, %p33;
	add.s32 	%r108, %r83, %r109;
	setp.lt.u32	%p34, %r108, %r2;
	@%p34 bra 	BB21_17;

BB21_18:
	shl.b64 	%rd120, %rd177, 5;
	add.s64 	%rd121, %rd1, %rd120;
	ld.u64 	%rd122, [%rd121+24];
	ld.u64 	%rd123, [%rd122+32];

	ld.global.u64 	%rd124, [%rd2];

	// Callseq Start 63
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd124;
	.param .b32 retval0;
	prototype_63 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd123, 
	(
	param0
	)
	, prototype_63;
	ld.param.f32	%f9, [retval0+0];
	
	//{
	}// Callseq End 63
	cvt.rn.f32.s32	%f10, %r31;
	div.rn.f32 	%f5, %f9, %f10;
	mov.u32 	%r84, 0;
	setp.lt.s32	%p35, %r31, 1;
	@%p35 bra 	BB21_28;

	mov.u32 	%r110, %r84;

BB21_20:
	ld.global.u64 	%rd25, [%rd2];
	ld.u64 	%rd128, [%rd1+16];
	setp.gt.u64	%p36, %rd128, %rd25;
	selp.b32	%r111, 1, 2, %p36;
	mov.u64 	%rd179, 0;
	setp.ge.u32	%p37, %r111, %r2;
	mov.u32 	%r112, %r84;
	mov.u64 	%rd178, %rd179;
	@%p37 bra 	BB21_22;

BB21_21:
	mul.wide.u32 	%rd129, %r111, 32;
	add.s64 	%rd130, %rd1, %rd129;
	ld.u64 	%rd131, [%rd130+16];
	setp.eq.s64	%p38, %rd131, 0;
	add.s32 	%r86, %r112, 1;
	selp.b32	%r87, %r86, %r111, %p38;
	cvt.u64.u32	%rd178, %r87;
	mul.wide.u32 	%rd132, %r87, 32;
	add.s64 	%rd133, %rd1, %rd132;
	ld.u64 	%rd134, [%rd133+16];
	setp.gt.u64	%p39, %rd134, %rd25;
	shl.b32 	%r112, %r87, 1;
	selp.b32	%r88, 1, 2, %p39;
	add.s32 	%r111, %r88, %r112;
	setp.lt.u32	%p40, %r111, %r2;
	@%p40 bra 	BB21_21;

BB21_22:
	shl.b64 	%rd136, %rd178, 5;
	add.s64 	%rd137, %rd1, %rd136;
	ld.u64 	%rd138, [%rd137+24];
	ld.u64 	%rd139, [%rd138+72];

	ld.global.u64 	%rd140, [%rd2];

	// Callseq Start 64
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd140;
	.param .b32 param1;
	st.param.b32	[param1+0], %r110;
	.param .b64 retval0;
	prototype_64 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _);
	call (retval0), 
	%rd139, 
	(
	param0, 
	param1
	)
	, prototype_64;
	ld.param.b64	%rd28, [retval0+0];
	
	//{
	}// Callseq End 64
	ld.u64 	%rd143, [%rd1+16];
	setp.gt.u64	%p41, %rd143, %rd28;
	selp.b32	%r113, 1, 2, %p41;
	mov.u32 	%r114, 0;
	setp.ge.u32	%p42, %r113, %r2;
	@%p42 bra 	BB21_24;

BB21_23:
	mul.wide.u32 	%rd144, %r113, 32;
	add.s64 	%rd145, %rd1, %rd144;
	ld.u64 	%rd146, [%rd145+16];
	setp.eq.s64	%p43, %rd146, 0;
	add.s32 	%r90, %r114, 1;
	selp.b32	%r91, %r90, %r113, %p43;
	cvt.u64.u32	%rd179, %r91;
	mul.wide.u32 	%rd147, %r91, 32;
	add.s64 	%rd148, %rd1, %rd147;
	ld.u64 	%rd149, [%rd148+16];
	setp.gt.u64	%p44, %rd149, %rd28;
	shl.b32 	%r114, %r91, 1;
	selp.b32	%r92, 1, 2, %p44;
	add.s32 	%r113, %r92, %r114;
	setp.lt.u32	%p45, %r113, %r2;
	@%p45 bra 	BB21_23;

BB21_24:
	shl.b64 	%rd150, %rd179, 5;
	add.s64 	%rd151, %rd1, %rd150;
	ld.u64 	%rd152, [%rd151+24];
	ld.u64 	%rd153, [%rd152+32];

	// Callseq Start 65
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd28;
	.param .b32 param1;
	st.param.f32	[param1+0], %f5;
	prototype_65 : .callprototype ()_ (.param .b64 _, .param .b32 _);
	call 
	%rd153, 
	(
	param0, 
	param1
	)
	, prototype_65;
	
	//{
	}// Callseq End 65
	add.s32 	%r110, %r110, 1;
	setp.lt.s32	%p46, %r110, %r31;
	@%p46 bra 	BB21_20;
	bra.uni 	BB21_28;

BB21_25:
	mov.u64 	%rd180, 0;
	mov.u32 	%r116, 0;
	setp.ge.u32	%p47, %r97, %r2;
	@%p47 bra 	BB21_27;

BB21_26:
	mul.wide.u32 	%rd157, %r97, 32;
	add.s64 	%rd158, %rd1, %rd157;
	ld.u64 	%rd159, [%rd158+16];
	setp.eq.s64	%p48, %rd159, 0;
	add.s32 	%r94, %r116, 1;
	selp.b32	%r95, %r94, %r97, %p48;
	cvt.u64.u32	%rd180, %r95;
	mul.wide.u32 	%rd160, %r95, 32;
	add.s64 	%rd161, %rd1, %rd160;
	ld.u64 	%rd162, [%rd161+16];
	setp.gt.u64	%p49, %rd162, %rd3;
	shl.b32 	%r116, %r95, 1;
	selp.b32	%r96, 1, 2, %p49;
	add.s32 	%r97, %r96, %r116;
	setp.lt.u32	%p50, %r97, %r2;
	@%p50 bra 	BB21_26;

BB21_27:
	shl.b64 	%rd163, %rd180, 5;
	add.s64 	%rd164, %rd1, %rd163;
	ld.u64 	%rd165, [%rd164+24];
	ld.u64 	%rd166, [%rd165+40];

	ld.global.u64 	%rd167, [%rd2];

	mov.f32 	%f11, 0f3F800000;
	// Callseq Start 66
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd167;
	.param .b32 param1;
	st.param.f32	[param1+0], %f11;
	prototype_66 : .callprototype ()_ (.param .b64 _, .param .b32 _);
	call 
	%rd166, 
	(
	param0, 
	param1
	)
	, prototype_66;
	
	//{
	}// Callseq End 66

BB21_28:
	ret;
}

	// .globl	_Z8PageRankPP10VirtVertexIffEP15GraphChiContexti
.visible .entry _Z8PageRankPP10VirtVertexIffEP15GraphChiContexti(
	.param .u64 _Z8PageRankPP10VirtVertexIffEP15GraphChiContexti_param_0,
	.param .u64 _Z8PageRankPP10VirtVertexIffEP15GraphChiContexti_param_1,
	.param .u32 _Z8PageRankPP10VirtVertexIffEP15GraphChiContexti_param_2
)
{
	.reg .pred 	%p<15>;
	.reg .f32 	%f<36>;
	.reg .b32 	%r<84>;
	.reg .b64 	%rd<156>;


	ld.param.u64 	%rd29, [_Z8PageRankPP10VirtVertexIffEP15GraphChiContexti_param_0];
	ld.param.u64 	%rd30, [_Z8PageRankPP10VirtVertexIffEP15GraphChiContexti_param_1];
	ld.param.u32 	%r19, [_Z8PageRankPP10VirtVertexIffEP15GraphChiContexti_param_2];
	cvta.to.global.u64 	%rd31, %rd30;
	mov.u32 	%r20, %ctaid.x;
	mov.u32 	%r21, %ntid.x;
	mov.u32 	%r22, %tid.x;
	mad.lo.s32 	%r1, %r20, %r21, %r22;
	ld.global.u32 	%r23, [%rd31+4];
	// Callseq Start 67
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r23;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN15GraphChiContext14getNumVerticesEv, 
	(
	param0
	);
	ld.param.b32	%r24, [retval0+0];
	
	//{
	}// Callseq End 67
	setp.ge.s32	%p1, %r1, %r24;
	@%p1 bra 	BB22_23;

	cvta.to.global.u64 	%rd32, %rd29;
	mul.wide.s32 	%rd33, %r1, 8;
	add.s64 	%rd1, %rd32, %rd33;
	ld.global.u64 	%rd2, [%rd1];
	ld.u64 	%rd34, [%rd2];
	add.s64 	%rd3, %rd34, 24;
	setp.eq.s32	%p2, %r19, 0;
	@%p2 bra 	BB22_22;

	ld.u64 	%rd35, [%rd3+8];
	// Callseq Start 68
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_68 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd35, 
	(
	param0
	)
	, prototype_68;
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 68
	ld.global.u64 	%rd152, [%rd1];
	ld.u64 	%rd153, [%rd152];
	mov.f32 	%f35, 0f3E19999A;
	setp.lt.s32	%p3, %r2, 1;
	@%p3 bra 	BB22_13;

	and.b32  	%r26, %r2, 3;
	setp.eq.s32	%p4, %r26, 0;
	mov.u64 	%rd149, 0;
	mov.f32 	%f34, 0f00000000;
	mov.u32 	%r78, 0;
	@%p4 bra 	BB22_9;

	setp.eq.s32	%p5, %r26, 1;
	mov.f32 	%f31, 0f00000000;
	mov.u32 	%r77, 0;
	@%p5 bra 	BB22_8;

	setp.eq.s32	%p6, %r26, 2;
	mov.f32 	%f30, 0f00000000;
	mov.u32 	%r76, 0;
	@%p6 bra 	BB22_7;

	ld.u64 	%rd37, [%rd153+48];
	mov.u32 	%r32, 0;
	// Callseq Start 69
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd152;
	.param .b32 param1;
	st.param.b32	[param1+0], %r32;
	.param .b64 retval0;
	prototype_69 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _);
	call (retval0), 
	%rd37, 
	(
	param0, 
	param1
	)
	, prototype_69;
	ld.param.b64	%rd38, [retval0+0];
	
	//{
	}// Callseq End 69
	ld.u64 	%rd39, [%rd38];
	ld.u64 	%rd40, [%rd39+8];
	// Callseq Start 70
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd38;
	.param .b32 retval0;
	prototype_70 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd40, 
	(
	param0
	)
	, prototype_70;
	ld.param.f32	%f17, [retval0+0];
	
	//{
	}// Callseq End 70
	add.f32 	%f30, %f17, 0f00000000;
	ld.global.u64 	%rd152, [%rd1];
	ld.u64 	%rd153, [%rd152];
	mov.u32 	%r76, 1;

BB22_7:
	ld.u64 	%rd44, [%rd153+48];
	// Callseq Start 71
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd152;
	.param .b32 param1;
	st.param.b32	[param1+0], %r76;
	.param .b64 retval0;
	prototype_71 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _);
	call (retval0), 
	%rd44, 
	(
	param0, 
	param1
	)
	, prototype_71;
	ld.param.b64	%rd45, [retval0+0];
	
	//{
	}// Callseq End 71
	ld.u64 	%rd46, [%rd45];
	ld.u64 	%rd47, [%rd46+8];
	// Callseq Start 72
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd45;
	.param .b32 retval0;
	prototype_72 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd47, 
	(
	param0
	)
	, prototype_72;
	ld.param.f32	%f18, [retval0+0];
	
	//{
	}// Callseq End 72
	add.f32 	%f31, %f30, %f18;
	add.s32 	%r77, %r76, 1;
	ld.global.u64 	%rd152, [%rd1];
	ld.u64 	%rd153, [%rd152];

BB22_8:
	ld.u64 	%rd51, [%rd153+48];
	// Callseq Start 73
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd152;
	.param .b32 param1;
	st.param.b32	[param1+0], %r77;
	.param .b64 retval0;
	prototype_73 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _);
	call (retval0), 
	%rd51, 
	(
	param0, 
	param1
	)
	, prototype_73;
	ld.param.b64	%rd52, [retval0+0];
	
	//{
	}// Callseq End 73
	ld.u64 	%rd53, [%rd52];
	ld.u64 	%rd54, [%rd53+8];
	// Callseq Start 74
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd52;
	.param .b32 retval0;
	prototype_74 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd54, 
	(
	param0
	)
	, prototype_74;
	ld.param.f32	%f19, [retval0+0];
	
	//{
	}// Callseq End 74
	add.f32 	%f34, %f31, %f19;
	add.s32 	%r78, %r77, 1;
	ld.global.u64 	%rd152, [%rd1];
	ld.u64 	%rd153, [%rd152];
	mov.u64 	%rd149, %rd153;

BB22_9:
	setp.lt.u32	%p7, %r2, 4;
	@%p7 bra 	BB22_10;
	bra.uni 	BB22_11;

BB22_10:
	mov.u64 	%rd153, %rd149;
	bra.uni 	BB22_12;

BB22_11:
	ld.u64 	%rd60, [%rd153+48];
	// Callseq Start 75
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd152;
	.param .b32 param1;
	st.param.b32	[param1+0], %r78;
	.param .b64 retval0;
	prototype_75 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _);
	call (retval0), 
	%rd60, 
	(
	param0, 
	param1
	)
	, prototype_75;
	ld.param.b64	%rd61, [retval0+0];
	
	//{
	}// Callseq End 75
	ld.u64 	%rd62, [%rd61];
	ld.u64 	%rd63, [%rd62+8];
	// Callseq Start 76
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd61;
	.param .b32 retval0;
	prototype_76 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd63, 
	(
	param0
	)
	, prototype_76;
	ld.param.f32	%f20, [retval0+0];
	
	//{
	}// Callseq End 76
	add.f32 	%f21, %f34, %f20;
	ld.global.u64 	%rd64, [%rd1];
	ld.u64 	%rd65, [%rd64];
	ld.u64 	%rd66, [%rd65+48];
	add.s32 	%r49, %r78, 1;
	// Callseq Start 77
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd64;
	.param .b32 param1;
	st.param.b32	[param1+0], %r49;
	.param .b64 retval0;
	prototype_77 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _);
	call (retval0), 
	%rd66, 
	(
	param0, 
	param1
	)
	, prototype_77;
	ld.param.b64	%rd67, [retval0+0];
	
	//{
	}// Callseq End 77
	ld.u64 	%rd68, [%rd67];
	ld.u64 	%rd69, [%rd68+8];
	// Callseq Start 78
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd67;
	.param .b32 retval0;
	prototype_78 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd69, 
	(
	param0
	)
	, prototype_78;
	ld.param.f32	%f22, [retval0+0];
	
	//{
	}// Callseq End 78
	add.f32 	%f23, %f21, %f22;
	ld.global.u64 	%rd70, [%rd1];
	ld.u64 	%rd71, [%rd70];
	ld.u64 	%rd72, [%rd71+48];
	add.s32 	%r50, %r78, 2;
	// Callseq Start 79
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd70;
	.param .b32 param1;
	st.param.b32	[param1+0], %r50;
	.param .b64 retval0;
	prototype_79 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _);
	call (retval0), 
	%rd72, 
	(
	param0, 
	param1
	)
	, prototype_79;
	ld.param.b64	%rd73, [retval0+0];
	
	//{
	}// Callseq End 79
	ld.u64 	%rd74, [%rd73];
	ld.u64 	%rd75, [%rd74+8];
	// Callseq Start 80
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd73;
	.param .b32 retval0;
	prototype_80 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd75, 
	(
	param0
	)
	, prototype_80;
	ld.param.f32	%f24, [retval0+0];
	
	//{
	}// Callseq End 80
	add.f32 	%f25, %f23, %f24;
	ld.global.u64 	%rd76, [%rd1];
	ld.u64 	%rd77, [%rd76];
	ld.u64 	%rd78, [%rd77+48];
	add.s32 	%r51, %r78, 3;
	// Callseq Start 81
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd76;
	.param .b32 param1;
	st.param.b32	[param1+0], %r51;
	.param .b64 retval0;
	prototype_81 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _);
	call (retval0), 
	%rd78, 
	(
	param0, 
	param1
	)
	, prototype_81;
	ld.param.b64	%rd79, [retval0+0];
	
	//{
	}// Callseq End 81
	ld.u64 	%rd80, [%rd79];
	ld.u64 	%rd81, [%rd80+8];
	// Callseq Start 82
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd79;
	.param .b32 retval0;
	prototype_82 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd81, 
	(
	param0
	)
	, prototype_82;
	ld.param.f32	%f26, [retval0+0];
	
	//{
	}// Callseq End 82
	add.f32 	%f34, %f25, %f26;
	ld.global.u64 	%rd152, [%rd1];
	ld.u64 	%rd153, [%rd152];
	add.s32 	%r78, %r78, 4;
	setp.lt.s32	%p8, %r78, %r2;
	@%p8 bra 	BB22_11;

BB22_12:
	fma.rn.f32 	%f35, %f34, 0f3F59999A, 0f3E19999A;

BB22_13:
	ld.u64 	%rd82, [%rd153+24];
	// Callseq Start 83
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd152;
	.param .b32 param1;
	st.param.f32	[param1+0], %f35;
	prototype_83 : .callprototype ()_ (.param .b64 _, .param .b32 _);
	call 
	%rd82, 
	(
	param0, 
	param1
	)
	, prototype_83;
	
	//{
	}// Callseq End 83
	ld.global.u64 	%rd85, [%rd1];
	ld.u64 	%rd86, [%rd85];
	ld.u64 	%rd87, [%rd86+40];
	// Callseq Start 84
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd85;
	.param .b32 retval0;
	prototype_84 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd87, 
	(
	param0
	)
	, prototype_84;
	ld.param.b32	%r10, [retval0+0];
	
	//{
	}// Callseq End 84
	ld.global.u64 	%rd88, [%rd1];
	ld.u64 	%rd89, [%rd88];
	ld.u64 	%rd90, [%rd89+16];
	// Callseq Start 85
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd88;
	.param .b32 retval0;
	prototype_85 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd90, 
	(
	param0
	)
	, prototype_85;
	ld.param.f32	%f27, [retval0+0];
	
	//{
	}// Callseq End 85
	cvt.rn.f32.s32	%f28, %r10;
	div.rn.f32 	%f12, %f27, %f28;
	setp.lt.s32	%p9, %r10, 1;
	@%p9 bra 	BB22_23;

	and.b32  	%r11, %r10, 3;
	setp.eq.s32	%p10, %r11, 0;
	mov.u32 	%r83, 0;
	@%p10 bra 	BB22_20;

	setp.eq.s32	%p11, %r11, 1;
	mov.u32 	%r81, 0;
	@%p11 bra 	BB22_19;

	setp.eq.s32	%p12, %r11, 2;
	mov.u32 	%r80, 0;
	@%p12 bra 	BB22_18;

	ld.global.u64 	%rd94, [%rd1];
	ld.u64 	%rd95, [%rd94];
	ld.u64 	%rd96, [%rd95+56];
	mov.u32 	%r64, 0;
	// Callseq Start 86
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd94;
	.param .b32 param1;
	st.param.b32	[param1+0], %r64;
	.param .b64 retval0;
	prototype_86 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _);
	call (retval0), 
	%rd96, 
	(
	param0, 
	param1
	)
	, prototype_86;
	ld.param.b64	%rd97, [retval0+0];
	
	//{
	}// Callseq End 86
	ld.u64 	%rd98, [%rd97];
	ld.u64 	%rd99, [%rd98+16];
	// Callseq Start 87
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd97;
	.param .b32 param1;
	st.param.f32	[param1+0], %f12;
	prototype_87 : .callprototype ()_ (.param .b64 _, .param .b32 _);
	call 
	%rd99, 
	(
	param0, 
	param1
	)
	, prototype_87;
	
	//{
	}// Callseq End 87
	mov.u32 	%r80, 1;

BB22_18:
	ld.global.u64 	%rd103, [%rd1];
	ld.u64 	%rd104, [%rd103];
	ld.u64 	%rd105, [%rd104+56];
	// Callseq Start 88
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd103;
	.param .b32 param1;
	st.param.b32	[param1+0], %r80;
	.param .b64 retval0;
	prototype_88 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _);
	call (retval0), 
	%rd105, 
	(
	param0, 
	param1
	)
	, prototype_88;
	ld.param.b64	%rd106, [retval0+0];
	
	//{
	}// Callseq End 88
	ld.u64 	%rd107, [%rd106];
	ld.u64 	%rd108, [%rd107+16];
	// Callseq Start 89
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd106;
	.param .b32 param1;
	st.param.f32	[param1+0], %f12;
	prototype_89 : .callprototype ()_ (.param .b64 _, .param .b32 _);
	call 
	%rd108, 
	(
	param0, 
	param1
	)
	, prototype_89;
	
	//{
	}// Callseq End 89
	add.s32 	%r81, %r80, 1;

BB22_19:
	ld.global.u64 	%rd112, [%rd1];
	ld.u64 	%rd113, [%rd112];
	ld.u64 	%rd114, [%rd113+56];
	// Callseq Start 90
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd112;
	.param .b32 param1;
	st.param.b32	[param1+0], %r81;
	.param .b64 retval0;
	prototype_90 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _);
	call (retval0), 
	%rd114, 
	(
	param0, 
	param1
	)
	, prototype_90;
	ld.param.b64	%rd115, [retval0+0];
	
	//{
	}// Callseq End 90
	ld.u64 	%rd116, [%rd115];
	ld.u64 	%rd117, [%rd116+16];
	// Callseq Start 91
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd115;
	.param .b32 param1;
	st.param.f32	[param1+0], %f12;
	prototype_91 : .callprototype ()_ (.param .b64 _, .param .b32 _);
	call 
	%rd117, 
	(
	param0, 
	param1
	)
	, prototype_91;
	
	//{
	}// Callseq End 91
	add.s32 	%r83, %r81, 1;

BB22_20:
	setp.lt.u32	%p13, %r10, 4;
	@%p13 bra 	BB22_23;

BB22_21:
	ld.global.u64 	%rd118, [%rd1];
	ld.u64 	%rd119, [%rd118];
	ld.u64 	%rd120, [%rd119+56];
	// Callseq Start 92
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd118;
	.param .b32 param1;
	st.param.b32	[param1+0], %r83;
	.param .b64 retval0;
	prototype_92 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _);
	call (retval0), 
	%rd120, 
	(
	param0, 
	param1
	)
	, prototype_92;
	ld.param.b64	%rd121, [retval0+0];
	
	//{
	}// Callseq End 92
	ld.u64 	%rd122, [%rd121];
	ld.u64 	%rd123, [%rd122+16];
	// Callseq Start 93
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd121;
	.param .b32 param1;
	st.param.f32	[param1+0], %f12;
	prototype_93 : .callprototype ()_ (.param .b64 _, .param .b32 _);
	call 
	%rd123, 
	(
	param0, 
	param1
	)
	, prototype_93;
	
	//{
	}// Callseq End 93
	ld.global.u64 	%rd124, [%rd1];
	ld.u64 	%rd125, [%rd124];
	ld.u64 	%rd126, [%rd125+56];
	add.s32 	%r73, %r83, 1;
	// Callseq Start 94
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd124;
	.param .b32 param1;
	st.param.b32	[param1+0], %r73;
	.param .b64 retval0;
	prototype_94 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _);
	call (retval0), 
	%rd126, 
	(
	param0, 
	param1
	)
	, prototype_94;
	ld.param.b64	%rd127, [retval0+0];
	
	//{
	}// Callseq End 94
	ld.u64 	%rd128, [%rd127];
	ld.u64 	%rd129, [%rd128+16];
	// Callseq Start 95
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd127;
	.param .b32 param1;
	st.param.f32	[param1+0], %f12;
	prototype_95 : .callprototype ()_ (.param .b64 _, .param .b32 _);
	call 
	%rd129, 
	(
	param0, 
	param1
	)
	, prototype_95;
	
	//{
	}// Callseq End 95
	ld.global.u64 	%rd130, [%rd1];
	ld.u64 	%rd131, [%rd130];
	ld.u64 	%rd132, [%rd131+56];
	add.s32 	%r74, %r83, 2;
	// Callseq Start 96
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd130;
	.param .b32 param1;
	st.param.b32	[param1+0], %r74;
	.param .b64 retval0;
	prototype_96 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _);
	call (retval0), 
	%rd132, 
	(
	param0, 
	param1
	)
	, prototype_96;
	ld.param.b64	%rd133, [retval0+0];
	
	//{
	}// Callseq End 96
	ld.u64 	%rd134, [%rd133];
	ld.u64 	%rd135, [%rd134+16];
	// Callseq Start 97
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd133;
	.param .b32 param1;
	st.param.f32	[param1+0], %f12;
	prototype_97 : .callprototype ()_ (.param .b64 _, .param .b32 _);
	call 
	%rd135, 
	(
	param0, 
	param1
	)
	, prototype_97;
	
	//{
	}// Callseq End 97
	ld.global.u64 	%rd136, [%rd1];
	ld.u64 	%rd137, [%rd136];
	ld.u64 	%rd138, [%rd137+56];
	add.s32 	%r75, %r83, 3;
	// Callseq Start 98
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd136;
	.param .b32 param1;
	st.param.b32	[param1+0], %r75;
	.param .b64 retval0;
	prototype_98 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _);
	call (retval0), 
	%rd138, 
	(
	param0, 
	param1
	)
	, prototype_98;
	ld.param.b64	%rd139, [retval0+0];
	
	//{
	}// Callseq End 98
	ld.u64 	%rd140, [%rd139];
	ld.u64 	%rd141, [%rd140+16];
	// Callseq Start 99
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd139;
	.param .b32 param1;
	st.param.f32	[param1+0], %f12;
	prototype_99 : .callprototype ()_ (.param .b64 _, .param .b32 _);
	call 
	%rd141, 
	(
	param0, 
	param1
	)
	, prototype_99;
	
	//{
	}// Callseq End 99
	add.s32 	%r83, %r83, 4;
	setp.lt.s32	%p14, %r83, %r10;
	@%p14 bra 	BB22_21;
	bra.uni 	BB22_23;

BB22_22:
	ld.u64 	%rd142, [%rd3];
	mov.f32 	%f29, 0f3F800000;
	// Callseq Start 100
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 param1;
	st.param.f32	[param1+0], %f29;
	prototype_100 : .callprototype ()_ (.param .b64 _, .param .b32 _);
	call 
	%rd142, 
	(
	param0, 
	param1
	)
	, prototype_100;
	
	//{
	}// Callseq End 100

BB22_23:
	ret;
}

	// .globl	_Z8copyBackPP10VirtVertexIffEP15GraphChiContextPf
.visible .entry _Z8copyBackPP10VirtVertexIffEP15GraphChiContextPf(
	.param .u64 _Z8copyBackPP10VirtVertexIffEP15GraphChiContextPf_param_0,
	.param .u64 _Z8copyBackPP10VirtVertexIffEP15GraphChiContextPf_param_1,
	.param .u64 _Z8copyBackPP10VirtVertexIffEP15GraphChiContextPf_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd1, [_Z8copyBackPP10VirtVertexIffEP15GraphChiContextPf_param_0];
	ld.param.u64 	%rd3, [_Z8copyBackPP10VirtVertexIffEP15GraphChiContextPf_param_1];
	ld.param.u64 	%rd2, [_Z8copyBackPP10VirtVertexIffEP15GraphChiContextPf_param_2];
	cvta.to.global.u64 	%rd4, %rd3;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %tid.x;
	mad.lo.s32 	%r1, %r2, %r3, %r4;
	ld.global.u32 	%r5, [%rd4+4];
	// Callseq Start 101
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r5;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN15GraphChiContext14getNumVerticesEv, 
	(
	param0
	);
	ld.param.b32	%r6, [retval0+0];
	
	//{
	}// Callseq End 101
	setp.ge.s32	%p1, %r1, %r6;
	@%p1 bra 	BB23_2;

	cvta.to.global.u64 	%rd5, %rd1;
	mul.wide.s32 	%rd6, %r1, 8;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.u64 	%rd8, [%rd7];
	ld.u64 	%rd9, [%rd8];
	ld.u64 	%rd10, [%rd9+16];
	// Callseq Start 102
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b32 retval0;
	prototype_102 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd10, 
	(
	param0
	)
	, prototype_102;
	ld.param.f32	%f1, [retval0+0];
	
	//{
	}// Callseq End 102
	cvta.to.global.u64 	%rd11, %rd2;
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd13, %rd11, %rd12;
	st.global.f32 	[%rd13], %f1;

BB23_2:
	ret;
}

	// .globl	_Z11dump_vtableI9ChiVertexIffEEvPPv
.visible .entry _Z11dump_vtableI9ChiVertexIffEEvPPv(
	.param .u64 _Z11dump_vtableI9ChiVertexIffEEvPPv_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .b64 	%rd<39>;


	ld.param.u64 	%rd2, [_Z11dump_vtableI9ChiVertexIffEEvPPv_param_0];
	mov.u64 	%rd38, 0;
	mov.u64 	%rd4, buf5;
	cvta.global.u64 	%rd5, %rd4;
	setp.eq.s64	%p1, %rd5, 0;
	@%p1 bra 	BB24_2;

	// Callseq Start 103
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZN9ChiVertexIffEC1Ev, 
	(
	);
	
	//{
	}// Callseq End 103
	mov.u64 	%rd38, %rd4;

BB24_2:
	cvta.to.global.u64 	%rd7, %rd2;
	ld.global.u64 	%rd8, [%rd38];
	ld.u64 	%rd9, [%rd8];
	st.global.u64 	[%rd7], %rd9;
	ld.global.u64 	%rd10, [%rd38];
	ld.u64 	%rd11, [%rd10+8];
	st.global.u64 	[%rd7+8], %rd11;
	ld.global.u64 	%rd12, [%rd38];
	ld.u64 	%rd13, [%rd12+16];
	st.global.u64 	[%rd7+16], %rd13;
	ld.global.u64 	%rd14, [%rd38];
	ld.u64 	%rd15, [%rd14+24];
	st.global.u64 	[%rd7+24], %rd15;
	ld.global.u64 	%rd16, [%rd38];
	ld.u64 	%rd17, [%rd16+32];
	st.global.u64 	[%rd7+32], %rd17;
	ld.global.u64 	%rd18, [%rd38];
	ld.u64 	%rd19, [%rd18+40];
	st.global.u64 	[%rd7+40], %rd19;
	ld.global.u64 	%rd20, [%rd38];
	ld.u64 	%rd21, [%rd20+48];
	st.global.u64 	[%rd7+48], %rd21;
	ld.global.u64 	%rd22, [%rd38];
	ld.u64 	%rd23, [%rd22+56];
	st.global.u64 	[%rd7+56], %rd23;
	ld.global.u64 	%rd24, [%rd38];
	ld.u64 	%rd25, [%rd24+64];
	st.global.u64 	[%rd7+64], %rd25;
	ld.global.u64 	%rd26, [%rd38];
	ld.u64 	%rd27, [%rd26+72];
	st.global.u64 	[%rd7+72], %rd27;
	ld.global.u64 	%rd28, [%rd38];
	ld.u64 	%rd29, [%rd28+80];
	st.global.u64 	[%rd7+80], %rd29;
	ld.global.u64 	%rd30, [%rd38];
	ld.u64 	%rd31, [%rd30+88];
	st.global.u64 	[%rd7+88], %rd31;
	ld.global.u64 	%rd32, [%rd38];
	ld.u64 	%rd33, [%rd32+96];
	st.global.u64 	[%rd7+96], %rd33;
	ld.global.u64 	%rd34, [%rd38];
	ld.u64 	%rd35, [%rd34+104];
	st.global.u64 	[%rd7+104], %rd35;
	ld.global.u64 	%rd36, [%rd38];
	ld.u64 	%rd37, [%rd36+112];
	st.global.u64 	[%rd7+112], %rd37;
	ret;
}

.func _ZN9ChiVertexIffEC1Ev(

)
{
	.reg .b64 	%rd<4>;


	// Callseq Start 104
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZN10VirtVertexIffEC1Ev, 
	(
	);
	
	//{
	}// Callseq End 104
	mov.u64 	%rd1, _ZTV9ChiVertexIffE;
	add.s64 	%rd2, %rd1, 16;
	cvta.global.u64 	%rd3, %rd2;
	st.global.u64 	[buf5], %rd3;
	ret;
}

	// .globl	_Z11dump_vtableI4EdgeIfEEvPPv
.visible .entry _Z11dump_vtableI4EdgeIfEEvPPv(
	.param .u64 _Z11dump_vtableI4EdgeIfEEvPPv_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .b64 	%rd<39>;


	ld.param.u64 	%rd2, [_Z11dump_vtableI4EdgeIfEEvPPv_param_0];
	mov.u64 	%rd38, 0;
	mov.u64 	%rd4, buf5;
	cvta.global.u64 	%rd5, %rd4;
	setp.eq.s64	%p1, %rd5, 0;
	@%p1 bra 	BB26_2;

	// Callseq Start 105
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZN4EdgeIfEC1Ev, 
	(
	);
	
	//{
	}// Callseq End 105
	mov.u64 	%rd38, %rd4;

BB26_2:
	cvta.to.global.u64 	%rd7, %rd2;
	ld.global.u64 	%rd8, [%rd38];
	ld.u64 	%rd9, [%rd8];
	st.global.u64 	[%rd7], %rd9;
	ld.global.u64 	%rd10, [%rd38];
	ld.u64 	%rd11, [%rd10+8];
	st.global.u64 	[%rd7+8], %rd11;
	ld.global.u64 	%rd12, [%rd38];
	ld.u64 	%rd13, [%rd12+16];
	st.global.u64 	[%rd7+16], %rd13;
	ld.global.u64 	%rd14, [%rd38];
	ld.u64 	%rd15, [%rd14+24];
	st.global.u64 	[%rd7+24], %rd15;
	ld.global.u64 	%rd16, [%rd38];
	ld.u64 	%rd17, [%rd16+32];
	st.global.u64 	[%rd7+32], %rd17;
	ld.global.u64 	%rd18, [%rd38];
	ld.u64 	%rd19, [%rd18+40];
	st.global.u64 	[%rd7+40], %rd19;
	ld.global.u64 	%rd20, [%rd38];
	ld.u64 	%rd21, [%rd20+48];
	st.global.u64 	[%rd7+48], %rd21;
	ld.global.u64 	%rd22, [%rd38];
	ld.u64 	%rd23, [%rd22+56];
	st.global.u64 	[%rd7+56], %rd23;
	ld.global.u64 	%rd24, [%rd38];
	ld.u64 	%rd25, [%rd24+64];
	st.global.u64 	[%rd7+64], %rd25;
	ld.global.u64 	%rd26, [%rd38];
	ld.u64 	%rd27, [%rd26+72];
	st.global.u64 	[%rd7+72], %rd27;
	ld.global.u64 	%rd28, [%rd38];
	ld.u64 	%rd29, [%rd28+80];
	st.global.u64 	[%rd7+80], %rd29;
	ld.global.u64 	%rd30, [%rd38];
	ld.u64 	%rd31, [%rd30+88];
	st.global.u64 	[%rd7+88], %rd31;
	ld.global.u64 	%rd32, [%rd38];
	ld.u64 	%rd33, [%rd32+96];
	st.global.u64 	[%rd7+96], %rd33;
	ld.global.u64 	%rd34, [%rd38];
	ld.u64 	%rd35, [%rd34+104];
	st.global.u64 	[%rd7+104], %rd35;
	ld.global.u64 	%rd36, [%rd38];
	ld.u64 	%rd37, [%rd36+112];
	st.global.u64 	[%rd7+112], %rd37;
	ret;
}

.func _ZN4EdgeIfEC1Ev(

)
{
	.reg .b64 	%rd<4>;


	// Callseq Start 106
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZN7ChiEdgeIfEC1Ev, 
	(
	);
	
	//{
	}// Callseq End 106
	mov.u64 	%rd1, _ZTV4EdgeIfE;
	add.s64 	%rd2, %rd1, 16;
	cvta.global.u64 	%rd3, %rd2;
	st.global.u64 	[buf5], %rd3;
	ret;
}

.func _ZN10VirtVertexIffEC1Ev(

)
{
	.reg .b64 	%rd<4>;


	mov.u64 	%rd1, _ZTV10VirtVertexIffE;
	add.s64 	%rd2, %rd1, 16;
	cvta.global.u64 	%rd3, %rd2;
	st.global.u64 	[buf5], %rd3;
	ret;
}

.func _ZN10VirtVertexIffEC1Eiii(
	.param .b64 _ZN10VirtVertexIffEC1Eiii_param_0
)
{
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_ZN10VirtVertexIffEC1Eiii_param_0];
	mov.u64 	%rd2, _ZTV10VirtVertexIffE;
	add.s64 	%rd3, %rd2, 16;
	cvta.global.u64 	%rd4, %rd3;
	st.u64 	[%rd1], %rd4;
	ret;
}

.func _ZN4EdgeIfEC1Eii(
	.param .b64 _ZN4EdgeIfEC1Eii_param_0,
	.param .b32 _ZN4EdgeIfEC1Eii_param_1,
	.param .b32 _ZN4EdgeIfEC1Eii_param_2
)
{
	.reg .f32 	%f<2>;
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_ZN4EdgeIfEC1Eii_param_0];
	ld.param.u32 	%r1, [_ZN4EdgeIfEC1Eii_param_2];
	// Callseq Start 107
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	call.uni 
	_ZN7ChiEdgeIfEC1Eii, 
	(
	param0
	);
	
	//{
	}// Callseq End 107
	mov.u64 	%rd2, _ZTV4EdgeIfE;
	add.s64 	%rd3, %rd2, 16;
	cvta.global.u64 	%rd4, %rd3;
	st.u64 	[%rd1], %rd4;
	cvt.rn.f32.s32	%f1, %r1;
	mov.b32 	 %r2, %f1;
	ld.param.u32 	%r3, [_ZN4EdgeIfEC1Eii_param_1];
	st.v2.u32 	[%rd1+8], {%r2, %r3};
	ret;
}

.func _ZN7ChiEdgeIfEC1Ev(

)
{
	.reg .b64 	%rd<4>;


	mov.u64 	%rd1, _ZTV7ChiEdgeIfE;
	add.s64 	%rd2, %rd1, 16;
	cvta.global.u64 	%rd3, %rd2;
	st.global.u64 	[buf5], %rd3;
	ret;
}

.func _ZN7ChiEdgeIfEC1Eii(
	.param .b64 _ZN7ChiEdgeIfEC1Eii_param_0
)
{
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_ZN7ChiEdgeIfEC1Eii_param_0];
	mov.u64 	%rd2, _ZTV7ChiEdgeIfE;
	add.s64 	%rd3, %rd2, 16;
	cvta.global.u64 	%rd4, %rd3;
	st.u64 	[%rd1], %rd4;
	ret;
}


