//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_70
.address_size 64

.func  (.param .b32 func_retval0) _ZN5Agent7isAliveEv
(
	.param .b64 _ZN5Agent7isAliveEv_param_0
)
;
.func  (.param .b32 func_retval0) _ZN5Agent11isCandidateEv
(
	.param .b64 _ZN5Agent11isCandidateEv_param_0
)
;
.func  (.param .b32 func_retval0) _ZN5Agent6is_newEv
(
	.param .b64 _ZN5Agent6is_newEv_param_0
)
;
.func _ZN5Agent10set_is_newEb
(
	.param .b64 _ZN5Agent10set_is_newEb_param_0,
	.param .b32 _ZN5Agent10set_is_newEb_param_1
)
;
.func _ZN5Agent10set_actionEi
(
	.param .b64 _ZN5Agent10set_actionEi_param_0,
	.param .b32 _ZN5Agent10set_actionEi_param_1
)
;
.func  (.param .b32 func_retval0) _ZN5Agent10get_actionEv
(
	.param .b64 _ZN5Agent10get_actionEv_param_0
)
;
.func  (.param .b32 func_retval0) _ZN5Agent7cell_idEv
(
	.param .b64 _ZN5Agent7cell_idEv_param_0
)
;
.func _ZN5Agent15update_checksumEv
(
	.param .b64 _ZN5Agent15update_checksumEv_param_0
)
;
.func  (.param .b64 func_retval0) _ZN4Cell5agentEv
(
	.param .b64 _ZN4Cell5agentEv_param_0
)
;
.func _ZN4Cell9set_agentEi9AgentType
(
	.param .b64 _ZN4Cell9set_agentEi9AgentType_param_0,
	.param .b32 _ZN4Cell9set_agentEi9AgentType_param_1,
	.param .b32 _ZN4Cell9set_agentEi9AgentType_param_2
)
;
.func _ZN4Cell12delete_agentEv
(
	.param .b64 _ZN4Cell12delete_agentEv_param_0
)
;
.func  (.param .b32 func_retval0) _ZN4Cell8is_emptyEv
(
	.param .b64 _ZN4Cell8is_emptyEv_param_0
)
;
.extern .func  (.param .b64 func_retval0) malloc
(
	.param .b64 malloc_param_0
)
;
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.global .attribute(.managed) .align 16 .b8 buf5[128];
.global .attribute(.managed) .align 8 .u64 range_tree;
.global .attribute(.managed) .align 4 .u32 tree_size;
.global .attribute(.managed) .align 8 .u64 temp_coal;
.global .align 16 .u64 _ZTV5Agent[10] = {0, 0, _ZN5Agent7isAliveEv, _ZN5Agent11isCandidateEv, _ZN5Agent6is_newEv, _ZN5Agent10set_is_newEb, _ZN5Agent10set_actionEi, _ZN5Agent10get_actionEv, _ZN5Agent7cell_idEv, _ZN5Agent15update_checksumEv};
.global .align 16 .u64 _ZTV4Cell[6] = {0, 0, _ZN4Cell5agentEv, _ZN4Cell9set_agentEi9AgentType, _ZN4Cell12delete_agentEv, _ZN4Cell8is_emptyEv};
.global .align 4 .u32 SIZE_X;
.global .align 4 .u32 SIZE_Y;
.global .attribute(.managed) .align 8 .u64 cells;
.global .align 16 .b8 __unnamed_1[48] = {118, 111, 105, 100, 32, 109, 97, 121, 98, 101, 95, 99, 114, 101, 97, 116, 101, 95, 99, 97, 110, 100, 105, 100, 97, 116, 101, 40, 65, 103, 101, 110, 116, 86, 32, 42, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 41, 0};
.global .align 16 .b8 __unnamed_2[33] = {118, 111, 105, 100, 32, 99, 114, 101, 97, 116, 101, 95, 99, 97, 110, 100, 105, 100, 97, 116, 101, 115, 40, 65, 103, 101, 110, 116, 86, 32, 42, 41, 0};
.global .align 16 .b8 __unnamed_3[20] = {118, 111, 105, 100, 32, 99, 114, 101, 97, 116, 101, 95, 99, 101, 108, 108, 115, 40, 41, 0};
.global .align 16 .b8 __unnamed_4[27] = {118, 111, 105, 100, 32, 108, 111, 97, 100, 95, 103, 97, 109, 101, 40, 105, 110, 116, 32, 42, 44, 32, 105, 110, 116, 41, 0};
.global .align 4 .u32 device_checksum;
.global .align 4 .u32 device_num_candidates;
.global .align 8 .b8 $str1[6] = {102, 97, 108, 115, 101, 0};
.global .align 8 .b8 $str2[7] = {103, 111, 108, 46, 99, 117, 0};
.global .align 16 .b8 $str3[14] = {112, 116, 114, 45, 62, 105, 115, 95, 110, 101, 119, 40, 41, 0};
.global .align 16 .b8 $str4[15] = {112, 116, 114, 45, 62, 105, 115, 65, 108, 105, 118, 101, 40, 41, 0};
.global .align 16 .b8 $str5[20] = {99, 101, 108, 108, 115, 91, 105, 93, 32, 33, 61, 32, 110, 117, 108, 108, 112, 116, 114, 0};
.global .align 16 .b8 $str6[54] = {99, 101, 108, 108, 115, 91, 99, 101, 108, 108, 95, 105, 100, 115, 91, 105, 93, 93, 45, 62, 97, 103, 101, 110, 116, 40, 41, 45, 62, 99, 101, 108, 108, 95, 105, 100, 40, 41, 32, 61, 61, 32, 99, 101, 108, 108, 95, 105, 100, 115, 91, 105, 93, 0};

.func  (.param .b32 func_retval0) _ZN5Agent7isAliveEv(
	.param .b64 _ZN5Agent7isAliveEv_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN5Agent7isAliveEv_param_0];
	ld.u32 	%r1, [%rd1+12];
	setp.eq.s32	%p1, %r1, 0;
	selp.u32	%r2, 1, 0, %p1;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

.func  (.param .b32 func_retval0) _ZN5Agent11isCandidateEv(
	.param .b64 _ZN5Agent11isCandidateEv_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN5Agent11isCandidateEv_param_0];
	ld.u32 	%r1, [%rd1+12];
	setp.eq.s32	%p1, %r1, 1;
	selp.u32	%r2, 1, 0, %p1;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

.func  (.param .b32 func_retval0) _ZN5Agent6is_newEv(
	.param .b64 _ZN5Agent6is_newEv_param_0
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN5Agent6is_newEv_param_0];
	ld.s8 	%r1, [%rd1+16];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.func _ZN5Agent10set_is_newEb(
	.param .b64 _ZN5Agent10set_is_newEb_param_0,
	.param .b32 _ZN5Agent10set_is_newEb_param_1
)
{
	.reg .b16 	%rs<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN5Agent10set_is_newEb_param_0];
	ld.param.s8 	%rs1, [_ZN5Agent10set_is_newEb_param_1];
	st.u8 	[%rd1+16], %rs1;
	ret;
}

.func _ZN5Agent10set_actionEi(
	.param .b64 _ZN5Agent10set_actionEi_param_0,
	.param .b32 _ZN5Agent10set_actionEi_param_1
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN5Agent10set_actionEi_param_0];
	ld.param.u32 	%r1, [_ZN5Agent10set_actionEi_param_1];
	st.u32 	[%rd1+20], %r1;
	ret;
}

.func  (.param .b32 func_retval0) _ZN5Agent10get_actionEv(
	.param .b64 _ZN5Agent10get_actionEv_param_0
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN5Agent10get_actionEv_param_0];
	ld.u32 	%r1, [%rd1+20];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.func  (.param .b32 func_retval0) _ZN5Agent7cell_idEv(
	.param .b64 _ZN5Agent7cell_idEv_param_0
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN5Agent7cell_idEv_param_0];
	ld.u32 	%r1, [%rd1+8];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.func _ZN5Agent15update_checksumEv(
	.param .b64 _ZN5Agent15update_checksumEv_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [_ZN5Agent15update_checksumEv_param_0];
	ld.u64 	%rd3, [%rd2];
	ld.u64 	%rd4, [%rd3];
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_0 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd4, 
	(
	param0
	)
	, prototype_0;
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 0
	cvt.u16.u32	%rs1, %r1;
	and.b16  	%rs2, %rs1, 255;
	setp.eq.s16	%p1, %rs2, 0;
	@%p1 bra 	BB7_2;

	mov.u64 	%rd5, device_checksum;
	atom.global.add.u32 	%r2, [%rd5], 1;
	bra.uni 	BB7_4;

BB7_2:
	ld.u64 	%rd6, [%rd2];
	ld.u64 	%rd7, [%rd6+8];
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_1 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd7, 
	(
	param0
	)
	, prototype_1;
	ld.param.b32	%r3, [retval0+0];
	
	//{
	}// Callseq End 1
	cvt.u16.u32	%rs3, %r3;
	and.b16  	%rs4, %rs3, 255;
	setp.eq.s16	%p2, %rs4, 0;
	@%p2 bra 	BB7_4;

	mov.u64 	%rd8, device_num_candidates;
	atom.global.add.u32 	%r4, [%rd8], 1;

BB7_4:
	ret;
}

.func  (.param .b64 func_retval0) _ZN4Cell5agentEv(
	.param .b64 _ZN4Cell5agentEv_param_0
)
{
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN4Cell5agentEv_param_0];
	ld.u64 	%rd2, [%rd1+8];
	st.param.b64	[func_retval0+0], %rd2;
	ret;
}

.func _ZN4Cell9set_agentEi9AgentType(
	.param .b64 _ZN4Cell9set_agentEi9AgentType_param_0,
	.param .b32 _ZN4Cell9set_agentEi9AgentType_param_1,
	.param .b32 _ZN4Cell9set_agentEi9AgentType_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd6, [_ZN4Cell9set_agentEi9AgentType_param_0];
	ld.param.u32 	%r1, [_ZN4Cell9set_agentEi9AgentType_param_1];
	ld.param.u32 	%r2, [_ZN4Cell9set_agentEi9AgentType_param_2];
	add.s64 	%rd1, %rd6, 16;
	ld.u64 	%rd2, [%rd6+16];
	setp.eq.s64	%p1, %rd2, 0;
	mov.u64 	%rd10, 0;
	@%p1 bra 	BB9_2;

	mov.u64 	%rd7, _ZTV5Agent;
	add.s64 	%rd8, %rd7, 16;
	cvta.global.u64 	%rd9, %rd8;
	st.u64 	[%rd2], %rd9;
	mov.u16 	%rs1, 1;
	st.u8 	[%rd2+16], %rs1;
	mov.u32 	%r3, 0;
	st.u32 	[%rd2+20], %r3;
	st.v2.u32 	[%rd2+8], {%r1, %r2};
	mov.u64 	%rd10, %rd2;

BB9_2:
	st.u64 	[%rd1+-8], %rd10;
	ret;
}

.func _ZN4Cell12delete_agentEv(
	.param .b64 _ZN4Cell12delete_agentEv_param_0
)
{
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN4Cell12delete_agentEv_param_0];
	mov.u64 	%rd2, 0;
	st.u64 	[%rd1+8], %rd2;
	ret;
}

.func  (.param .b32 func_retval0) _ZN4Cell8is_emptyEv(
	.param .b64 _ZN4Cell8is_emptyEv_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN4Cell8is_emptyEv_param_0];
	ld.u64 	%rd2, [%rd1+8];
	setp.eq.s64	%p1, %rd2, 0;
	selp.u32	%r1, 1, 0, %p1;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z9vptrPatchPvS_ji
.visible .entry _Z9vptrPatchPvS_ji(
	.param .u64 _Z9vptrPatchPvS_ji_param_0,
	.param .u64 _Z9vptrPatchPvS_ji_param_1,
	.param .u32 _Z9vptrPatchPvS_ji_param_2,
	.param .u32 _Z9vptrPatchPvS_ji_param_3
)
{
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [_Z9vptrPatchPvS_ji_param_0];
	ld.param.u64 	%rd2, [_Z9vptrPatchPvS_ji_param_1];
	ld.param.u32 	%r1, [_Z9vptrPatchPvS_ji_param_2];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mad.lo.s32 	%r5, %r4, %r3, %r2;
	mul.lo.s32 	%r6, %r5, %r1;
	cvt.u64.u32	%rd5, %r6;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u8 	%rs1, [%rd3];
	st.global.u8 	[%rd6], %rs1;
	ld.global.u8 	%rs2, [%rd3+1];
	st.global.u8 	[%rd6+1], %rs2;
	ld.global.u8 	%rs3, [%rd3+2];
	st.global.u8 	[%rd6+2], %rs3;
	ld.global.u8 	%rs4, [%rd3+3];
	st.global.u8 	[%rd6+3], %rs4;
	ld.global.u8 	%rs5, [%rd3+4];
	st.global.u8 	[%rd6+4], %rs5;
	ld.global.u8 	%rs6, [%rd3+5];
	st.global.u8 	[%rd6+5], %rs6;
	ld.global.u8 	%rs7, [%rd3+6];
	st.global.u8 	[%rd6+6], %rs7;
	ld.global.u8 	%rs8, [%rd3+7];
	st.global.u8 	[%rd6+7], %rs8;
	ret;
}

	// .globl	_Z13alive_preparev
.visible .entry _Z13alive_preparev(

)
{
	.reg .pred 	%p<87>;
	.reg .b16 	%rs<22>;
	.reg .b32 	%r<105>;
	.reg .b64 	%rd<99>;


	mov.u32 	%r36, %tid.x;
	mov.u32 	%r37, %ctaid.x;
	mov.u32 	%r38, %ntid.x;
	mad.lo.s32 	%r95, %r37, %r38, %r36;
	ld.global.u32 	%r39, [SIZE_Y];
	ld.global.u32 	%r40, [SIZE_X];
	mul.lo.s32 	%r41, %r39, %r40;
	setp.ge.s32	%p1, %r95, %r41;
	@%p1 bra 	BB13_33;

BB13_1:
	ld.global.u64 	%rd11, [cells];
	mul.wide.s32 	%rd12, %r95, 8;
	add.s64 	%rd13, %rd11, %rd12;
	ld.u64 	%rd14, [%rd13];
	ld.u64 	%rd15, [%rd14];
	ld.u64 	%rd16, [%rd15];
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 retval0;
	prototype_2 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd16, 
	(
	param0
	)
	, prototype_2;
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 2
	setp.eq.s64	%p2, %rd1, 0;
	@%p2 bra 	BB13_32;

	ld.u64 	%rd17, [%rd1];
	ld.u64 	%rd18, [%rd17];
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_3 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd18, 
	(
	param0
	)
	, prototype_3;
	ld.param.b32	%r42, [retval0+0];
	
	//{
	}// Callseq End 3
	cvt.u16.u32	%rs1, %r42;
	and.b16  	%rs2, %rs1, 255;
	setp.eq.s16	%p3, %rs2, 0;
	@%p3 bra 	BB13_32;

	ld.u64 	%rd19, [%rd1];
	ld.u64 	%rd20, [%rd19+24];
	mov.u16 	%rs3, 0;
	cvt.s32.s16	%r44, %rs3;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 param1;
	st.param.b32	[param1+0], %r44;
	prototype_4 : .callprototype ()_ (.param .b64 _, .param .b32 _);
	call 
	%rd20, 
	(
	param0, 
	param1
	)
	, prototype_4;
	
	//{
	}// Callseq End 4
	ld.u64 	%rd21, [%rd1];
	ld.u64 	%rd22, [%rd21+48];
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_5 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd22, 
	(
	param0
	)
	, prototype_5;
	ld.param.b32	%r45, [retval0+0];
	
	//{
	}// Callseq End 5
	ld.global.u32 	%r46, [SIZE_X];
	rem.s32 	%r3, %r45, %r46;
	ld.u64 	%rd23, [%rd1];
	ld.u64 	%rd24, [%rd23+48];
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_6 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd24, 
	(
	param0
	)
	, prototype_6;
	ld.param.b32	%r47, [retval0+0];
	
	//{
	}// Callseq End 6
	ld.global.u32 	%r4, [SIZE_X];
	div.s32 	%r5, %r47, %r4;
	add.s32 	%r6, %r3, -1;
	setp.gt.s32	%p4, %r3, 0;
	setp.le.s32	%p5, %r3, %r4;
	and.pred  	%p6, %p4, %p5;
	setp.gt.s32	%p7, %r5, 0;
	and.pred  	%p8, %p6, %p7;
	ld.global.u32 	%r48, [SIZE_Y];
	setp.le.s32	%p9, %r5, %r48;
	and.pred  	%p10, %p8, %p9;
	mov.u32 	%r96, 0;
	@!%p10 bra 	BB13_6;
	bra.uni 	BB13_4;

BB13_4:
	ld.global.u64 	%rd25, [cells];
	add.s32 	%r50, %r5, -1;
	mad.lo.s32 	%r51, %r4, %r50, %r6;
	mul.wide.s32 	%rd26, %r51, 8;
	add.s64 	%rd27, %rd25, %rd26;
	ld.u64 	%rd28, [%rd27];
	ld.u64 	%rd29, [%rd28];
	ld.u64 	%rd30, [%rd29];
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd28;
	.param .b64 retval0;
	prototype_7 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd30, 
	(
	param0
	)
	, prototype_7;
	ld.param.b64	%rd2, [retval0+0];
	
	//{
	}// Callseq End 7
	setp.eq.s64	%p11, %rd2, 0;
	@%p11 bra 	BB13_6;

	ld.u64 	%rd31, [%rd2];
	ld.u64 	%rd32, [%rd31];
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_8 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd32, 
	(
	param0
	)
	, prototype_8;
	ld.param.b32	%r52, [retval0+0];
	
	//{
	}// Callseq End 8
	cvt.u16.u32	%rs4, %r52;
	and.b16  	%rs5, %rs4, 255;
	setp.ne.s16	%p12, %rs5, 0;
	selp.u32	%r96, 1, 0, %p12;

BB13_6:
	ld.global.u32 	%r9, [SIZE_X];
	setp.le.s32	%p13, %r3, %r9;
	and.pred  	%p15, %p4, %p13;
	setp.gt.s32	%p16, %r5, -1;
	and.pred  	%p17, %p15, %p16;
	ld.global.u32 	%r53, [SIZE_Y];
	setp.lt.s32	%p18, %r5, %r53;
	and.pred  	%p19, %p17, %p18;
	@!%p19 bra 	BB13_9;
	bra.uni 	BB13_7;

BB13_7:
	ld.global.u64 	%rd33, [cells];
	mad.lo.s32 	%r54, %r9, %r5, %r6;
	mul.wide.s32 	%rd34, %r54, 8;
	add.s64 	%rd35, %rd33, %rd34;
	ld.u64 	%rd36, [%rd35];
	ld.u64 	%rd37, [%rd36];
	ld.u64 	%rd38, [%rd37];
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd36;
	.param .b64 retval0;
	prototype_9 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd38, 
	(
	param0
	)
	, prototype_9;
	ld.param.b64	%rd3, [retval0+0];
	
	//{
	}// Callseq End 9
	setp.eq.s64	%p20, %rd3, 0;
	@%p20 bra 	BB13_9;

	ld.u64 	%rd39, [%rd3];
	ld.u64 	%rd40, [%rd39];
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3;
	.param .b32 retval0;
	prototype_10 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd40, 
	(
	param0
	)
	, prototype_10;
	ld.param.b32	%r55, [retval0+0];
	
	//{
	}// Callseq End 10
	cvt.u16.u32	%rs6, %r55;
	and.b16  	%rs7, %rs6, 255;
	setp.ne.s16	%p21, %rs7, 0;
	selp.u32	%r56, 1, 0, %p21;
	add.s32 	%r96, %r56, %r96;

BB13_9:
	ld.global.u32 	%r12, [SIZE_X];
	setp.le.s32	%p22, %r3, %r12;
	and.pred  	%p24, %p4, %p22;
	setp.gt.s32	%p25, %r5, -2;
	and.pred  	%p26, %p24, %p25;
	ld.global.u32 	%r57, [SIZE_Y];
	add.s32 	%r13, %r5, 1;
	setp.lt.s32	%p27, %r13, %r57;
	and.pred  	%p28, %p26, %p27;
	@!%p28 bra 	BB13_12;
	bra.uni 	BB13_10;

BB13_10:
	ld.global.u64 	%rd41, [cells];
	mad.lo.s32 	%r58, %r12, %r13, %r6;
	mul.wide.s32 	%rd42, %r58, 8;
	add.s64 	%rd43, %rd41, %rd42;
	ld.u64 	%rd44, [%rd43];
	ld.u64 	%rd45, [%rd44];
	ld.u64 	%rd46, [%rd45];
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd44;
	.param .b64 retval0;
	prototype_11 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd46, 
	(
	param0
	)
	, prototype_11;
	ld.param.b64	%rd4, [retval0+0];
	
	//{
	}// Callseq End 11
	setp.eq.s64	%p29, %rd4, 0;
	@%p29 bra 	BB13_12;

	ld.u64 	%rd47, [%rd4];
	ld.u64 	%rd48, [%rd47];
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b32 retval0;
	prototype_12 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd48, 
	(
	param0
	)
	, prototype_12;
	ld.param.b32	%r59, [retval0+0];
	
	//{
	}// Callseq End 12
	cvt.u16.u32	%rs8, %r59;
	and.b16  	%rs9, %rs8, 255;
	setp.ne.s16	%p30, %rs9, 0;
	selp.u32	%r60, 1, 0, %p30;
	add.s32 	%r96, %r60, %r96;

BB13_12:
	ld.global.u32 	%r16, [SIZE_X];
	setp.lt.s32	%p31, %r3, %r16;
	setp.gt.s32	%p32, %r3, -1;
	and.pred  	%p33, %p32, %p31;
	and.pred  	%p35, %p33, %p7;
	ld.global.u32 	%r61, [SIZE_Y];
	setp.le.s32	%p36, %r5, %r61;
	and.pred  	%p37, %p35, %p36;
	@!%p37 bra 	BB13_15;
	bra.uni 	BB13_13;

BB13_13:
	ld.global.u64 	%rd49, [cells];
	add.s32 	%r62, %r5, -1;
	mad.lo.s32 	%r63, %r16, %r62, %r3;
	mul.wide.s32 	%rd50, %r63, 8;
	add.s64 	%rd51, %rd49, %rd50;
	ld.u64 	%rd52, [%rd51];
	ld.u64 	%rd53, [%rd52];
	ld.u64 	%rd54, [%rd53];
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd52;
	.param .b64 retval0;
	prototype_13 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd54, 
	(
	param0
	)
	, prototype_13;
	ld.param.b64	%rd5, [retval0+0];
	
	//{
	}// Callseq End 13
	setp.eq.s64	%p38, %rd5, 0;
	@%p38 bra 	BB13_15;

	ld.u64 	%rd55, [%rd5];
	ld.u64 	%rd56, [%rd55];
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b32 retval0;
	prototype_14 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd56, 
	(
	param0
	)
	, prototype_14;
	ld.param.b32	%r64, [retval0+0];
	
	//{
	}// Callseq End 14
	cvt.u16.u32	%rs10, %r64;
	and.b16  	%rs11, %rs10, 255;
	setp.ne.s16	%p39, %rs11, 0;
	selp.u32	%r65, 1, 0, %p39;
	add.s32 	%r96, %r65, %r96;

BB13_15:
	ld.global.u32 	%r19, [SIZE_X];
	setp.lt.s32	%p40, %r3, %r19;
	and.pred  	%p42, %p32, %p40;
	and.pred  	%p44, %p42, %p16;
	ld.global.u32 	%r66, [SIZE_Y];
	setp.lt.s32	%p45, %r5, %r66;
	and.pred  	%p46, %p44, %p45;
	@!%p46 bra 	BB13_18;
	bra.uni 	BB13_16;

BB13_16:
	ld.global.u64 	%rd57, [cells];
	mad.lo.s32 	%r67, %r19, %r5, %r3;
	mul.wide.s32 	%rd58, %r67, 8;
	add.s64 	%rd59, %rd57, %rd58;
	ld.u64 	%rd60, [%rd59];
	ld.u64 	%rd61, [%rd60];
	ld.u64 	%rd62, [%rd61];
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd60;
	.param .b64 retval0;
	prototype_15 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd62, 
	(
	param0
	)
	, prototype_15;
	ld.param.b64	%rd6, [retval0+0];
	
	//{
	}// Callseq End 15
	setp.eq.s64	%p47, %rd6, 0;
	@%p47 bra 	BB13_18;

	ld.u64 	%rd63, [%rd6];
	ld.u64 	%rd64, [%rd63];
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b32 retval0;
	prototype_16 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd64, 
	(
	param0
	)
	, prototype_16;
	ld.param.b32	%r68, [retval0+0];
	
	//{
	}// Callseq End 16
	cvt.u16.u32	%rs12, %r68;
	and.b16  	%rs13, %rs12, 255;
	setp.ne.s16	%p48, %rs13, 0;
	selp.u32	%r69, 1, 0, %p48;
	add.s32 	%r96, %r69, %r96;

BB13_18:
	ld.global.u32 	%r22, [SIZE_X];
	setp.lt.s32	%p49, %r3, %r22;
	and.pred  	%p51, %p32, %p49;
	and.pred  	%p53, %p51, %p25;
	ld.global.u32 	%r70, [SIZE_Y];
	setp.lt.s32	%p54, %r13, %r70;
	and.pred  	%p55, %p53, %p54;
	@!%p55 bra 	BB13_21;
	bra.uni 	BB13_19;

BB13_19:
	ld.global.u64 	%rd65, [cells];
	mad.lo.s32 	%r71, %r22, %r13, %r3;
	mul.wide.s32 	%rd66, %r71, 8;
	add.s64 	%rd67, %rd65, %rd66;
	ld.u64 	%rd68, [%rd67];
	ld.u64 	%rd69, [%rd68];
	ld.u64 	%rd70, [%rd69];
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd68;
	.param .b64 retval0;
	prototype_17 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd70, 
	(
	param0
	)
	, prototype_17;
	ld.param.b64	%rd7, [retval0+0];
	
	//{
	}// Callseq End 17
	setp.eq.s64	%p56, %rd7, 0;
	@%p56 bra 	BB13_21;

	ld.u64 	%rd71, [%rd7];
	ld.u64 	%rd72, [%rd71];
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b32 retval0;
	prototype_18 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd72, 
	(
	param0
	)
	, prototype_18;
	ld.param.b32	%r72, [retval0+0];
	
	//{
	}// Callseq End 18
	cvt.u16.u32	%rs14, %r72;
	and.b16  	%rs15, %rs14, 255;
	setp.ne.s16	%p57, %rs15, 0;
	selp.u32	%r73, 1, 0, %p57;
	add.s32 	%r96, %r73, %r96;

BB13_21:
	ld.global.u32 	%r25, [SIZE_X];
	add.s32 	%r26, %r3, 1;
	setp.lt.s32	%p58, %r26, %r25;
	setp.gt.s32	%p59, %r3, -2;
	and.pred  	%p60, %p59, %p58;
	and.pred  	%p62, %p60, %p7;
	ld.global.u32 	%r74, [SIZE_Y];
	setp.le.s32	%p63, %r5, %r74;
	and.pred  	%p64, %p62, %p63;
	@!%p64 bra 	BB13_24;
	bra.uni 	BB13_22;

BB13_22:
	ld.global.u64 	%rd73, [cells];
	add.s32 	%r75, %r5, -1;
	mad.lo.s32 	%r76, %r25, %r75, %r26;
	mul.wide.s32 	%rd74, %r76, 8;
	add.s64 	%rd75, %rd73, %rd74;
	ld.u64 	%rd76, [%rd75];
	ld.u64 	%rd77, [%rd76];
	ld.u64 	%rd78, [%rd77];
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd76;
	.param .b64 retval0;
	prototype_19 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd78, 
	(
	param0
	)
	, prototype_19;
	ld.param.b64	%rd8, [retval0+0];
	
	//{
	}// Callseq End 19
	setp.eq.s64	%p65, %rd8, 0;
	@%p65 bra 	BB13_24;

	ld.u64 	%rd79, [%rd8];
	ld.u64 	%rd80, [%rd79];
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b32 retval0;
	prototype_20 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd80, 
	(
	param0
	)
	, prototype_20;
	ld.param.b32	%r77, [retval0+0];
	
	//{
	}// Callseq End 20
	cvt.u16.u32	%rs16, %r77;
	and.b16  	%rs17, %rs16, 255;
	setp.ne.s16	%p66, %rs17, 0;
	selp.u32	%r78, 1, 0, %p66;
	add.s32 	%r96, %r78, %r96;

BB13_24:
	ld.global.u32 	%r29, [SIZE_X];
	setp.lt.s32	%p67, %r26, %r29;
	and.pred  	%p69, %p59, %p67;
	and.pred  	%p71, %p69, %p16;
	ld.global.u32 	%r79, [SIZE_Y];
	setp.lt.s32	%p72, %r5, %r79;
	and.pred  	%p73, %p71, %p72;
	@!%p73 bra 	BB13_27;
	bra.uni 	BB13_25;

BB13_25:
	ld.global.u64 	%rd81, [cells];
	mad.lo.s32 	%r80, %r29, %r5, %r26;
	mul.wide.s32 	%rd82, %r80, 8;
	add.s64 	%rd83, %rd81, %rd82;
	ld.u64 	%rd84, [%rd83];
	ld.u64 	%rd85, [%rd84];
	ld.u64 	%rd86, [%rd85];
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd84;
	.param .b64 retval0;
	prototype_21 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd86, 
	(
	param0
	)
	, prototype_21;
	ld.param.b64	%rd9, [retval0+0];
	
	//{
	}// Callseq End 21
	setp.eq.s64	%p74, %rd9, 0;
	@%p74 bra 	BB13_27;

	ld.u64 	%rd87, [%rd9];
	ld.u64 	%rd88, [%rd87];
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd9;
	.param .b32 retval0;
	prototype_22 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd88, 
	(
	param0
	)
	, prototype_22;
	ld.param.b32	%r81, [retval0+0];
	
	//{
	}// Callseq End 22
	cvt.u16.u32	%rs18, %r81;
	and.b16  	%rs19, %rs18, 255;
	setp.ne.s16	%p75, %rs19, 0;
	selp.u32	%r82, 1, 0, %p75;
	add.s32 	%r96, %r82, %r96;

BB13_27:
	ld.global.u32 	%r32, [SIZE_X];
	setp.lt.s32	%p76, %r26, %r32;
	and.pred  	%p78, %p59, %p76;
	and.pred  	%p80, %p78, %p25;
	ld.global.u32 	%r83, [SIZE_Y];
	setp.lt.s32	%p81, %r13, %r83;
	and.pred  	%p82, %p80, %p81;
	@!%p82 bra 	BB13_30;
	bra.uni 	BB13_28;

BB13_28:
	ld.global.u64 	%rd89, [cells];
	mad.lo.s32 	%r84, %r32, %r13, %r26;
	mul.wide.s32 	%rd90, %r84, 8;
	add.s64 	%rd91, %rd89, %rd90;
	ld.u64 	%rd92, [%rd91];
	ld.u64 	%rd93, [%rd92];
	ld.u64 	%rd94, [%rd93];
	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd92;
	.param .b64 retval0;
	prototype_23 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd94, 
	(
	param0
	)
	, prototype_23;
	ld.param.b64	%rd10, [retval0+0];
	
	//{
	}// Callseq End 23
	setp.eq.s64	%p83, %rd10, 0;
	@%p83 bra 	BB13_30;

	ld.u64 	%rd95, [%rd10];
	ld.u64 	%rd96, [%rd95];
	// Callseq Start 24
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b32 retval0;
	prototype_24 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd96, 
	(
	param0
	)
	, prototype_24;
	ld.param.b32	%r85, [retval0+0];
	
	//{
	}// Callseq End 24
	cvt.u16.u32	%rs20, %r85;
	and.b16  	%rs21, %rs20, 255;
	setp.ne.s16	%p84, %rs21, 0;
	selp.u32	%r86, 1, 0, %p84;
	add.s32 	%r96, %r86, %r96;

BB13_30:
	add.s32 	%r87, %r96, -1;
	and.b32  	%r88, %r87, -2;
	setp.eq.s32	%p85, %r88, 2;
	@%p85 bra 	BB13_32;

	ld.u64 	%rd97, [%rd1];
	ld.u64 	%rd98, [%rd97+32];
	mov.u32 	%r89, 1;
	// Callseq Start 25
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 param1;
	st.param.b32	[param1+0], %r89;
	prototype_25 : .callprototype ()_ (.param .b64 _, .param .b32 _);
	call 
	%rd98, 
	(
	param0, 
	param1
	)
	, prototype_25;
	
	//{
	}// Callseq End 25

BB13_32:
	mov.u32 	%r90, %nctaid.x;
	mad.lo.s32 	%r95, %r90, %r38, %r95;
	ld.global.u32 	%r92, [SIZE_Y];
	ld.global.u32 	%r93, [SIZE_X];
	mul.lo.s32 	%r94, %r92, %r93;
	setp.lt.s32	%p86, %r95, %r94;
	@%p86 bra 	BB13_1;

BB13_33:
	ret;
}

	// .globl	_Z12alive_updatev
.visible .entry _Z12alive_updatev(

)
{
	.reg .pred 	%p<89>;
	.reg .b16 	%rs<29>;
	.reg .b32 	%r<100>;
	.reg .b64 	%rd<147>;


	mov.u32 	%r25, %tid.x;
	mov.u32 	%r26, %ctaid.x;
	mov.u32 	%r27, %ntid.x;
	mad.lo.s32 	%r96, %r26, %r27, %r25;
	ld.global.u32 	%r28, [SIZE_Y];
	ld.global.u32 	%r29, [SIZE_X];
	mul.lo.s32 	%r30, %r28, %r29;
	setp.ge.s32	%p1, %r96, %r30;
	@%p1 bra 	BB14_47;

BB14_1:
	ld.global.u64 	%rd14, [cells];
	mul.wide.s32 	%rd15, %r96, 8;
	add.s64 	%rd16, %rd14, %rd15;
	ld.u64 	%rd17, [%rd16];
	ld.u64 	%rd18, [%rd17];
	ld.u64 	%rd19, [%rd18];
	// Callseq Start 26
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd17;
	.param .b64 retval0;
	prototype_26 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd19, 
	(
	param0
	)
	, prototype_26;
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 26
	setp.eq.s64	%p2, %rd1, 0;
	@%p2 bra 	BB14_46;

	ld.u64 	%rd20, [%rd1];
	ld.u64 	%rd21, [%rd20];
	// Callseq Start 27
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_27 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd21, 
	(
	param0
	)
	, prototype_27;
	ld.param.b32	%r31, [retval0+0];
	
	//{
	}// Callseq End 27
	cvt.u16.u32	%rs1, %r31;
	and.b16  	%rs2, %rs1, 255;
	setp.eq.s16	%p3, %rs2, 0;
	@%p3 bra 	BB14_46;

	ld.u64 	%rd22, [%rd1];
	ld.u64 	%rd23, [%rd22+48];
	// Callseq Start 28
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_28 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd23, 
	(
	param0
	)
	, prototype_28;
	ld.param.b32	%r3, [retval0+0];
	
	//{
	}// Callseq End 28
	ld.u64 	%rd24, [%rd1];
	ld.u64 	%rd25, [%rd24+16];
	// Callseq Start 29
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_29 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd25, 
	(
	param0
	)
	, prototype_29;
	ld.param.b32	%r32, [retval0+0];
	
	//{
	}// Callseq End 29
	cvt.u16.u32	%rs3, %r32;
	and.b16  	%rs4, %rs3, 255;
	setp.eq.s16	%p4, %rs4, 0;
	ld.u64 	%rd26, [%rd1];
	add.s64 	%rd3, %rd26, 16;
	@%p4 bra 	BB14_44;
	bra.uni 	BB14_4;

BB14_44:
	ld.u64 	%rd139, [%rd3+24];
	// Callseq Start 57
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_57 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd139, 
	(
	param0
	)
	, prototype_57;
	ld.param.b32	%r89, [retval0+0];
	
	//{
	}// Callseq End 57
	setp.ne.s32	%p87, %r89, 1;
	@%p87 bra 	BB14_46;

	ld.global.u64 	%rd140, [cells];
	mul.wide.s32 	%rd141, %r3, 8;
	add.s64 	%rd142, %rd140, %rd141;
	ld.u64 	%rd143, [%rd142];
	ld.u64 	%rd144, [%rd143];
	ld.u64 	%rd145, [%rd144+8];
	mov.u32 	%r90, 1;
	// Callseq Start 58
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd143;
	.param .b32 param1;
	st.param.b32	[param1+0], %r3;
	.param .b32 param2;
	st.param.b32	[param2+0], %r90;
	prototype_58 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _);
	call 
	%rd145, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_58;
	
	//{
	}// Callseq End 58
	bra.uni 	BB14_46;

BB14_4:
	ld.u64 	%rd27, [%rd3];
	// Callseq Start 30
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_30 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd27, 
	(
	param0
	)
	, prototype_30;
	ld.param.b32	%r33, [retval0+0];
	
	//{
	}// Callseq End 30
	cvt.u16.u32	%rs5, %r33;
	and.b16  	%rs6, %rs5, 255;
	setp.ne.s16	%p5, %rs6, 0;
	@%p5 bra 	BB14_6;

	mov.u64 	%rd28, $str3;
	cvta.global.u64 	%rd29, %rd28;
	mov.u64 	%rd30, $str2;
	cvta.global.u64 	%rd31, %rd30;
	mov.u64 	%rd32, __unnamed_2;
	cvta.global.u64 	%rd33, %rd32;
	mov.u32 	%r34, 76;
	mov.u64 	%rd34, 1;
	// Callseq Start 31
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd29;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd31;
	.param .b32 param2;
	st.param.b32	[param2+0], %r34;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd33;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd34;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 31

BB14_6:
	ld.u64 	%rd35, [%rd1];
	ld.u64 	%rd36, [%rd35];
	// Callseq Start 32
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_32 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd36, 
	(
	param0
	)
	, prototype_32;
	ld.param.b32	%r35, [retval0+0];
	
	//{
	}// Callseq End 32
	cvt.u16.u32	%rs7, %r35;
	and.b16  	%rs8, %rs7, 255;
	setp.ne.s16	%p6, %rs8, 0;
	@%p6 bra 	BB14_8;

	mov.u64 	%rd37, $str4;
	cvta.global.u64 	%rd38, %rd37;
	mov.u64 	%rd39, $str2;
	cvta.global.u64 	%rd40, %rd39;
	mov.u64 	%rd41, __unnamed_2;
	cvta.global.u64 	%rd42, %rd41;
	mov.u32 	%r36, 77;
	mov.u64 	%rd43, 1;
	// Callseq Start 33
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd38;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd40;
	.param .b32 param2;
	st.param.b32	[param2+0], %r36;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd42;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd43;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 33

BB14_8:
	ld.u64 	%rd44, [%rd1];
	ld.u64 	%rd45, [%rd44+48];
	// Callseq Start 34
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_34 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd45, 
	(
	param0
	)
	, prototype_34;
	ld.param.b32	%r38, [retval0+0];
	
	//{
	}// Callseq End 34
	ld.global.u32 	%r39, [SIZE_X];
	rem.s32 	%r4, %r38, %r39;
	ld.u64 	%rd46, [%rd1];
	ld.u64 	%rd47, [%rd46+48];
	// Callseq Start 35
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_35 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd47, 
	(
	param0
	)
	, prototype_35;
	ld.param.b32	%r40, [retval0+0];
	
	//{
	}// Callseq End 35
	ld.global.u32 	%r41, [SIZE_X];
	div.s32 	%r5, %r40, %r41;
	mov.u32 	%r37, -1;
	mov.u32 	%r97, %r37;

BB14_9:
	add.s32 	%r7, %r97, %r4;
	mov.u32 	%r98, %r5;
	mov.u32 	%r99, %r37;

BB14_10:
	ld.global.u32 	%r10, [SIZE_X];
	setp.lt.s32	%p7, %r7, %r10;
	setp.gt.s32	%p8, %r7, -1;
	and.pred  	%p9, %p8, %p7;
	add.s32 	%r11, %r98, -1;
	setp.gt.s32	%p10, %r11, -1;
	and.pred  	%p11, %p9, %p10;
	ld.global.u32 	%r43, [SIZE_Y];
	setp.lt.s32	%p12, %r11, %r43;
	and.pred  	%p13, %p11, %p12;
	@!%p13 bra 	BB14_42;
	bra.uni 	BB14_11;

BB14_11:
	ld.global.u64 	%rd48, [cells];
	mad.lo.s32 	%r44, %r10, %r11, %r7;
	mul.wide.s32 	%rd49, %r44, 8;
	add.s64 	%rd50, %rd48, %rd49;
	ld.u64 	%rd51, [%rd50];
	ld.u64 	%rd52, [%rd51];
	ld.u64 	%rd53, [%rd52+24];
	// Callseq Start 36
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd51;
	.param .b32 retval0;
	prototype_36 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd53, 
	(
	param0
	)
	, prototype_36;
	ld.param.b32	%r45, [retval0+0];
	
	//{
	}// Callseq End 36
	cvt.u16.u32	%rs9, %r45;
	and.b16  	%rs10, %rs9, 255;
	setp.eq.s16	%p14, %rs10, 0;
	@%p14 bra 	BB14_42;

	setp.gt.s32	%p15, %r7, 0;
	ld.global.u32 	%r12, [SIZE_X];
	setp.le.s32	%p16, %r7, %r12;
	and.pred  	%p17, %p15, %p16;
	setp.gt.s32	%p18, %r11, 0;
	and.pred  	%p19, %p17, %p18;
	ld.global.u32 	%r46, [SIZE_Y];
	setp.le.s32	%p20, %r11, %r46;
	and.pred  	%p21, %p19, %p20;
	@!%p21 bra 	BB14_15;
	bra.uni 	BB14_13;

BB14_13:
	ld.global.u64 	%rd54, [cells];
	add.s32 	%r47, %r98, -2;
	mad.lo.s32 	%r48, %r12, %r47, %r7;
	add.s32 	%r49, %r48, -1;
	mul.wide.s32 	%rd55, %r49, 8;
	add.s64 	%rd56, %rd54, %rd55;
	ld.u64 	%rd57, [%rd56];
	ld.u64 	%rd58, [%rd57];
	ld.u64 	%rd59, [%rd58];
	// Callseq Start 37
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd57;
	.param .b64 retval0;
	prototype_37 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd59, 
	(
	param0
	)
	, prototype_37;
	ld.param.b64	%rd146, [retval0+0];
	
	//{
	}// Callseq End 37
	setp.eq.s64	%p22, %rd146, 0;
	@%p22 bra 	BB14_15;

	ld.u64 	%rd60, [%rd146];
	ld.u64 	%rd61, [%rd60+16];
	// Callseq Start 38
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd146;
	.param .b32 retval0;
	prototype_38 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd61, 
	(
	param0
	)
	, prototype_38;
	ld.param.b32	%r50, [retval0+0];
	
	//{
	}// Callseq End 38
	cvt.u16.u32	%rs11, %r50;
	and.b16  	%rs12, %rs11, 255;
	setp.ne.s16	%p23, %rs12, 0;
	@%p23 bra 	BB14_39;

BB14_15:
	ld.global.u32 	%r13, [SIZE_X];
	setp.le.s32	%p25, %r7, %r13;
	and.pred  	%p26, %p15, %p25;
	ld.global.u32 	%r51, [SIZE_Y];
	setp.lt.s32	%p27, %r11, %r51;
	and.pred  	%p28, %p26, %p27;
	@!%p28 bra 	BB14_18;
	bra.uni 	BB14_16;

BB14_16:
	ld.global.u64 	%rd62, [cells];
	mad.lo.s32 	%r52, %r13, %r11, %r7;
	add.s32 	%r53, %r52, -1;
	mul.wide.s32 	%rd63, %r53, 8;
	add.s64 	%rd64, %rd62, %rd63;
	ld.u64 	%rd65, [%rd64];
	ld.u64 	%rd66, [%rd65];
	ld.u64 	%rd67, [%rd66];
	// Callseq Start 39
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd65;
	.param .b64 retval0;
	prototype_39 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd67, 
	(
	param0
	)
	, prototype_39;
	ld.param.b64	%rd146, [retval0+0];
	
	//{
	}// Callseq End 39
	setp.eq.s64	%p29, %rd146, 0;
	@%p29 bra 	BB14_18;

	ld.u64 	%rd68, [%rd146];
	ld.u64 	%rd69, [%rd68+16];
	// Callseq Start 40
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd146;
	.param .b32 retval0;
	prototype_40 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd69, 
	(
	param0
	)
	, prototype_40;
	ld.param.b32	%r54, [retval0+0];
	
	//{
	}// Callseq End 40
	cvt.u16.u32	%rs13, %r54;
	and.b16  	%rs14, %rs13, 255;
	setp.ne.s16	%p30, %rs14, 0;
	@%p30 bra 	BB14_39;

BB14_18:
	ld.global.u32 	%r14, [SIZE_X];
	setp.le.s32	%p32, %r7, %r14;
	and.pred  	%p33, %p15, %p32;
	setp.gt.s32	%p34, %r11, -2;
	and.pred  	%p35, %p33, %p34;
	ld.global.u32 	%r55, [SIZE_Y];
	setp.lt.s32	%p36, %r98, %r55;
	and.pred  	%p37, %p35, %p36;
	@!%p37 bra 	BB14_21;
	bra.uni 	BB14_19;

BB14_19:
	ld.global.u64 	%rd70, [cells];
	mad.lo.s32 	%r56, %r14, %r98, %r7;
	add.s32 	%r57, %r56, -1;
	mul.wide.s32 	%rd71, %r57, 8;
	add.s64 	%rd72, %rd70, %rd71;
	ld.u64 	%rd73, [%rd72];
	ld.u64 	%rd74, [%rd73];
	ld.u64 	%rd75, [%rd74];
	// Callseq Start 41
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd73;
	.param .b64 retval0;
	prototype_41 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd75, 
	(
	param0
	)
	, prototype_41;
	ld.param.b64	%rd146, [retval0+0];
	
	//{
	}// Callseq End 41
	setp.eq.s64	%p38, %rd146, 0;
	@%p38 bra 	BB14_21;

	ld.u64 	%rd76, [%rd146];
	ld.u64 	%rd77, [%rd76+16];
	// Callseq Start 42
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd146;
	.param .b32 retval0;
	prototype_42 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd77, 
	(
	param0
	)
	, prototype_42;
	ld.param.b32	%r58, [retval0+0];
	
	//{
	}// Callseq End 42
	cvt.u16.u32	%rs15, %r58;
	and.b16  	%rs16, %rs15, 255;
	setp.ne.s16	%p39, %rs16, 0;
	@%p39 bra 	BB14_39;

BB14_21:
	ld.global.u32 	%r15, [SIZE_X];
	setp.lt.s32	%p41, %r7, %r15;
	and.pred  	%p42, %p41, %p18;
	ld.global.u32 	%r59, [SIZE_Y];
	setp.le.s32	%p43, %r11, %r59;
	and.pred  	%p44, %p42, %p43;
	@!%p44 bra 	BB14_24;
	bra.uni 	BB14_22;

BB14_22:
	ld.global.u64 	%rd78, [cells];
	add.s32 	%r60, %r98, -2;
	mad.lo.s32 	%r61, %r15, %r60, %r7;
	mul.wide.s32 	%rd79, %r61, 8;
	add.s64 	%rd80, %rd78, %rd79;
	ld.u64 	%rd81, [%rd80];
	ld.u64 	%rd82, [%rd81];
	ld.u64 	%rd83, [%rd82];
	// Callseq Start 43
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd81;
	.param .b64 retval0;
	prototype_43 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd83, 
	(
	param0
	)
	, prototype_43;
	ld.param.b64	%rd146, [retval0+0];
	
	//{
	}// Callseq End 43
	setp.eq.s64	%p45, %rd146, 0;
	@%p45 bra 	BB14_24;

	ld.u64 	%rd84, [%rd146];
	ld.u64 	%rd85, [%rd84+16];
	// Callseq Start 44
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd146;
	.param .b32 retval0;
	prototype_44 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd85, 
	(
	param0
	)
	, prototype_44;
	ld.param.b32	%r62, [retval0+0];
	
	//{
	}// Callseq End 44
	cvt.u16.u32	%rs17, %r62;
	and.b16  	%rs18, %rs17, 255;
	setp.ne.s16	%p46, %rs18, 0;
	@%p46 bra 	BB14_39;

BB14_24:
	ld.global.u32 	%r16, [SIZE_X];
	setp.lt.s32	%p47, %r7, %r16;
	ld.global.u32 	%r63, [SIZE_Y];
	setp.lt.s32	%p48, %r11, %r63;
	and.pred  	%p49, %p47, %p48;
	@!%p49 bra 	BB14_27;
	bra.uni 	BB14_25;

BB14_25:
	ld.global.u64 	%rd86, [cells];
	mad.lo.s32 	%r64, %r16, %r11, %r7;
	mul.wide.s32 	%rd87, %r64, 8;
	add.s64 	%rd88, %rd86, %rd87;
	ld.u64 	%rd89, [%rd88];
	ld.u64 	%rd90, [%rd89];
	ld.u64 	%rd91, [%rd90];
	// Callseq Start 45
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd89;
	.param .b64 retval0;
	prototype_45 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd91, 
	(
	param0
	)
	, prototype_45;
	ld.param.b64	%rd146, [retval0+0];
	
	//{
	}// Callseq End 45
	setp.eq.s64	%p50, %rd146, 0;
	@%p50 bra 	BB14_27;

	ld.u64 	%rd92, [%rd146];
	ld.u64 	%rd93, [%rd92+16];
	// Callseq Start 46
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd146;
	.param .b32 retval0;
	prototype_46 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd93, 
	(
	param0
	)
	, prototype_46;
	ld.param.b32	%r65, [retval0+0];
	
	//{
	}// Callseq End 46
	cvt.u16.u32	%rs19, %r65;
	and.b16  	%rs20, %rs19, 255;
	setp.ne.s16	%p51, %rs20, 0;
	@%p51 bra 	BB14_39;

BB14_27:
	ld.global.u32 	%r17, [SIZE_X];
	setp.lt.s32	%p53, %r7, %r17;
	and.pred  	%p54, %p53, %p34;
	ld.global.u32 	%r66, [SIZE_Y];
	setp.lt.s32	%p55, %r98, %r66;
	and.pred  	%p56, %p54, %p55;
	@!%p56 bra 	BB14_30;
	bra.uni 	BB14_28;

BB14_28:
	ld.global.u64 	%rd94, [cells];
	mad.lo.s32 	%r67, %r17, %r98, %r7;
	mul.wide.s32 	%rd95, %r67, 8;
	add.s64 	%rd96, %rd94, %rd95;
	ld.u64 	%rd97, [%rd96];
	ld.u64 	%rd98, [%rd97];
	ld.u64 	%rd99, [%rd98];
	// Callseq Start 47
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd97;
	.param .b64 retval0;
	prototype_47 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd99, 
	(
	param0
	)
	, prototype_47;
	ld.param.b64	%rd146, [retval0+0];
	
	//{
	}// Callseq End 47
	setp.eq.s64	%p57, %rd146, 0;
	@%p57 bra 	BB14_30;

	ld.u64 	%rd100, [%rd146];
	ld.u64 	%rd101, [%rd100+16];
	// Callseq Start 48
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd146;
	.param .b32 retval0;
	prototype_48 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd101, 
	(
	param0
	)
	, prototype_48;
	ld.param.b32	%r68, [retval0+0];
	
	//{
	}// Callseq End 48
	cvt.u16.u32	%rs21, %r68;
	and.b16  	%rs22, %rs21, 255;
	setp.ne.s16	%p58, %rs22, 0;
	@%p58 bra 	BB14_39;

BB14_30:
	add.s32 	%r69, %r7, 1;
	ld.global.u32 	%r18, [SIZE_X];
	setp.lt.s32	%p60, %r69, %r18;
	setp.gt.s32	%p61, %r7, -2;
	and.pred  	%p62, %p61, %p60;
	and.pred  	%p63, %p62, %p18;
	ld.global.u32 	%r70, [SIZE_Y];
	setp.le.s32	%p64, %r11, %r70;
	and.pred  	%p65, %p63, %p64;
	@!%p65 bra 	BB14_33;
	bra.uni 	BB14_31;

BB14_31:
	ld.global.u64 	%rd102, [cells];
	add.s32 	%r71, %r98, -2;
	mad.lo.s32 	%r72, %r18, %r71, %r7;
	add.s32 	%r73, %r72, 1;
	mul.wide.s32 	%rd103, %r73, 8;
	add.s64 	%rd104, %rd102, %rd103;
	ld.u64 	%rd105, [%rd104];
	ld.u64 	%rd106, [%rd105];
	ld.u64 	%rd107, [%rd106];
	// Callseq Start 49
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd105;
	.param .b64 retval0;
	prototype_49 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd107, 
	(
	param0
	)
	, prototype_49;
	ld.param.b64	%rd146, [retval0+0];
	
	//{
	}// Callseq End 49
	setp.eq.s64	%p66, %rd146, 0;
	@%p66 bra 	BB14_33;

	ld.u64 	%rd108, [%rd146];
	ld.u64 	%rd109, [%rd108+16];
	// Callseq Start 50
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd146;
	.param .b32 retval0;
	prototype_50 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd109, 
	(
	param0
	)
	, prototype_50;
	ld.param.b32	%r74, [retval0+0];
	
	//{
	}// Callseq End 50
	cvt.u16.u32	%rs23, %r74;
	and.b16  	%rs24, %rs23, 255;
	setp.ne.s16	%p67, %rs24, 0;
	@%p67 bra 	BB14_39;

BB14_33:
	ld.global.u32 	%r19, [SIZE_X];
	setp.lt.s32	%p69, %r69, %r19;
	and.pred  	%p70, %p61, %p69;
	ld.global.u32 	%r76, [SIZE_Y];
	setp.lt.s32	%p71, %r11, %r76;
	and.pred  	%p72, %p70, %p71;
	@!%p72 bra 	BB14_36;
	bra.uni 	BB14_34;

BB14_34:
	ld.global.u64 	%rd110, [cells];
	mad.lo.s32 	%r77, %r19, %r11, %r7;
	add.s32 	%r78, %r77, 1;
	mul.wide.s32 	%rd111, %r78, 8;
	add.s64 	%rd112, %rd110, %rd111;
	ld.u64 	%rd113, [%rd112];
	ld.u64 	%rd114, [%rd113];
	ld.u64 	%rd115, [%rd114];
	// Callseq Start 51
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 retval0;
	prototype_51 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd115, 
	(
	param0
	)
	, prototype_51;
	ld.param.b64	%rd146, [retval0+0];
	
	//{
	}// Callseq End 51
	setp.eq.s64	%p73, %rd146, 0;
	@%p73 bra 	BB14_36;

	ld.u64 	%rd116, [%rd146];
	ld.u64 	%rd117, [%rd116+16];
	// Callseq Start 52
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd146;
	.param .b32 retval0;
	prototype_52 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd117, 
	(
	param0
	)
	, prototype_52;
	ld.param.b32	%r79, [retval0+0];
	
	//{
	}// Callseq End 52
	cvt.u16.u32	%rs25, %r79;
	and.b16  	%rs26, %rs25, 255;
	setp.ne.s16	%p74, %rs26, 0;
	@%p74 bra 	BB14_39;

BB14_36:
	ld.global.u32 	%r20, [SIZE_X];
	setp.lt.s32	%p76, %r69, %r20;
	and.pred  	%p78, %p61, %p76;
	and.pred  	%p79, %p78, %p34;
	ld.global.u32 	%r81, [SIZE_Y];
	setp.lt.s32	%p80, %r98, %r81;
	and.pred  	%p81, %p79, %p80;
	@!%p81 bra 	BB14_41;
	bra.uni 	BB14_37;

BB14_37:
	ld.global.u64 	%rd118, [cells];
	mad.lo.s32 	%r82, %r20, %r98, %r7;
	add.s32 	%r83, %r82, 1;
	mul.wide.s32 	%rd119, %r83, 8;
	add.s64 	%rd120, %rd118, %rd119;
	ld.u64 	%rd121, [%rd120];
	ld.u64 	%rd122, [%rd121];
	ld.u64 	%rd123, [%rd122];
	// Callseq Start 53
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd121;
	.param .b64 retval0;
	prototype_53 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd123, 
	(
	param0
	)
	, prototype_53;
	ld.param.b64	%rd146, [retval0+0];
	
	//{
	}// Callseq End 53
	setp.eq.s64	%p82, %rd146, 0;
	@%p82 bra 	BB14_41;

	ld.u64 	%rd124, [%rd146];
	ld.u64 	%rd125, [%rd124+16];
	// Callseq Start 54
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd146;
	.param .b32 retval0;
	prototype_54 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd125, 
	(
	param0
	)
	, prototype_54;
	ld.param.b32	%r84, [retval0+0];
	
	//{
	}// Callseq End 54
	cvt.u16.u32	%rs27, %r84;
	and.b16  	%rs28, %rs27, 255;
	setp.eq.s16	%p83, %rs28, 0;
	@%p83 bra 	BB14_41;
	bra.uni 	BB14_39;

BB14_41:
	mov.u64 	%rd132, $str1;
	cvta.global.u64 	%rd133, %rd132;
	mov.u64 	%rd134, $str2;
	cvta.global.u64 	%rd135, %rd134;
	mov.u64 	%rd136, __unnamed_1;
	cvta.global.u64 	%rd137, %rd136;
	mov.u32 	%r88, 73;
	mov.u64 	%rd138, 1;
	// Callseq Start 56
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd133;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd135;
	.param .b32 param2;
	st.param.b32	[param2+0], %r88;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd137;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd138;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 56
	bra.uni 	BB14_42;

BB14_39:
	setp.ne.s64	%p84, %rd146, %rd1;
	@%p84 bra 	BB14_42;

	ld.global.u64 	%rd126, [cells];
	ld.global.u32 	%r85, [SIZE_X];
	mad.lo.s32 	%r86, %r85, %r11, %r7;
	mul.wide.s32 	%rd127, %r86, 8;
	add.s64 	%rd128, %rd126, %rd127;
	ld.u64 	%rd129, [%rd128];
	ld.u64 	%rd130, [%rd129];
	ld.u64 	%rd131, [%rd130+8];
	mov.u32 	%r87, 1;
	// Callseq Start 55
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd129;
	.param .b32 param1;
	st.param.b32	[param1+0], %r86;
	.param .b32 param2;
	st.param.b32	[param2+0], %r87;
	prototype_55 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _);
	call 
	%rd131, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_55;
	
	//{
	}// Callseq End 55

BB14_42:
	add.s32 	%r99, %r99, 1;
	add.s32 	%r98, %r98, 1;
	setp.lt.s32	%p85, %r99, 2;
	@%p85 bra 	BB14_10;

	add.s32 	%r97, %r97, 1;
	setp.lt.s32	%p86, %r97, 2;
	@%p86 bra 	BB14_9;

BB14_46:
	mov.u32 	%r91, %nctaid.x;
	mad.lo.s32 	%r96, %r91, %r27, %r96;
	ld.global.u32 	%r93, [SIZE_Y];
	ld.global.u32 	%r94, [SIZE_X];
	mul.lo.s32 	%r95, %r93, %r94;
	setp.lt.s32	%p88, %r96, %r95;
	@%p88 bra 	BB14_1;

BB14_47:
	ret;
}

	// .globl	_Z17candidate_preparev
.visible .entry _Z17candidate_preparev(

)
{
	.reg .pred 	%p<88>;
	.reg .b16 	%rs<21>;
	.reg .b32 	%r<103>;
	.reg .b64 	%rd<99>;


	mov.u32 	%r36, %tid.x;
	mov.u32 	%r37, %ctaid.x;
	mov.u32 	%r38, %ntid.x;
	mad.lo.s32 	%r93, %r37, %r38, %r36;
	ld.global.u32 	%r39, [SIZE_Y];
	ld.global.u32 	%r40, [SIZE_X];
	mul.lo.s32 	%r41, %r39, %r40;
	setp.ge.s32	%p1, %r93, %r41;
	@%p1 bra 	BB15_35;

BB15_1:
	ld.global.u64 	%rd11, [cells];
	mul.wide.s32 	%rd12, %r93, 8;
	add.s64 	%rd13, %rd11, %rd12;
	ld.u64 	%rd14, [%rd13];
	ld.u64 	%rd15, [%rd14];
	ld.u64 	%rd16, [%rd15];
	// Callseq Start 59
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 retval0;
	prototype_59 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd16, 
	(
	param0
	)
	, prototype_59;
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 59
	setp.eq.s64	%p2, %rd1, 0;
	@%p2 bra 	BB15_34;

	ld.u64 	%rd17, [%rd1];
	ld.u64 	%rd18, [%rd17+8];
	// Callseq Start 60
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_60 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd18, 
	(
	param0
	)
	, prototype_60;
	ld.param.b32	%r42, [retval0+0];
	
	//{
	}// Callseq End 60
	cvt.u16.u32	%rs1, %r42;
	and.b16  	%rs2, %rs1, 255;
	setp.eq.s16	%p3, %rs2, 0;
	@%p3 bra 	BB15_34;

	ld.u64 	%rd19, [%rd1];
	ld.u64 	%rd20, [%rd19+48];
	// Callseq Start 61
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_61 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd20, 
	(
	param0
	)
	, prototype_61;
	ld.param.b32	%r44, [retval0+0];
	
	//{
	}// Callseq End 61
	ld.global.u32 	%r45, [SIZE_X];
	rem.s32 	%r3, %r44, %r45;
	ld.u64 	%rd21, [%rd1];
	ld.u64 	%rd22, [%rd21+48];
	// Callseq Start 62
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_62 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd22, 
	(
	param0
	)
	, prototype_62;
	ld.param.b32	%r46, [retval0+0];
	
	//{
	}// Callseq End 62
	ld.global.u32 	%r4, [SIZE_X];
	div.s32 	%r5, %r46, %r4;
	add.s32 	%r6, %r3, -1;
	setp.gt.s32	%p4, %r3, 0;
	setp.le.s32	%p5, %r3, %r4;
	and.pred  	%p6, %p4, %p5;
	setp.gt.s32	%p7, %r5, 0;
	and.pred  	%p8, %p6, %p7;
	ld.global.u32 	%r47, [SIZE_Y];
	setp.le.s32	%p9, %r5, %r47;
	and.pred  	%p10, %p8, %p9;
	mov.u32 	%r94, 0;
	@!%p10 bra 	BB15_6;
	bra.uni 	BB15_4;

BB15_4:
	ld.global.u64 	%rd23, [cells];
	add.s32 	%r49, %r5, -1;
	mad.lo.s32 	%r50, %r4, %r49, %r6;
	mul.wide.s32 	%rd24, %r50, 8;
	add.s64 	%rd25, %rd23, %rd24;
	ld.u64 	%rd26, [%rd25];
	ld.u64 	%rd27, [%rd26];
	ld.u64 	%rd28, [%rd27];
	// Callseq Start 63
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd26;
	.param .b64 retval0;
	prototype_63 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd28, 
	(
	param0
	)
	, prototype_63;
	ld.param.b64	%rd2, [retval0+0];
	
	//{
	}// Callseq End 63
	setp.eq.s64	%p11, %rd2, 0;
	@%p11 bra 	BB15_6;

	ld.u64 	%rd29, [%rd2];
	ld.u64 	%rd30, [%rd29];
	// Callseq Start 64
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_64 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd30, 
	(
	param0
	)
	, prototype_64;
	ld.param.b32	%r51, [retval0+0];
	
	//{
	}// Callseq End 64
	cvt.u16.u32	%rs3, %r51;
	and.b16  	%rs4, %rs3, 255;
	setp.ne.s16	%p12, %rs4, 0;
	selp.u32	%r94, 1, 0, %p12;

BB15_6:
	ld.global.u32 	%r9, [SIZE_X];
	setp.le.s32	%p13, %r3, %r9;
	and.pred  	%p15, %p4, %p13;
	setp.gt.s32	%p16, %r5, -1;
	and.pred  	%p17, %p15, %p16;
	ld.global.u32 	%r52, [SIZE_Y];
	setp.lt.s32	%p18, %r5, %r52;
	and.pred  	%p19, %p17, %p18;
	@!%p19 bra 	BB15_9;
	bra.uni 	BB15_7;

BB15_7:
	ld.global.u64 	%rd31, [cells];
	mad.lo.s32 	%r53, %r9, %r5, %r6;
	mul.wide.s32 	%rd32, %r53, 8;
	add.s64 	%rd33, %rd31, %rd32;
	ld.u64 	%rd34, [%rd33];
	ld.u64 	%rd35, [%rd34];
	ld.u64 	%rd36, [%rd35];
	// Callseq Start 65
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd34;
	.param .b64 retval0;
	prototype_65 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd36, 
	(
	param0
	)
	, prototype_65;
	ld.param.b64	%rd3, [retval0+0];
	
	//{
	}// Callseq End 65
	setp.eq.s64	%p20, %rd3, 0;
	@%p20 bra 	BB15_9;

	ld.u64 	%rd37, [%rd3];
	ld.u64 	%rd38, [%rd37];
	// Callseq Start 66
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3;
	.param .b32 retval0;
	prototype_66 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd38, 
	(
	param0
	)
	, prototype_66;
	ld.param.b32	%r54, [retval0+0];
	
	//{
	}// Callseq End 66
	cvt.u16.u32	%rs5, %r54;
	and.b16  	%rs6, %rs5, 255;
	setp.ne.s16	%p21, %rs6, 0;
	selp.u32	%r55, 1, 0, %p21;
	add.s32 	%r94, %r55, %r94;

BB15_9:
	ld.global.u32 	%r12, [SIZE_X];
	setp.le.s32	%p22, %r3, %r12;
	and.pred  	%p24, %p4, %p22;
	setp.gt.s32	%p25, %r5, -2;
	and.pred  	%p26, %p24, %p25;
	ld.global.u32 	%r56, [SIZE_Y];
	add.s32 	%r13, %r5, 1;
	setp.lt.s32	%p27, %r13, %r56;
	and.pred  	%p28, %p26, %p27;
	@!%p28 bra 	BB15_12;
	bra.uni 	BB15_10;

BB15_10:
	ld.global.u64 	%rd39, [cells];
	mad.lo.s32 	%r57, %r12, %r13, %r6;
	mul.wide.s32 	%rd40, %r57, 8;
	add.s64 	%rd41, %rd39, %rd40;
	ld.u64 	%rd42, [%rd41];
	ld.u64 	%rd43, [%rd42];
	ld.u64 	%rd44, [%rd43];
	// Callseq Start 67
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd42;
	.param .b64 retval0;
	prototype_67 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd44, 
	(
	param0
	)
	, prototype_67;
	ld.param.b64	%rd4, [retval0+0];
	
	//{
	}// Callseq End 67
	setp.eq.s64	%p29, %rd4, 0;
	@%p29 bra 	BB15_12;

	ld.u64 	%rd45, [%rd4];
	ld.u64 	%rd46, [%rd45];
	// Callseq Start 68
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b32 retval0;
	prototype_68 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd46, 
	(
	param0
	)
	, prototype_68;
	ld.param.b32	%r58, [retval0+0];
	
	//{
	}// Callseq End 68
	cvt.u16.u32	%rs7, %r58;
	and.b16  	%rs8, %rs7, 255;
	setp.ne.s16	%p30, %rs8, 0;
	selp.u32	%r59, 1, 0, %p30;
	add.s32 	%r94, %r59, %r94;

BB15_12:
	ld.global.u32 	%r16, [SIZE_X];
	setp.lt.s32	%p31, %r3, %r16;
	setp.gt.s32	%p32, %r3, -1;
	and.pred  	%p33, %p32, %p31;
	and.pred  	%p35, %p33, %p7;
	ld.global.u32 	%r60, [SIZE_Y];
	setp.le.s32	%p36, %r5, %r60;
	and.pred  	%p37, %p35, %p36;
	@!%p37 bra 	BB15_15;
	bra.uni 	BB15_13;

BB15_13:
	ld.global.u64 	%rd47, [cells];
	add.s32 	%r61, %r5, -1;
	mad.lo.s32 	%r62, %r16, %r61, %r3;
	mul.wide.s32 	%rd48, %r62, 8;
	add.s64 	%rd49, %rd47, %rd48;
	ld.u64 	%rd50, [%rd49];
	ld.u64 	%rd51, [%rd50];
	ld.u64 	%rd52, [%rd51];
	// Callseq Start 69
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd50;
	.param .b64 retval0;
	prototype_69 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd52, 
	(
	param0
	)
	, prototype_69;
	ld.param.b64	%rd5, [retval0+0];
	
	//{
	}// Callseq End 69
	setp.eq.s64	%p38, %rd5, 0;
	@%p38 bra 	BB15_15;

	ld.u64 	%rd53, [%rd5];
	ld.u64 	%rd54, [%rd53];
	// Callseq Start 70
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b32 retval0;
	prototype_70 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd54, 
	(
	param0
	)
	, prototype_70;
	ld.param.b32	%r63, [retval0+0];
	
	//{
	}// Callseq End 70
	cvt.u16.u32	%rs9, %r63;
	and.b16  	%rs10, %rs9, 255;
	setp.ne.s16	%p39, %rs10, 0;
	selp.u32	%r64, 1, 0, %p39;
	add.s32 	%r94, %r64, %r94;

BB15_15:
	ld.global.u32 	%r19, [SIZE_X];
	setp.lt.s32	%p40, %r3, %r19;
	and.pred  	%p42, %p32, %p40;
	and.pred  	%p44, %p42, %p16;
	ld.global.u32 	%r65, [SIZE_Y];
	setp.lt.s32	%p45, %r5, %r65;
	and.pred  	%p46, %p44, %p45;
	@!%p46 bra 	BB15_18;
	bra.uni 	BB15_16;

BB15_16:
	ld.global.u64 	%rd55, [cells];
	mad.lo.s32 	%r66, %r19, %r5, %r3;
	mul.wide.s32 	%rd56, %r66, 8;
	add.s64 	%rd57, %rd55, %rd56;
	ld.u64 	%rd58, [%rd57];
	ld.u64 	%rd59, [%rd58];
	ld.u64 	%rd60, [%rd59];
	// Callseq Start 71
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd58;
	.param .b64 retval0;
	prototype_71 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd60, 
	(
	param0
	)
	, prototype_71;
	ld.param.b64	%rd6, [retval0+0];
	
	//{
	}// Callseq End 71
	setp.eq.s64	%p47, %rd6, 0;
	@%p47 bra 	BB15_18;

	ld.u64 	%rd61, [%rd6];
	ld.u64 	%rd62, [%rd61];
	// Callseq Start 72
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b32 retval0;
	prototype_72 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd62, 
	(
	param0
	)
	, prototype_72;
	ld.param.b32	%r67, [retval0+0];
	
	//{
	}// Callseq End 72
	cvt.u16.u32	%rs11, %r67;
	and.b16  	%rs12, %rs11, 255;
	setp.ne.s16	%p48, %rs12, 0;
	selp.u32	%r68, 1, 0, %p48;
	add.s32 	%r94, %r68, %r94;

BB15_18:
	ld.global.u32 	%r22, [SIZE_X];
	setp.lt.s32	%p49, %r3, %r22;
	and.pred  	%p51, %p32, %p49;
	and.pred  	%p53, %p51, %p25;
	ld.global.u32 	%r69, [SIZE_Y];
	setp.lt.s32	%p54, %r13, %r69;
	and.pred  	%p55, %p53, %p54;
	@!%p55 bra 	BB15_21;
	bra.uni 	BB15_19;

BB15_19:
	ld.global.u64 	%rd63, [cells];
	mad.lo.s32 	%r70, %r22, %r13, %r3;
	mul.wide.s32 	%rd64, %r70, 8;
	add.s64 	%rd65, %rd63, %rd64;
	ld.u64 	%rd66, [%rd65];
	ld.u64 	%rd67, [%rd66];
	ld.u64 	%rd68, [%rd67];
	// Callseq Start 73
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd66;
	.param .b64 retval0;
	prototype_73 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd68, 
	(
	param0
	)
	, prototype_73;
	ld.param.b64	%rd7, [retval0+0];
	
	//{
	}// Callseq End 73
	setp.eq.s64	%p56, %rd7, 0;
	@%p56 bra 	BB15_21;

	ld.u64 	%rd69, [%rd7];
	ld.u64 	%rd70, [%rd69];
	// Callseq Start 74
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b32 retval0;
	prototype_74 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd70, 
	(
	param0
	)
	, prototype_74;
	ld.param.b32	%r71, [retval0+0];
	
	//{
	}// Callseq End 74
	cvt.u16.u32	%rs13, %r71;
	and.b16  	%rs14, %rs13, 255;
	setp.ne.s16	%p57, %rs14, 0;
	selp.u32	%r72, 1, 0, %p57;
	add.s32 	%r94, %r72, %r94;

BB15_21:
	ld.global.u32 	%r25, [SIZE_X];
	add.s32 	%r26, %r3, 1;
	setp.lt.s32	%p58, %r26, %r25;
	setp.gt.s32	%p59, %r3, -2;
	and.pred  	%p60, %p59, %p58;
	and.pred  	%p62, %p60, %p7;
	ld.global.u32 	%r73, [SIZE_Y];
	setp.le.s32	%p63, %r5, %r73;
	and.pred  	%p64, %p62, %p63;
	@!%p64 bra 	BB15_24;
	bra.uni 	BB15_22;

BB15_22:
	ld.global.u64 	%rd71, [cells];
	add.s32 	%r74, %r5, -1;
	mad.lo.s32 	%r75, %r25, %r74, %r26;
	mul.wide.s32 	%rd72, %r75, 8;
	add.s64 	%rd73, %rd71, %rd72;
	ld.u64 	%rd74, [%rd73];
	ld.u64 	%rd75, [%rd74];
	ld.u64 	%rd76, [%rd75];
	// Callseq Start 75
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd74;
	.param .b64 retval0;
	prototype_75 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd76, 
	(
	param0
	)
	, prototype_75;
	ld.param.b64	%rd8, [retval0+0];
	
	//{
	}// Callseq End 75
	setp.eq.s64	%p65, %rd8, 0;
	@%p65 bra 	BB15_24;

	ld.u64 	%rd77, [%rd8];
	ld.u64 	%rd78, [%rd77];
	// Callseq Start 76
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b32 retval0;
	prototype_76 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd78, 
	(
	param0
	)
	, prototype_76;
	ld.param.b32	%r76, [retval0+0];
	
	//{
	}// Callseq End 76
	cvt.u16.u32	%rs15, %r76;
	and.b16  	%rs16, %rs15, 255;
	setp.ne.s16	%p66, %rs16, 0;
	selp.u32	%r77, 1, 0, %p66;
	add.s32 	%r94, %r77, %r94;

BB15_24:
	ld.global.u32 	%r29, [SIZE_X];
	setp.lt.s32	%p67, %r26, %r29;
	and.pred  	%p69, %p59, %p67;
	and.pred  	%p71, %p69, %p16;
	ld.global.u32 	%r78, [SIZE_Y];
	setp.lt.s32	%p72, %r5, %r78;
	and.pred  	%p73, %p71, %p72;
	@!%p73 bra 	BB15_27;
	bra.uni 	BB15_25;

BB15_25:
	ld.global.u64 	%rd79, [cells];
	mad.lo.s32 	%r79, %r29, %r5, %r26;
	mul.wide.s32 	%rd80, %r79, 8;
	add.s64 	%rd81, %rd79, %rd80;
	ld.u64 	%rd82, [%rd81];
	ld.u64 	%rd83, [%rd82];
	ld.u64 	%rd84, [%rd83];
	// Callseq Start 77
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd82;
	.param .b64 retval0;
	prototype_77 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd84, 
	(
	param0
	)
	, prototype_77;
	ld.param.b64	%rd9, [retval0+0];
	
	//{
	}// Callseq End 77
	setp.eq.s64	%p74, %rd9, 0;
	@%p74 bra 	BB15_27;

	ld.u64 	%rd85, [%rd9];
	ld.u64 	%rd86, [%rd85];
	// Callseq Start 78
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd9;
	.param .b32 retval0;
	prototype_78 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd86, 
	(
	param0
	)
	, prototype_78;
	ld.param.b32	%r80, [retval0+0];
	
	//{
	}// Callseq End 78
	cvt.u16.u32	%rs17, %r80;
	and.b16  	%rs18, %rs17, 255;
	setp.ne.s16	%p75, %rs18, 0;
	selp.u32	%r81, 1, 0, %p75;
	add.s32 	%r94, %r81, %r94;

BB15_27:
	ld.global.u32 	%r32, [SIZE_X];
	setp.lt.s32	%p76, %r26, %r32;
	and.pred  	%p78, %p59, %p76;
	and.pred  	%p80, %p78, %p25;
	ld.global.u32 	%r82, [SIZE_Y];
	setp.lt.s32	%p81, %r13, %r82;
	and.pred  	%p82, %p80, %p81;
	@!%p82 bra 	BB15_30;
	bra.uni 	BB15_28;

BB15_28:
	ld.global.u64 	%rd87, [cells];
	mad.lo.s32 	%r83, %r32, %r13, %r26;
	mul.wide.s32 	%rd88, %r83, 8;
	add.s64 	%rd89, %rd87, %rd88;
	ld.u64 	%rd90, [%rd89];
	ld.u64 	%rd91, [%rd90];
	ld.u64 	%rd92, [%rd91];
	// Callseq Start 79
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd90;
	.param .b64 retval0;
	prototype_79 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd92, 
	(
	param0
	)
	, prototype_79;
	ld.param.b64	%rd10, [retval0+0];
	
	//{
	}// Callseq End 79
	setp.eq.s64	%p83, %rd10, 0;
	@%p83 bra 	BB15_30;

	ld.u64 	%rd93, [%rd10];
	ld.u64 	%rd94, [%rd93];
	// Callseq Start 80
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b32 retval0;
	prototype_80 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd94, 
	(
	param0
	)
	, prototype_80;
	ld.param.b32	%r84, [retval0+0];
	
	//{
	}// Callseq End 80
	cvt.u16.u32	%rs19, %r84;
	and.b16  	%rs20, %rs19, 255;
	setp.ne.s16	%p84, %rs20, 0;
	selp.u32	%r85, 1, 0, %p84;
	add.s32 	%r94, %r85, %r94;

BB15_30:
	setp.eq.s32	%p85, %r94, 3;
	@%p85 bra 	BB15_33;
	bra.uni 	BB15_31;

BB15_33:
	ld.u64 	%rd97, [%rd1];
	ld.u64 	%rd98, [%rd97+32];
	mov.u32 	%r87, 2;
	// Callseq Start 82
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 param1;
	st.param.b32	[param1+0], %r87;
	prototype_82 : .callprototype ()_ (.param .b64 _, .param .b32 _);
	call 
	%rd98, 
	(
	param0, 
	param1
	)
	, prototype_82;
	
	//{
	}// Callseq End 82
	bra.uni 	BB15_34;

BB15_31:
	setp.ne.s32	%p86, %r94, 0;
	@%p86 bra 	BB15_34;

	ld.u64 	%rd95, [%rd1];
	ld.u64 	%rd96, [%rd95+32];
	mov.u32 	%r86, 1;
	// Callseq Start 81
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 param1;
	st.param.b32	[param1+0], %r86;
	prototype_81 : .callprototype ()_ (.param .b64 _, .param .b32 _);
	call 
	%rd96, 
	(
	param0, 
	param1
	)
	, prototype_81;
	
	//{
	}// Callseq End 81

BB15_34:
	mov.u32 	%r88, %nctaid.x;
	mad.lo.s32 	%r93, %r88, %r38, %r93;
	ld.global.u32 	%r90, [SIZE_Y];
	ld.global.u32 	%r91, [SIZE_X];
	mul.lo.s32 	%r92, %r90, %r91;
	setp.lt.s32	%p87, %r93, %r92;
	@%p87 bra 	BB15_1;

BB15_35:
	ret;
}

	// .globl	_Z16candidate_updatev
.visible .entry _Z16candidate_updatev(

)
{
	.reg .pred 	%p<7>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<21>;
	.reg .b64 	%rd<29>;


	mov.u32 	%r7, %tid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mad.lo.s32 	%r20, %r8, %r1, %r7;
	ld.global.u32 	%r9, [SIZE_Y];
	ld.global.u32 	%r10, [SIZE_X];
	mul.lo.s32 	%r11, %r9, %r10;
	setp.ge.s32	%p1, %r20, %r11;
	@%p1 bra 	BB16_9;

	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r3, %r12, %r1;

BB16_2:
	ld.global.u64 	%rd3, [cells];
	mul.wide.s32 	%rd4, %r20, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.u64 	%rd6, [%rd5];
	ld.u64 	%rd7, [%rd6];
	ld.u64 	%rd8, [%rd7];
	// Callseq Start 83
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b64 retval0;
	prototype_83 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd8, 
	(
	param0
	)
	, prototype_83;
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 83
	setp.eq.s64	%p2, %rd1, 0;
	@%p2 bra 	BB16_8;

	ld.u64 	%rd9, [%rd1];
	ld.u64 	%rd10, [%rd9+8];
	// Callseq Start 84
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_84 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd10, 
	(
	param0
	)
	, prototype_84;
	ld.param.b32	%r13, [retval0+0];
	
	//{
	}// Callseq End 84
	cvt.u16.u32	%rs1, %r13;
	and.b16  	%rs2, %rs1, 255;
	setp.eq.s16	%p3, %rs2, 0;
	@%p3 bra 	BB16_8;

	ld.u64 	%rd11, [%rd1];
	ld.u64 	%rd12, [%rd11+48];
	// Callseq Start 85
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_85 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd12, 
	(
	param0
	)
	, prototype_85;
	ld.param.b32	%r5, [retval0+0];
	
	//{
	}// Callseq End 85
	ld.u64 	%rd13, [%rd1];
	ld.u64 	%rd14, [%rd13+40];
	// Callseq Start 86
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_86 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd14, 
	(
	param0
	)
	, prototype_86;
	ld.param.b32	%r14, [retval0+0];
	
	//{
	}// Callseq End 86
	setp.eq.s32	%p4, %r14, 2;
	@%p4 bra 	BB16_7;
	bra.uni 	BB16_5;

BB16_7:
	ld.global.u64 	%rd23, [cells];
	mul.wide.s32 	%rd24, %r5, 8;
	add.s64 	%rd25, %rd23, %rd24;
	ld.u64 	%rd26, [%rd25];
	ld.u64 	%rd27, [%rd26];
	ld.u64 	%rd28, [%rd27+8];
	mov.u32 	%r16, 0;
	// Callseq Start 89
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd26;
	.param .b32 param1;
	st.param.b32	[param1+0], %r5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r16;
	prototype_89 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _);
	call 
	%rd28, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_89;
	
	//{
	}// Callseq End 89
	bra.uni 	BB16_8;

BB16_5:
	ld.u64 	%rd15, [%rd1];
	ld.u64 	%rd16, [%rd15+40];
	// Callseq Start 87
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_87 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd16, 
	(
	param0
	)
	, prototype_87;
	ld.param.b32	%r15, [retval0+0];
	
	//{
	}// Callseq End 87
	setp.ne.s32	%p5, %r15, 1;
	@%p5 bra 	BB16_8;

	ld.global.u64 	%rd17, [cells];
	mul.wide.s32 	%rd18, %r5, 8;
	add.s64 	%rd19, %rd17, %rd18;
	ld.u64 	%rd20, [%rd19];
	ld.u64 	%rd21, [%rd20];
	ld.u64 	%rd22, [%rd21+16];
	// Callseq Start 88
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd20;
	prototype_88 : .callprototype ()_ (.param .b64 _);
	call 
	%rd22, 
	(
	param0
	)
	, prototype_88;
	
	//{
	}// Callseq End 88

BB16_8:
	add.s32 	%r20, %r3, %r20;
	ld.global.u32 	%r17, [SIZE_Y];
	ld.global.u32 	%r18, [SIZE_X];
	mul.lo.s32 	%r19, %r17, %r18;
	setp.lt.s32	%p6, %r20, %r19;
	@%p6 bra 	BB16_2;

BB16_9:
	ret;
}

	// .globl	_Z12create_cellsv
.visible .entry _Z12create_cellsv(

)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<34>;


	mov.u32 	%r6, %tid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mad.lo.s32 	%r18, %r7, %r1, %r6;
	ld.global.u32 	%r8, [SIZE_Y];
	ld.global.u32 	%r9, [SIZE_X];
	mul.lo.s32 	%r10, %r8, %r9;
	setp.ge.s32	%p1, %r18, %r10;
	@%p1 bra 	BB17_9;

	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB17_2:
	mov.u64 	%rd9, 32;
	// Callseq Start 90
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd9;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 90
	setp.eq.s64	%p2, %rd1, 0;
	mov.u64 	%rd33, 0;
	@%p2 bra 	BB17_6;

	mov.u64 	%rd11, _ZTV4Cell;
	add.s64 	%rd12, %rd11, 16;
	cvta.global.u64 	%rd13, %rd12;
	st.u64 	[%rd1], %rd13;
	mov.u64 	%rd14, 24;
	// Callseq Start 91
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64	%rd3, [retval0+0];
	
	//{
	}// Callseq End 91
	setp.eq.s64	%p3, %rd3, 0;
	mov.u64 	%rd10, 0;
	mov.u64 	%rd32, %rd10;
	@%p3 bra 	BB17_5;

	mov.u64 	%rd15, _ZTV5Agent;
	add.s64 	%rd16, %rd15, 16;
	cvta.global.u64 	%rd17, %rd16;
	st.u64 	[%rd3], %rd17;
	mov.u32 	%r12, 2;
	st.u32 	[%rd3+12], %r12;
	mov.u64 	%rd32, %rd3;

BB17_5:
	st.u64 	[%rd1+16], %rd32;
	st.u64 	[%rd1+8], %rd10;
	mov.u32 	%r13, 0;
	st.u32 	[%rd1+24], %r13;
	mov.u64 	%rd33, %rd1;

BB17_6:
	ld.global.u64 	%rd19, [cells];
	mul.wide.s32 	%rd20, %r18, 8;
	add.s64 	%rd21, %rd19, %rd20;
	st.u64 	[%rd21], %rd33;
	ld.global.u64 	%rd22, [cells];
	add.s64 	%rd23, %rd22, %rd20;
	ld.u64 	%rd24, [%rd23];
	setp.ne.s64	%p4, %rd24, 0;
	@%p4 bra 	BB17_8;

	mov.u64 	%rd25, $str5;
	cvta.global.u64 	%rd26, %rd25;
	mov.u64 	%rd27, $str2;
	cvta.global.u64 	%rd28, %rd27;
	mov.u64 	%rd29, __unnamed_3;
	cvta.global.u64 	%rd30, %rd29;
	mov.u32 	%r14, 194;
	mov.u64 	%rd31, 1;
	// Callseq Start 92
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd26;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd28;
	.param .b32 param2;
	st.param.b32	[param2+0], %r14;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd30;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd31;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 92

BB17_8:
	add.s32 	%r18, %r3, %r18;
	ld.global.u32 	%r15, [SIZE_Y];
	ld.global.u32 	%r16, [SIZE_X];
	mul.lo.s32 	%r17, %r15, %r16;
	setp.lt.s32	%p5, %r18, %r17;
	@%p5 bra 	BB17_2;

BB17_9:
	ret;
}

	// .globl	_Z9load_gamePii
.visible .entry _Z9load_gamePii(
	.param .u64 _Z9load_gamePii_param_0,
	.param .u32 _Z9load_gamePii_param_1
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<27>;


	ld.param.u64 	%rd2, [_Z9load_gamePii_param_0];
	ld.param.u32 	%r6, [_Z9load_gamePii_param_1];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r16, %r7, %r1, %r8;
	setp.ge.s32	%p1, %r16, %r6;
	@%p1 bra 	BB18_5;

	cvta.to.global.u64 	%rd1, %rd2;
	mov.u32 	%r9, %nctaid.x;
	mul.lo.s32 	%r3, %r9, %r1;

BB18_2:
	mul.wide.s32 	%rd3, %r16, 4;
	add.s64 	%rd4, %rd1, %rd3;
	ld.global.u32 	%r10, [%rd4];
	ld.global.u64 	%rd5, [cells];
	mul.wide.s32 	%rd6, %r10, 8;
	add.s64 	%rd7, %rd5, %rd6;
	ld.u64 	%rd8, [%rd7];
	ld.u64 	%rd9, [%rd8];
	ld.u64 	%rd10, [%rd9+8];
	mov.u32 	%r11, 0;
	// Callseq Start 93
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b32 param1;
	st.param.b32	[param1+0], %r10;
	.param .b32 param2;
	st.param.b32	[param2+0], %r11;
	prototype_93 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _);
	call 
	%rd10, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_93;
	
	//{
	}// Callseq End 93
	ld.global.u32 	%r12, [%rd4];
	ld.global.u64 	%rd11, [cells];
	mul.wide.s32 	%rd12, %r12, 8;
	add.s64 	%rd13, %rd11, %rd12;
	ld.u64 	%rd14, [%rd13];
	ld.u64 	%rd15, [%rd14];
	ld.u64 	%rd16, [%rd15];
	// Callseq Start 94
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 retval0;
	prototype_94 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd16, 
	(
	param0
	)
	, prototype_94;
	ld.param.b64	%rd17, [retval0+0];
	
	//{
	}// Callseq End 94
	ld.u64 	%rd18, [%rd17];
	ld.u64 	%rd19, [%rd18+48];
	// Callseq Start 95
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd17;
	.param .b32 retval0;
	prototype_95 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd19, 
	(
	param0
	)
	, prototype_95;
	ld.param.b32	%r13, [retval0+0];
	
	//{
	}// Callseq End 95
	ld.global.u32 	%r14, [%rd4];
	setp.eq.s32	%p2, %r13, %r14;
	@%p2 bra 	BB18_4;

	mov.u64 	%rd20, $str6;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, $str2;
	cvta.global.u64 	%rd23, %rd22;
	mov.u64 	%rd24, __unnamed_4;
	cvta.global.u64 	%rd25, %rd24;
	mov.u32 	%r15, 203;
	mov.u64 	%rd26, 1;
	// Callseq Start 96
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd23;
	.param .b32 param2;
	st.param.b32	[param2+0], %r15;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd25;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd26;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 96

BB18_4:
	add.s32 	%r16, %r3, %r16;
	setp.lt.s32	%p3, %r16, %r6;
	@%p3 bra 	BB18_2;

BB18_5:
	ret;
}

	// .globl	_Z15update_checksumv
.visible .entry _Z15update_checksumv(

)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<10>;


	mov.u32 	%r6, %tid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mad.lo.s32 	%r15, %r7, %r1, %r6;
	ld.global.u32 	%r8, [SIZE_Y];
	ld.global.u32 	%r9, [SIZE_X];
	mul.lo.s32 	%r10, %r8, %r9;
	setp.ge.s32	%p1, %r15, %r10;
	@%p1 bra 	BB19_5;

	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB19_2:
	ld.global.u64 	%rd2, [cells];
	mul.wide.s32 	%rd3, %r15, 8;
	add.s64 	%rd4, %rd2, %rd3;
	ld.u64 	%rd5, [%rd4];
	ld.u64 	%rd6, [%rd5];
	ld.u64 	%rd7, [%rd6];
	// Callseq Start 97
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 retval0;
	prototype_97 : .callprototype (.param .b64 _) _ (.param .b64 _);
	call (retval0), 
	%rd7, 
	(
	param0
	)
	, prototype_97;
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 97
	setp.eq.s64	%p2, %rd1, 0;
	@%p2 bra 	BB19_4;

	ld.u64 	%rd8, [%rd1];
	ld.u64 	%rd9, [%rd8+56];
	// Callseq Start 98
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	prototype_98 : .callprototype ()_ (.param .b64 _);
	call 
	%rd9, 
	(
	param0
	)
	, prototype_98;
	
	//{
	}// Callseq End 98

BB19_4:
	add.s32 	%r15, %r3, %r15;
	ld.global.u32 	%r12, [SIZE_Y];
	ld.global.u32 	%r13, [SIZE_X];
	mul.lo.s32 	%r14, %r12, %r13;
	setp.lt.s32	%p3, %r15, %r14;
	@%p3 bra 	BB19_2;

BB19_5:
	ret;
}

	// .globl	_Z11dump_vtableI5AgentEvPPvS2_
.visible .entry _Z11dump_vtableI5AgentEvPPvS2_(
	.param .u64 _Z11dump_vtableI5AgentEvPPvS2__param_0,
	.param .u64 _Z11dump_vtableI5AgentEvPPvS2__param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<74>;


	ld.param.u64 	%rd2, [_Z11dump_vtableI5AgentEvPPvS2__param_0];
	ld.param.u64 	%rd3, [_Z11dump_vtableI5AgentEvPPvS2__param_1];
	mov.u64 	%rd73, 0;
	mov.u64 	%rd5, buf5;
	cvta.global.u64 	%rd6, %rd5;
	setp.eq.s64	%p1, %rd6, 0;
	@%p1 bra 	BB20_2;

	mov.u64 	%rd8, _ZTV5Agent;
	add.s64 	%rd9, %rd8, 16;
	cvta.global.u64 	%rd10, %rd9;
	st.global.u64 	[buf5], %rd10;
	mov.u32 	%r1, 2;
	st.global.u32 	[buf5+12], %r1;
	mov.u64 	%rd73, %rd5;

BB20_2:
	cvta.to.global.u64 	%rd11, %rd2;
	cvta.to.global.u64 	%rd12, %rd3;
	ld.global.u8 	%rs1, [%rd73];
	st.global.u8 	[%rd12], %rs1;
	ld.global.u8 	%rs2, [%rd73+1];
	st.global.u8 	[%rd12+1], %rs2;
	ld.global.u8 	%rs3, [%rd73+2];
	st.global.u8 	[%rd12+2], %rs3;
	ld.global.u8 	%rs4, [%rd73+3];
	st.global.u8 	[%rd12+3], %rs4;
	ld.global.u8 	%rs5, [%rd73+4];
	st.global.u8 	[%rd12+4], %rs5;
	ld.global.u8 	%rs6, [%rd73+5];
	st.global.u8 	[%rd12+5], %rs6;
	ld.global.u8 	%rs7, [%rd73+6];
	st.global.u8 	[%rd12+6], %rs7;
	ld.global.u8 	%rs8, [%rd73+7];
	st.global.u8 	[%rd12+7], %rs8;
	ld.global.u64 	%rd13, [%rd73];
	ld.u64 	%rd14, [%rd13];
	st.global.u64 	[%rd11], %rd14;
	ld.global.u64 	%rd15, [%rd73];
	ld.u64 	%rd16, [%rd15+8];
	st.global.u64 	[%rd11+8], %rd16;
	ld.global.u64 	%rd17, [%rd73];
	ld.u64 	%rd18, [%rd17+16];
	st.global.u64 	[%rd11+16], %rd18;
	ld.global.u64 	%rd19, [%rd73];
	ld.u64 	%rd20, [%rd19+24];
	st.global.u64 	[%rd11+24], %rd20;
	ld.global.u64 	%rd21, [%rd73];
	ld.u64 	%rd22, [%rd21+32];
	st.global.u64 	[%rd11+32], %rd22;
	ld.global.u64 	%rd23, [%rd73];
	ld.u64 	%rd24, [%rd23+40];
	st.global.u64 	[%rd11+40], %rd24;
	ld.global.u64 	%rd25, [%rd73];
	ld.u64 	%rd26, [%rd25+48];
	st.global.u64 	[%rd11+48], %rd26;
	ld.global.u64 	%rd27, [%rd73];
	ld.u64 	%rd28, [%rd27+56];
	st.global.u64 	[%rd11+56], %rd28;
	ld.global.u64 	%rd29, [%rd73];
	ld.u64 	%rd30, [%rd29+64];
	st.global.u64 	[%rd11+64], %rd30;
	ld.global.u64 	%rd31, [%rd73];
	ld.u64 	%rd32, [%rd31+72];
	st.global.u64 	[%rd11+72], %rd32;
	ld.global.u64 	%rd33, [%rd73];
	ld.u64 	%rd34, [%rd33+80];
	st.global.u64 	[%rd11+80], %rd34;
	ld.global.u64 	%rd35, [%rd73];
	ld.u64 	%rd36, [%rd35+88];
	st.global.u64 	[%rd11+88], %rd36;
	ld.global.u64 	%rd37, [%rd73];
	ld.u64 	%rd38, [%rd37+96];
	st.global.u64 	[%rd11+96], %rd38;
	ld.global.u64 	%rd39, [%rd73];
	ld.u64 	%rd40, [%rd39+104];
	st.global.u64 	[%rd11+104], %rd40;
	ld.global.u64 	%rd41, [%rd73];
	ld.u64 	%rd42, [%rd41+112];
	st.global.u64 	[%rd11+112], %rd42;
	ld.global.u64 	%rd43, [%rd73];
	ld.u64 	%rd44, [%rd43+120];
	st.global.u64 	[%rd11+120], %rd44;
	ld.global.u64 	%rd45, [%rd73];
	ld.u64 	%rd46, [%rd45+128];
	st.global.u64 	[%rd11+128], %rd46;
	ld.global.u64 	%rd47, [%rd73];
	ld.u64 	%rd48, [%rd47+136];
	st.global.u64 	[%rd11+136], %rd48;
	ld.global.u64 	%rd49, [%rd73];
	ld.u64 	%rd50, [%rd49+144];
	st.global.u64 	[%rd11+144], %rd50;
	ld.global.u64 	%rd51, [%rd73];
	ld.u64 	%rd52, [%rd51+152];
	st.global.u64 	[%rd11+152], %rd52;
	ld.global.u64 	%rd53, [%rd73];
	ld.u64 	%rd54, [%rd53+160];
	st.global.u64 	[%rd11+160], %rd54;
	ld.global.u64 	%rd55, [%rd73];
	ld.u64 	%rd56, [%rd55+168];
	st.global.u64 	[%rd11+168], %rd56;
	ld.global.u64 	%rd57, [%rd73];
	ld.u64 	%rd58, [%rd57+176];
	st.global.u64 	[%rd11+176], %rd58;
	ld.global.u64 	%rd59, [%rd73];
	ld.u64 	%rd60, [%rd59+184];
	st.global.u64 	[%rd11+184], %rd60;
	ld.global.u64 	%rd61, [%rd73];
	ld.u64 	%rd62, [%rd61+192];
	st.global.u64 	[%rd11+192], %rd62;
	ld.global.u64 	%rd63, [%rd73];
	ld.u64 	%rd64, [%rd63+200];
	st.global.u64 	[%rd11+200], %rd64;
	ld.global.u64 	%rd65, [%rd73];
	ld.u64 	%rd66, [%rd65+208];
	st.global.u64 	[%rd11+208], %rd66;
	ld.global.u64 	%rd67, [%rd73];
	ld.u64 	%rd68, [%rd67+216];
	st.global.u64 	[%rd11+216], %rd68;
	ld.global.u64 	%rd69, [%rd73];
	ld.u64 	%rd70, [%rd69+224];
	st.global.u64 	[%rd11+224], %rd70;
	ld.global.u64 	%rd71, [%rd73];
	ld.u64 	%rd72, [%rd71+232];
	st.global.u64 	[%rd11+232], %rd72;
	ret;
}

	// .globl	_Z11dump_vtableI4CellEvPPvS2_
.visible .entry _Z11dump_vtableI4CellEvPPvS2_(
	.param .u64 _Z11dump_vtableI4CellEvPPvS2__param_0,
	.param .u64 _Z11dump_vtableI4CellEvPPvS2__param_1
)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<84>;


	ld.param.u64 	%rd5, [_Z11dump_vtableI4CellEvPPvS2__param_0];
	ld.param.u64 	%rd6, [_Z11dump_vtableI4CellEvPPvS2__param_1];
	mov.u64 	%rd83, 0;
	mov.u64 	%rd8, buf5;
	cvta.global.u64 	%rd9, %rd8;
	setp.eq.s64	%p1, %rd9, 0;
	@%p1 bra 	BB21_4;

	mov.u64 	%rd11, _ZTV4Cell;
	add.s64 	%rd12, %rd11, 16;
	cvta.global.u64 	%rd13, %rd12;
	st.global.u64 	[buf5], %rd13;
	mov.u64 	%rd14, 24;
	// Callseq Start 99
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 99
	setp.eq.s64	%p2, %rd1, 0;
	mov.u64 	%rd10, 0;
	mov.u64 	%rd82, %rd10;
	@%p2 bra 	BB21_3;

	mov.u64 	%rd15, _ZTV5Agent;
	add.s64 	%rd16, %rd15, 16;
	cvta.global.u64 	%rd17, %rd16;
	st.u64 	[%rd1], %rd17;
	mov.u32 	%r1, 2;
	st.u32 	[%rd1+12], %r1;
	mov.u64 	%rd82, %rd1;

BB21_3:
	st.global.u64 	[buf5+16], %rd82;
	st.global.u64 	[buf5+8], %rd10;
	mov.u32 	%r2, 0;
	st.global.u32 	[buf5+24], %r2;
	mov.u64 	%rd83, %rd8;

BB21_4:
	cvta.to.global.u64 	%rd20, %rd5;
	cvta.to.global.u64 	%rd21, %rd6;
	ld.global.u8 	%rs1, [%rd83];
	st.global.u8 	[%rd21], %rs1;
	ld.global.u8 	%rs2, [%rd83+1];
	st.global.u8 	[%rd21+1], %rs2;
	ld.global.u8 	%rs3, [%rd83+2];
	st.global.u8 	[%rd21+2], %rs3;
	ld.global.u8 	%rs4, [%rd83+3];
	st.global.u8 	[%rd21+3], %rs4;
	ld.global.u8 	%rs5, [%rd83+4];
	st.global.u8 	[%rd21+4], %rs5;
	ld.global.u8 	%rs6, [%rd83+5];
	st.global.u8 	[%rd21+5], %rs6;
	ld.global.u8 	%rs7, [%rd83+6];
	st.global.u8 	[%rd21+6], %rs7;
	ld.global.u8 	%rs8, [%rd83+7];
	st.global.u8 	[%rd21+7], %rs8;
	ld.global.u64 	%rd22, [%rd83];
	ld.u64 	%rd23, [%rd22];
	st.global.u64 	[%rd20], %rd23;
	ld.global.u64 	%rd24, [%rd83];
	ld.u64 	%rd25, [%rd24+8];
	st.global.u64 	[%rd20+8], %rd25;
	ld.global.u64 	%rd26, [%rd83];
	ld.u64 	%rd27, [%rd26+16];
	st.global.u64 	[%rd20+16], %rd27;
	ld.global.u64 	%rd28, [%rd83];
	ld.u64 	%rd29, [%rd28+24];
	st.global.u64 	[%rd20+24], %rd29;
	ld.global.u64 	%rd30, [%rd83];
	ld.u64 	%rd31, [%rd30+32];
	st.global.u64 	[%rd20+32], %rd31;
	ld.global.u64 	%rd32, [%rd83];
	ld.u64 	%rd33, [%rd32+40];
	st.global.u64 	[%rd20+40], %rd33;
	ld.global.u64 	%rd34, [%rd83];
	ld.u64 	%rd35, [%rd34+48];
	st.global.u64 	[%rd20+48], %rd35;
	ld.global.u64 	%rd36, [%rd83];
	ld.u64 	%rd37, [%rd36+56];
	st.global.u64 	[%rd20+56], %rd37;
	ld.global.u64 	%rd38, [%rd83];
	ld.u64 	%rd39, [%rd38+64];
	st.global.u64 	[%rd20+64], %rd39;
	ld.global.u64 	%rd40, [%rd83];
	ld.u64 	%rd41, [%rd40+72];
	st.global.u64 	[%rd20+72], %rd41;
	ld.global.u64 	%rd42, [%rd83];
	ld.u64 	%rd43, [%rd42+80];
	st.global.u64 	[%rd20+80], %rd43;
	ld.global.u64 	%rd44, [%rd83];
	ld.u64 	%rd45, [%rd44+88];
	st.global.u64 	[%rd20+88], %rd45;
	ld.global.u64 	%rd46, [%rd83];
	ld.u64 	%rd47, [%rd46+96];
	st.global.u64 	[%rd20+96], %rd47;
	ld.global.u64 	%rd48, [%rd83];
	ld.u64 	%rd49, [%rd48+104];
	st.global.u64 	[%rd20+104], %rd49;
	ld.global.u64 	%rd50, [%rd83];
	ld.u64 	%rd51, [%rd50+112];
	st.global.u64 	[%rd20+112], %rd51;
	ld.global.u64 	%rd52, [%rd83];
	ld.u64 	%rd53, [%rd52+120];
	st.global.u64 	[%rd20+120], %rd53;
	ld.global.u64 	%rd54, [%rd83];
	ld.u64 	%rd55, [%rd54+128];
	st.global.u64 	[%rd20+128], %rd55;
	ld.global.u64 	%rd56, [%rd83];
	ld.u64 	%rd57, [%rd56+136];
	st.global.u64 	[%rd20+136], %rd57;
	ld.global.u64 	%rd58, [%rd83];
	ld.u64 	%rd59, [%rd58+144];
	st.global.u64 	[%rd20+144], %rd59;
	ld.global.u64 	%rd60, [%rd83];
	ld.u64 	%rd61, [%rd60+152];
	st.global.u64 	[%rd20+152], %rd61;
	ld.global.u64 	%rd62, [%rd83];
	ld.u64 	%rd63, [%rd62+160];
	st.global.u64 	[%rd20+160], %rd63;
	ld.global.u64 	%rd64, [%rd83];
	ld.u64 	%rd65, [%rd64+168];
	st.global.u64 	[%rd20+168], %rd65;
	ld.global.u64 	%rd66, [%rd83];
	ld.u64 	%rd67, [%rd66+176];
	st.global.u64 	[%rd20+176], %rd67;
	ld.global.u64 	%rd68, [%rd83];
	ld.u64 	%rd69, [%rd68+184];
	st.global.u64 	[%rd20+184], %rd69;
	ld.global.u64 	%rd70, [%rd83];
	ld.u64 	%rd71, [%rd70+192];
	st.global.u64 	[%rd20+192], %rd71;
	ld.global.u64 	%rd72, [%rd83];
	ld.u64 	%rd73, [%rd72+200];
	st.global.u64 	[%rd20+200], %rd73;
	ld.global.u64 	%rd74, [%rd83];
	ld.u64 	%rd75, [%rd74+208];
	st.global.u64 	[%rd20+208], %rd75;
	ld.global.u64 	%rd76, [%rd83];
	ld.u64 	%rd77, [%rd76+216];
	st.global.u64 	[%rd20+216], %rd77;
	ld.global.u64 	%rd78, [%rd83];
	ld.u64 	%rd79, [%rd78+224];
	st.global.u64 	[%rd20+224], %rd79;
	ld.global.u64 	%rd80, [%rd83];
	ld.u64 	%rd81, [%rd80+232];
	st.global.u64 	[%rd20+232], %rd81;
	ret;
}


