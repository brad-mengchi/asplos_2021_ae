//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26218862
// Cuda compilation tools, release 10.1, V10.1.168
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_70
.address_size 64

.func  (.param .b32 func_retval0) _ZN5Agent7isAliveEv
(
	.param .b64 _ZN5Agent7isAliveEv_param_0
)
;
.func  (.param .b32 func_retval0) _ZN5Agent11isCandidateEv
(
	.param .b64 _ZN5Agent11isCandidateEv_param_0
)
;
.func  (.param .b32 func_retval0) _ZN5Agent6is_newEv
(
	.param .b64 _ZN5Agent6is_newEv_param_0
)
;
.func _ZN5Agent10set_is_newEb
(
	.param .b64 _ZN5Agent10set_is_newEb_param_0,
	.param .b32 _ZN5Agent10set_is_newEb_param_1
)
;
.func _ZN5Agent10set_actionEi
(
	.param .b64 _ZN5Agent10set_actionEi_param_0,
	.param .b32 _ZN5Agent10set_actionEi_param_1
)
;
.func  (.param .b32 func_retval0) _ZN5Agent10get_actionEv
(
	.param .b64 _ZN5Agent10get_actionEv_param_0
)
;
.func  (.param .b32 func_retval0) _ZN5Agent7cell_idEv
(
	.param .b64 _ZN5Agent7cell_idEv_param_0
)
;
.func _ZN5Agent15update_checksumEv
(
	.param .b64 _ZN5Agent15update_checksumEv_param_0
)
;
.func  (.param .b64 func_retval0) _ZN4Cell5agentEv
(
	.param .b64 _ZN4Cell5agentEv_param_0
)
;
.func _ZN4Cell9set_agentEi9AgentType
(
	.param .b64 _ZN4Cell9set_agentEi9AgentType_param_0,
	.param .b32 _ZN4Cell9set_agentEi9AgentType_param_1,
	.param .b32 _ZN4Cell9set_agentEi9AgentType_param_2
)
;
.func _ZN4Cell12delete_agentEv
(
	.param .b64 _ZN4Cell12delete_agentEv_param_0
)
;
.func  (.param .b32 func_retval0) _ZN4Cell8is_emptyEv
(
	.param .b64 _ZN4Cell8is_emptyEv_param_0
)
;
.extern .func  (.param .b64 func_retval0) malloc
(
	.param .b64 malloc_param_0
)
;
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.global .attribute(.managed) .align 16 .b8 buf5[128];
.global .attribute(.managed) .align 8 .u64 range_tree;
.global .attribute(.managed) .align 4 .u32 tree_size;
.global .attribute(.managed) .align 8 .u64 temp_coal;
.global .align 8 .u64 _ZTV5Agent[10] = {0, 0, _ZN5Agent7isAliveEv, _ZN5Agent11isCandidateEv, _ZN5Agent6is_newEv, _ZN5Agent10set_is_newEb, _ZN5Agent10set_actionEi, _ZN5Agent10get_actionEv, _ZN5Agent7cell_idEv, _ZN5Agent15update_checksumEv};
.global .align 8 .u64 _ZTV4Cell[6] = {0, 0, _ZN4Cell5agentEv, _ZN4Cell9set_agentEi9AgentType, _ZN4Cell12delete_agentEv, _ZN4Cell8is_emptyEv};
.global .align 4 .u32 SIZE_X;
.global .align 4 .u32 SIZE_Y;
.global .attribute(.managed) .align 8 .u64 cells;
.global .align 1 .b8 __unnamed_1[48] = {118, 111, 105, 100, 32, 109, 97, 121, 98, 101, 95, 99, 114, 101, 97, 116, 101, 95, 99, 97, 110, 100, 105, 100, 97, 116, 101, 40, 65, 103, 101, 110, 116, 86, 32, 42, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 41, 0};
.global .align 1 .b8 __unnamed_2[33] = {118, 111, 105, 100, 32, 99, 114, 101, 97, 116, 101, 95, 99, 97, 110, 100, 105, 100, 97, 116, 101, 115, 40, 65, 103, 101, 110, 116, 86, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_3[20] = {118, 111, 105, 100, 32, 99, 114, 101, 97, 116, 101, 95, 99, 101, 108, 108, 115, 40, 41, 0};
.global .align 1 .b8 __unnamed_4[27] = {118, 111, 105, 100, 32, 108, 111, 97, 100, 95, 103, 97, 109, 101, 40, 105, 110, 116, 32, 42, 44, 32, 105, 110, 116, 41, 0};
.global .align 4 .u32 device_checksum;
.global .align 4 .u32 device_num_candidates;
.global .align 1 .b8 $str3[6] = {102, 97, 108, 115, 101, 0};
.global .align 1 .b8 $str4[7] = {103, 111, 108, 46, 99, 117, 0};
.global .align 1 .b8 $str5[14] = {112, 116, 114, 45, 62, 105, 115, 95, 110, 101, 119, 40, 41, 0};
.global .align 1 .b8 $str6[15] = {112, 116, 114, 45, 62, 105, 115, 65, 108, 105, 118, 101, 40, 41, 0};
.global .align 1 .b8 $str7[20] = {99, 101, 108, 108, 115, 91, 105, 93, 32, 33, 61, 32, 110, 117, 108, 108, 112, 116, 114, 0};
.global .align 1 .b8 $str8[54] = {99, 101, 108, 108, 115, 91, 99, 101, 108, 108, 95, 105, 100, 115, 91, 105, 93, 93, 45, 62, 97, 103, 101, 110, 116, 40, 41, 45, 62, 99, 101, 108, 108, 95, 105, 100, 40, 41, 32, 61, 61, 32, 99, 101, 108, 108, 95, 105, 100, 115, 91, 105, 93, 0};

.func  (.param .b32 func_retval0) _ZN5Agent7isAliveEv(
	.param .b64 _ZN5Agent7isAliveEv_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN5Agent7isAliveEv_param_0];
	ld.u32 	%r1, [%rd1+12];
	setp.eq.s32	%p1, %r1, 0;
	selp.u32	%r2, 1, 0, %p1;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

.func  (.param .b32 func_retval0) _ZN5Agent11isCandidateEv(
	.param .b64 _ZN5Agent11isCandidateEv_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN5Agent11isCandidateEv_param_0];
	ld.u32 	%r1, [%rd1+12];
	setp.eq.s32	%p1, %r1, 1;
	selp.u32	%r2, 1, 0, %p1;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

.func  (.param .b32 func_retval0) _ZN5Agent6is_newEv(
	.param .b64 _ZN5Agent6is_newEv_param_0
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN5Agent6is_newEv_param_0];
	ld.s8 	%r1, [%rd1+16];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.func _ZN5Agent10set_is_newEb(
	.param .b64 _ZN5Agent10set_is_newEb_param_0,
	.param .b32 _ZN5Agent10set_is_newEb_param_1
)
{
	.reg .b16 	%rs<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN5Agent10set_is_newEb_param_0];
	ld.param.s8 	%rs1, [_ZN5Agent10set_is_newEb_param_1];
	st.u8 	[%rd1+16], %rs1;
	ret;
}

.func _ZN5Agent10set_actionEi(
	.param .b64 _ZN5Agent10set_actionEi_param_0,
	.param .b32 _ZN5Agent10set_actionEi_param_1
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN5Agent10set_actionEi_param_0];
	ld.param.u32 	%r1, [_ZN5Agent10set_actionEi_param_1];
	st.u32 	[%rd1+20], %r1;
	ret;
}

.func  (.param .b32 func_retval0) _ZN5Agent10get_actionEv(
	.param .b64 _ZN5Agent10get_actionEv_param_0
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN5Agent10get_actionEv_param_0];
	ld.u32 	%r1, [%rd1+20];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.func  (.param .b32 func_retval0) _ZN5Agent7cell_idEv(
	.param .b64 _ZN5Agent7cell_idEv_param_0
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN5Agent7cell_idEv_param_0];
	ld.u32 	%r1, [%rd1+8];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.func _ZN5Agent15update_checksumEv(
	.param .b64 _ZN5Agent15update_checksumEv_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [_ZN5Agent15update_checksumEv_param_0];
	ld.u64 	%rd3, [%rd2];
	ld.u64 	%rd4, [%rd3];
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_0 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
	%rd4, 
	(
	param0
	)
	, prototype_0;
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 0
	cvt.u16.u32	%rs1, %r1;
	and.b16  	%rs2, %rs1, 255;
	setp.eq.s16	%p1, %rs2, 0;
	@%p1 bra 	BB7_2;

	mov.u64 	%rd5, device_checksum;
	atom.global.add.u32 	%r2, [%rd5], 1;
	bra.uni 	BB7_4;

BB7_2:
	ld.u64 	%rd6, [%rd2];
	ld.u64 	%rd7, [%rd6+8];
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_1 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
	%rd7, 
	(
	param0
	)
	, prototype_1;
	ld.param.b32	%r3, [retval0+0];
	
	//{
	}// Callseq End 1
	cvt.u16.u32	%rs3, %r3;
	and.b16  	%rs4, %rs3, 255;
	setp.eq.s16	%p2, %rs4, 0;
	@%p2 bra 	BB7_4;

	mov.u64 	%rd8, device_num_candidates;
	atom.global.add.u32 	%r4, [%rd8], 1;

BB7_4:
	ret;
}

.func  (.param .b64 func_retval0) _ZN4Cell5agentEv(
	.param .b64 _ZN4Cell5agentEv_param_0
)
{
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN4Cell5agentEv_param_0];
	ld.u64 	%rd2, [%rd1+8];
	st.param.b64	[func_retval0+0], %rd2;
	ret;
}

.func _ZN4Cell9set_agentEi9AgentType(
	.param .b64 _ZN4Cell9set_agentEi9AgentType_param_0,
	.param .b32 _ZN4Cell9set_agentEi9AgentType_param_1,
	.param .b32 _ZN4Cell9set_agentEi9AgentType_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd6, [_ZN4Cell9set_agentEi9AgentType_param_0];
	ld.param.u32 	%r1, [_ZN4Cell9set_agentEi9AgentType_param_1];
	ld.param.u32 	%r2, [_ZN4Cell9set_agentEi9AgentType_param_2];
	add.s64 	%rd1, %rd6, 16;
	ld.u64 	%rd2, [%rd6+16];
	setp.eq.s64	%p1, %rd2, 0;
	mov.u64 	%rd10, 0;
	@%p1 bra 	BB9_2;

	mov.u64 	%rd7, _ZTV5Agent;
	add.s64 	%rd8, %rd7, 16;
	cvta.global.u64 	%rd9, %rd8;
	st.u64 	[%rd2], %rd9;
	mov.u16 	%rs1, 1;
	st.u8 	[%rd2+16], %rs1;
	mov.u32 	%r3, 0;
	st.u32 	[%rd2+20], %r3;
	st.v2.u32 	[%rd2+8], {%r1, %r2};
	mov.u64 	%rd10, %rd2;

BB9_2:
	st.u64 	[%rd1+-8], %rd10;
	ret;
}

.func _ZN4Cell12delete_agentEv(
	.param .b64 _ZN4Cell12delete_agentEv_param_0
)
{
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN4Cell12delete_agentEv_param_0];
	mov.u64 	%rd2, 0;
	st.u64 	[%rd1+8], %rd2;
	ret;
}

.func  (.param .b32 func_retval0) _ZN4Cell8is_emptyEv(
	.param .b64 _ZN4Cell8is_emptyEv_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN4Cell8is_emptyEv_param_0];
	ld.u64 	%rd2, [%rd1+8];
	setp.eq.s64	%p1, %rd2, 0;
	selp.u32	%r1, 1, 0, %p1;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z9vptrPatchPvS_ji
.visible .entry _Z9vptrPatchPvS_ji(
	.param .u64 _Z9vptrPatchPvS_ji_param_0,
	.param .u64 _Z9vptrPatchPvS_ji_param_1,
	.param .u32 _Z9vptrPatchPvS_ji_param_2,
	.param .u32 _Z9vptrPatchPvS_ji_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [_Z9vptrPatchPvS_ji_param_0];
	ld.param.u64 	%rd2, [_Z9vptrPatchPvS_ji_param_1];
	ld.param.u32 	%r2, [_Z9vptrPatchPvS_ji_param_2];
	ld.param.u32 	%r3, [_Z9vptrPatchPvS_ji_param_3];
	mov.u32 	%r4, %tid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r4;
	setp.ge.s32	%p1, %r1, %r3;
	@%p1 bra 	BB12_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.lo.s32 	%r7, %r1, %r2;
	cvt.u64.u32	%rd4, %r7;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.u8 	%rs1, [%rd6];
	st.global.u8 	[%rd5], %rs1;
	ld.global.u8 	%rs2, [%rd6+1];
	st.global.u8 	[%rd5+1], %rs2;
	ld.global.u8 	%rs3, [%rd6+2];
	st.global.u8 	[%rd5+2], %rs3;
	ld.global.u8 	%rs4, [%rd6+3];
	st.global.u8 	[%rd5+3], %rs4;
	ld.global.u8 	%rs5, [%rd6+4];
	st.global.u8 	[%rd5+4], %rs5;
	ld.global.u8 	%rs6, [%rd6+5];
	st.global.u8 	[%rd5+5], %rs6;
	ld.global.u8 	%rs7, [%rd6+6];
	st.global.u8 	[%rd5+6], %rs7;
	ld.global.u8 	%rs8, [%rd6+7];
	st.global.u8 	[%rd5+7], %rs8;

BB12_2:
	ret;
}

	// .globl	_Z13alive_preparev
.visible .entry _Z13alive_preparev(

)
{
	.reg .pred 	%p<89>;
	.reg .b16 	%rs<54>;
	.reg .b32 	%r<228>;
	.reg .b64 	%rd<159>;


	mov.u32 	%r102, %tid.x;
	mov.u32 	%r103, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mad.lo.s32 	%r188, %r103, %r1, %r102;
	ld.global.u32 	%r104, [SIZE_Y];
	ld.global.u32 	%r105, [SIZE_X];
	mul.lo.s32 	%r106, %r104, %r105;
	setp.ge.s32	%p1, %r188, %r106;
	@%p1 bra 	BB13_62;

	mov.u32 	%r107, %nctaid.x;
	mul.lo.s32 	%r3, %r107, %r1;

BB13_2:
	ld.global.u64 	%rd45, [cells];
	mul.wide.s32 	%rd46, %r188, 8;
	add.s64 	%rd47, %rd45, %rd46;
	ld.u64 	%rd48, [%rd47];
	ld.u64 	%rd49, [%rd48];
	ld.u64 	%rd50, [%rd49];
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd48;
	.param .b64 retval0;
	prototype_2 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
	%rd50, 
	(
	param0
	)
	, prototype_2;
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 2
	setp.eq.s64	%p2, %rd1, 0;
	@%p2 bra 	BB13_61;

	ld.global.u64 	%rd2, [range_tree];
	ld.global.u32 	%r5, [tree_size];
	mov.u32 	%r190, 0;
	mov.u32 	%r189, 1;
	setp.lt.u32	%p3, %r5, 2;
	mov.u32 	%r191, %r190;
	@%p3 bra 	BB13_7;

BB13_4:
	cvt.u64.u32	%rd3, %r189;
	mul.wide.u32 	%rd51, %r189, 40;
	add.s64 	%rd4, %rd2, %rd51;
	ld.u64 	%rd52, [%rd4];
	setp.gt.u64	%p4, %rd52, %rd1;
	mov.u16 	%rs43, 0;
	@%p4 bra 	BB13_6;

	ld.u64 	%rd53, [%rd4+8];
	setp.ge.u64	%p5, %rd53, %rd1;
	selp.u16	%rs43, 1, 0, %p5;

BB13_6:
	add.s32 	%r111, %r190, 2;
	setp.eq.s16	%p6, %rs43, 0;
	cvt.u32.u64	%r112, %rd3;
	selp.b32	%r191, %r111, %r112, %p6;
	shl.b32 	%r190, %r191, 1;
	add.s32 	%r189, %r190, 1;
	setp.lt.u32	%p7, %r189, %r5;
	@%p7 bra 	BB13_4;

BB13_7:
	mul.wide.u32 	%rd54, %r191, 40;
	add.s64 	%rd55, %rd2, %rd54;
	ld.u64 	%rd56, [%rd55+24];
	ld.u64 	%rd57, [%rd56+16];


	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_3 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd57,
	(
	param0
	)
	, prototype_3;
	ld.param.b32	%r113, [retval0+0];
	
	//{
	}// Callseq End 3
	cvt.u16.u32	%rs24, %r113;
	and.b16  	%rs25, %rs24, 255;
	setp.eq.s16	%p8, %rs25, 0;
	@%p8 bra 	BB13_61;

	ld.global.u64 	%rd6, [range_tree];
	ld.global.u32 	%r12, [tree_size];
	mov.u32 	%r40, 0;
	mov.u32 	%r192, 1;
	setp.lt.u32	%p9, %r12, 2;
	mov.u32 	%r193, %r40;
	mov.u32 	%r194, %r40;
	@%p9 bra 	BB13_12;

BB13_9:
	cvt.u64.u32	%rd7, %r192;
	mul.wide.u32 	%rd60, %r192, 40;
	add.s64 	%rd8, %rd6, %rd60;
	ld.u64 	%rd61, [%rd8];
	setp.gt.u64	%p10, %rd61, %rd1;
	mov.u16 	%rs44, 0;
	@%p10 bra 	BB13_11;

	ld.u64 	%rd62, [%rd8+8];
	setp.ge.u64	%p11, %rd62, %rd1;
	selp.u16	%rs44, 1, 0, %p11;

BB13_11:
	add.s32 	%r117, %r193, 2;
	setp.eq.s16	%p12, %rs44, 0;
	cvt.u32.u64	%r118, %rd7;
	selp.b32	%r194, %r117, %r118, %p12;
	shl.b32 	%r193, %r194, 1;
	add.s32 	%r192, %r193, 1;
	setp.lt.u32	%p13, %r192, %r12;
	@%p13 bra 	BB13_9;

BB13_12:
	mul.wide.u32 	%rd63, %r194, 40;
	add.s64 	%rd64, %rd6, %rd63;
	ld.u64 	%rd65, [%rd64+24];
	ld.u64 	%rd66, [%rd65+40];


	mov.u16 	%rs27, 0;
	cvt.s32.s16	%r122, %rs27;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 param1;
	st.param.b32	[param1+0], %r122;
	prototype_4 : .callprototype ()_ (.param .b64 _, .param .b32 _) ;
	call 
%rd66,
	(
	param0, 
	param1
	)
	, prototype_4;
	
	//{
	}// Callseq End 4
	ld.global.u64 	%rd9, [range_tree];
	ld.global.u32 	%r19, [tree_size];
	mov.u32 	%r195, 1;
	setp.lt.u32	%p14, %r19, 2;
	mov.u32 	%r196, %r40;
	mov.u32 	%r197, %r40;
	@%p14 bra 	BB13_16;

BB13_13:
	cvt.u64.u32	%rd10, %r195;
	mul.wide.u32 	%rd69, %r195, 40;
	add.s64 	%rd11, %rd9, %rd69;
	ld.u64 	%rd70, [%rd11];
	setp.gt.u64	%p15, %rd70, %rd1;
	mov.u16 	%rs45, 0;
	@%p15 bra 	BB13_15;

	ld.u64 	%rd71, [%rd11+8];
	setp.ge.u64	%p16, %rd71, %rd1;
	selp.u16	%rs45, 1, 0, %p16;

BB13_15:
	add.s32 	%r123, %r196, 2;
	setp.eq.s16	%p17, %rs45, 0;
	cvt.u32.u64	%r124, %rd10;
	selp.b32	%r197, %r123, %r124, %p17;
	shl.b32 	%r196, %r197, 1;
	add.s32 	%r195, %r196, 1;
	setp.lt.u32	%p18, %r195, %r19;
	@%p18 bra 	BB13_13;

BB13_16:
	mul.wide.u32 	%rd72, %r197, 40;
	add.s64 	%rd73, %rd9, %rd72;
	ld.u64 	%rd74, [%rd73+24];
	ld.u64 	%rd75, [%rd74+64];


	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_5 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd75,
	(
	param0
	)
	, prototype_5;
	ld.param.b32	%r128, [retval0+0];
	
	//{
	}// Callseq End 5
	ld.global.u32 	%r129, [SIZE_X];
	rem.s32 	%r26, %r128, %r129;
	ld.global.u64 	%rd12, [range_tree];
	ld.global.u32 	%r27, [tree_size];
	mov.u32 	%r198, 1;
	setp.lt.u32	%p19, %r27, 2;
	mov.u32 	%r199, %r40;
	mov.u32 	%r200, %r40;
	@%p19 bra 	BB13_20;

BB13_17:
	cvt.u64.u32	%rd13, %r198;
	mul.wide.u32 	%rd78, %r198, 40;
	add.s64 	%rd14, %rd12, %rd78;
	ld.u64 	%rd79, [%rd14];
	setp.gt.u64	%p20, %rd79, %rd1;
	mov.u16 	%rs46, 0;
	@%p20 bra 	BB13_19;

	ld.u64 	%rd80, [%rd14+8];
	setp.ge.u64	%p21, %rd80, %rd1;
	selp.u16	%rs46, 1, 0, %p21;

BB13_19:
	add.s32 	%r130, %r199, 2;
	setp.eq.s16	%p22, %rs46, 0;
	cvt.u32.u64	%r131, %rd13;
	selp.b32	%r200, %r130, %r131, %p22;
	shl.b32 	%r199, %r200, 1;
	add.s32 	%r198, %r199, 1;
	setp.lt.u32	%p23, %r198, %r27;
	@%p23 bra 	BB13_17;

BB13_20:
	mul.wide.u32 	%rd81, %r200, 40;
	add.s64 	%rd82, %rd12, %rd81;
	ld.u64 	%rd83, [%rd82+24];
	ld.u64 	%rd84, [%rd83+64];


	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_6 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd84,
	(
	param0
	)
	, prototype_6;
	ld.param.b32	%r134, [retval0+0];
	
	//{
	}// Callseq End 6
	ld.global.u32 	%r201, [SIZE_X];
	div.s32 	%r35, %r134, %r201;
	add.s32 	%r36, %r35, -1;
	mov.u32 	%r202, -1;
	add.s32 	%r37, %r35, 1;
	bra.uni 	BB13_21;

BB13_63:
	ld.global.u32 	%r201, [SIZE_X];

BB13_21:
	add.s32 	%r41, %r202, %r26;
	setp.lt.s32	%p24, %r41, 0;
	setp.ge.s32	%p25, %r41, %r201;
	or.pred  	%p26, %p24, %p25;
	setp.lt.s32	%p27, %r35, 1;
	or.pred  	%p28, %p26, %p27;
	ld.global.u32 	%r135, [SIZE_Y];
	setp.gt.s32	%p29, %r35, %r135;
	or.pred  	%p30, %p28, %p29;
	@%p30 bra 	BB13_32;

	ld.global.u64 	%rd87, [cells];
	mad.lo.s32 	%r139, %r201, %r36, %r41;
	mul.wide.s32 	%rd88, %r139, 8;
	add.s64 	%rd15, %rd87, %rd88;
	ld.u64 	%rd16, [%rd15];
	ld.global.u64 	%rd17, [range_tree];
	ld.global.u32 	%r42, [tree_size];
	mov.u32 	%r205, 0;
	mov.u32 	%r204, 1;
	setp.lt.u32	%p31, %r42, 2;
	mov.u32 	%r206, %r205;
	@%p31 bra 	BB13_26;

BB13_23:
	cvt.u64.u32	%rd18, %r204;
	mul.wide.u32 	%rd89, %r204, 40;
	add.s64 	%rd19, %rd17, %rd89;
	ld.u64 	%rd90, [%rd19];
	setp.gt.u64	%p32, %rd90, %rd16;
	mov.u16 	%rs47, 0;
	@%p32 bra 	BB13_25;

	ld.u64 	%rd91, [%rd19+8];
	setp.ge.u64	%p33, %rd91, %rd16;
	selp.u16	%rs47, 1, 0, %p33;

BB13_25:
	add.s32 	%r140, %r205, 2;
	setp.eq.s16	%p34, %rs47, 0;
	cvt.u32.u64	%r141, %rd18;
	selp.b32	%r206, %r140, %r141, %p34;
	shl.b32 	%r205, %r206, 1;
	add.s32 	%r204, %r205, 1;
	setp.lt.u32	%p35, %r204, %r42;
	@%p35 bra 	BB13_23;

BB13_26:
	mul.wide.u32 	%rd92, %r206, 40;
	add.s64 	%rd93, %rd17, %rd92;
	ld.u64 	%rd94, [%rd93+24];
	ld.u64 	%rd95, [%rd94+16];
	ld.u64 	%rd96, [%rd15];


	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd96;
	.param .b64 retval0;
	prototype_7 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
%rd95,
	(
	param0
	)
	, prototype_7;
	ld.param.b64	%rd20, [retval0+0];
	
	//{
	}// Callseq End 7
	setp.eq.s64	%p36, %rd20, 0;
	@%p36 bra 	BB13_32;

	ld.global.u64 	%rd21, [range_tree];
	ld.global.u32 	%r49, [tree_size];
	mov.u32 	%r208, 0;
	mov.u32 	%r207, 1;
	setp.lt.u32	%p37, %r49, 2;
	mov.u32 	%r209, %r208;
	@%p37 bra 	BB13_31;

BB13_28:
	cvt.u64.u32	%rd22, %r207;
	mul.wide.u32 	%rd99, %r207, 40;
	add.s64 	%rd23, %rd21, %rd99;
	ld.u64 	%rd100, [%rd23];
	setp.gt.u64	%p38, %rd100, %rd20;
	mov.u16 	%rs48, 0;
	@%p38 bra 	BB13_30;

	ld.u64 	%rd101, [%rd23+8];
	setp.ge.u64	%p39, %rd101, %rd20;
	selp.u16	%rs48, 1, 0, %p39;

BB13_30:
	add.s32 	%r145, %r208, 2;
	setp.eq.s16	%p40, %rs48, 0;
	cvt.u32.u64	%r146, %rd22;
	selp.b32	%r209, %r145, %r146, %p40;
	shl.b32 	%r208, %r209, 1;
	add.s32 	%r207, %r208, 1;
	setp.lt.u32	%p41, %r207, %r49;
	@%p41 bra 	BB13_28;

BB13_31:
	mul.wide.u32 	%rd102, %r209, 40;
	add.s64 	%rd103, %rd21, %rd102;
	ld.u64 	%rd104, [%rd103+24];
	ld.u64 	%rd105, [%rd104+16];


	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd20;
	.param .b32 retval0;
	prototype_8 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd105,
	(
	param0
	)
	, prototype_8;
	ld.param.b32	%r147, [retval0+0];
	
	//{
	}// Callseq End 8
	cvt.u16.u32	%rs32, %r147;
	and.b16  	%rs33, %rs32, 255;
	setp.ne.s16	%p42, %rs33, 0;
	selp.u32	%r148, 1, 0, %p42;
	add.s32 	%r40, %r148, %r40;

BB13_32:
	ld.global.u32 	%r58, [SIZE_X];
	setp.ge.s32	%p43, %r41, %r58;
	or.pred  	%p45, %p24, %p43;
	setp.lt.s32	%p46, %r35, 0;
	or.pred  	%p47, %p45, %p46;
	ld.global.u32 	%r149, [SIZE_Y];
	setp.ge.s32	%p48, %r35, %r149;
	or.pred  	%p49, %p47, %p48;
	@%p49 bra 	BB13_43;

	ld.global.u64 	%rd108, [cells];
	mad.lo.s32 	%r153, %r58, %r35, %r41;
	mul.wide.s32 	%rd109, %r153, 8;
	add.s64 	%rd24, %rd108, %rd109;
	ld.u64 	%rd25, [%rd24];
	ld.global.u64 	%rd26, [range_tree];
	ld.global.u32 	%r59, [tree_size];
	mov.u32 	%r212, 0;
	mov.u32 	%r211, 1;
	setp.lt.u32	%p50, %r59, 2;
	mov.u32 	%r213, %r212;
	@%p50 bra 	BB13_37;

BB13_34:
	cvt.u64.u32	%rd27, %r211;
	mul.wide.u32 	%rd110, %r211, 40;
	add.s64 	%rd28, %rd26, %rd110;
	ld.u64 	%rd111, [%rd28];
	setp.gt.u64	%p51, %rd111, %rd25;
	mov.u16 	%rs49, 0;
	@%p51 bra 	BB13_36;

	ld.u64 	%rd112, [%rd28+8];
	setp.ge.u64	%p52, %rd112, %rd25;
	selp.u16	%rs49, 1, 0, %p52;

BB13_36:
	add.s32 	%r154, %r212, 2;
	setp.eq.s16	%p53, %rs49, 0;
	cvt.u32.u64	%r155, %rd27;
	selp.b32	%r213, %r154, %r155, %p53;
	shl.b32 	%r212, %r213, 1;
	add.s32 	%r211, %r212, 1;
	setp.lt.u32	%p54, %r211, %r59;
	@%p54 bra 	BB13_34;

BB13_37:
	mul.wide.u32 	%rd113, %r213, 40;
	add.s64 	%rd114, %rd26, %rd113;
	ld.u64 	%rd115, [%rd114+24];
	ld.u64 	%rd116, [%rd115+16];
	ld.u64 	%rd117, [%rd24];


	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd117;
	.param .b64 retval0;
	prototype_9 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
%rd116,
	(
	param0
	)
	, prototype_9;
	ld.param.b64	%rd29, [retval0+0];
	
	//{
	}// Callseq End 9
	setp.eq.s64	%p55, %rd29, 0;
	@%p55 bra 	BB13_43;

	ld.global.u64 	%rd30, [range_tree];
	ld.global.u32 	%r66, [tree_size];
	mov.u32 	%r215, 0;
	mov.u32 	%r214, 1;
	setp.lt.u32	%p56, %r66, 2;
	mov.u32 	%r216, %r215;
	@%p56 bra 	BB13_42;

BB13_39:
	cvt.u64.u32	%rd31, %r214;
	mul.wide.u32 	%rd120, %r214, 40;
	add.s64 	%rd32, %rd30, %rd120;
	ld.u64 	%rd121, [%rd32];
	setp.gt.u64	%p57, %rd121, %rd29;
	mov.u16 	%rs50, 0;
	@%p57 bra 	BB13_41;

	ld.u64 	%rd122, [%rd32+8];
	setp.ge.u64	%p58, %rd122, %rd29;
	selp.u16	%rs50, 1, 0, %p58;

BB13_41:
	add.s32 	%r159, %r215, 2;
	setp.eq.s16	%p59, %rs50, 0;
	cvt.u32.u64	%r160, %rd31;
	selp.b32	%r216, %r159, %r160, %p59;
	shl.b32 	%r215, %r216, 1;
	add.s32 	%r214, %r215, 1;
	setp.lt.u32	%p60, %r214, %r66;
	@%p60 bra 	BB13_39;

BB13_42:
	mul.wide.u32 	%rd123, %r216, 40;
	add.s64 	%rd124, %rd30, %rd123;
	ld.u64 	%rd125, [%rd124+24];
	ld.u64 	%rd126, [%rd125+16];


	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd29;
	.param .b32 retval0;
	prototype_10 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd126,
	(
	param0
	)
	, prototype_10;
	ld.param.b32	%r161, [retval0+0];
	
	//{
	}// Callseq End 10
	cvt.u16.u32	%rs36, %r161;
	and.b16  	%rs37, %rs36, 255;
	setp.ne.s16	%p61, %rs37, 0;
	selp.u32	%r162, 1, 0, %p61;
	add.s32 	%r40, %r162, %r40;

BB13_43:
	ld.global.u32 	%r75, [SIZE_X];
	setp.ge.s32	%p62, %r41, %r75;
	or.pred  	%p64, %p24, %p62;
	setp.lt.s32	%p65, %r35, -1;
	or.pred  	%p66, %p64, %p65;
	ld.global.u32 	%r163, [SIZE_Y];
	setp.ge.s32	%p67, %r37, %r163;
	or.pred  	%p68, %p66, %p67;
	@%p68 bra 	BB13_54;

	ld.global.u64 	%rd129, [cells];
	mad.lo.s32 	%r167, %r75, %r37, %r41;
	mul.wide.s32 	%rd130, %r167, 8;
	add.s64 	%rd33, %rd129, %rd130;
	ld.u64 	%rd34, [%rd33];
	ld.global.u64 	%rd35, [range_tree];
	ld.global.u32 	%r76, [tree_size];
	mov.u32 	%r219, 0;
	mov.u32 	%r218, 1;
	setp.lt.u32	%p69, %r76, 2;
	mov.u32 	%r220, %r219;
	@%p69 bra 	BB13_48;

BB13_45:
	cvt.u64.u32	%rd36, %r218;
	mul.wide.u32 	%rd131, %r218, 40;
	add.s64 	%rd37, %rd35, %rd131;
	ld.u64 	%rd132, [%rd37];
	setp.gt.u64	%p70, %rd132, %rd34;
	mov.u16 	%rs51, 0;
	@%p70 bra 	BB13_47;

	ld.u64 	%rd133, [%rd37+8];
	setp.ge.u64	%p71, %rd133, %rd34;
	selp.u16	%rs51, 1, 0, %p71;

BB13_47:
	add.s32 	%r168, %r219, 2;
	setp.eq.s16	%p72, %rs51, 0;
	cvt.u32.u64	%r169, %rd36;
	selp.b32	%r220, %r168, %r169, %p72;
	shl.b32 	%r219, %r220, 1;
	add.s32 	%r218, %r219, 1;
	setp.lt.u32	%p73, %r218, %r76;
	@%p73 bra 	BB13_45;

BB13_48:
	mul.wide.u32 	%rd134, %r220, 40;
	add.s64 	%rd135, %rd35, %rd134;
	ld.u64 	%rd136, [%rd135+24];
	ld.u64 	%rd137, [%rd136+16];
	ld.u64 	%rd138, [%rd33];


	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd138;
	.param .b64 retval0;
	prototype_11 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
%rd137,
	(
	param0
	)
	, prototype_11;
	ld.param.b64	%rd38, [retval0+0];
	
	//{
	}// Callseq End 11
	setp.eq.s64	%p74, %rd38, 0;
	@%p74 bra 	BB13_54;

	ld.global.u64 	%rd39, [range_tree];
	ld.global.u32 	%r83, [tree_size];
	mov.u32 	%r222, 0;
	mov.u32 	%r221, 1;
	setp.lt.u32	%p75, %r83, 2;
	mov.u32 	%r223, %r222;
	@%p75 bra 	BB13_53;

BB13_50:
	cvt.u64.u32	%rd40, %r221;
	mul.wide.u32 	%rd141, %r221, 40;
	add.s64 	%rd41, %rd39, %rd141;
	ld.u64 	%rd142, [%rd41];
	setp.gt.u64	%p76, %rd142, %rd38;
	mov.u16 	%rs52, 0;
	@%p76 bra 	BB13_52;

	ld.u64 	%rd143, [%rd41+8];
	setp.ge.u64	%p77, %rd143, %rd38;
	selp.u16	%rs52, 1, 0, %p77;

BB13_52:
	add.s32 	%r173, %r222, 2;
	setp.eq.s16	%p78, %rs52, 0;
	cvt.u32.u64	%r174, %rd40;
	selp.b32	%r223, %r173, %r174, %p78;
	shl.b32 	%r222, %r223, 1;
	add.s32 	%r221, %r222, 1;
	setp.lt.u32	%p79, %r221, %r83;
	@%p79 bra 	BB13_50;

BB13_53:
	mul.wide.u32 	%rd144, %r223, 40;
	add.s64 	%rd145, %rd39, %rd144;
	ld.u64 	%rd146, [%rd145+24];
	ld.u64 	%rd147, [%rd146+16];


	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd38;
	.param .b32 retval0;
	prototype_12 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd147,
	(
	param0
	)
	, prototype_12;
	ld.param.b32	%r175, [retval0+0];
	
	//{
	}// Callseq End 12
	cvt.u16.u32	%rs40, %r175;
	and.b16  	%rs41, %rs40, 255;
	setp.ne.s16	%p80, %rs41, 0;
	selp.u32	%r176, 1, 0, %p80;
	add.s32 	%r40, %r176, %r40;

BB13_54:
	add.s32 	%r202, %r202, 1;
	setp.lt.s32	%p81, %r202, 2;
	@%p81 bra 	BB13_63;

	add.s32 	%r177, %r40, -1;
	and.b32  	%r178, %r177, -2;
	setp.eq.s32	%p82, %r178, 2;
	@%p82 bra 	BB13_61;

	ld.global.u64 	%rd42, [range_tree];
	ld.global.u32 	%r93, [tree_size];
	mov.u32 	%r226, 0;
	mov.u32 	%r225, 1;
	setp.lt.u32	%p83, %r93, 2;
	mov.u32 	%r227, %r226;
	@%p83 bra 	BB13_60;

BB13_57:
	cvt.u64.u32	%rd43, %r225;
	mul.wide.u32 	%rd150, %r225, 40;
	add.s64 	%rd44, %rd42, %rd150;
	ld.u64 	%rd151, [%rd44];
	setp.gt.u64	%p84, %rd151, %rd1;
	mov.u16 	%rs53, %rs27;
	@%p84 bra 	BB13_59;

	ld.u64 	%rd152, [%rd44+8];
	setp.ge.u64	%p85, %rd152, %rd1;
	selp.u16	%rs53, 1, 0, %p85;

BB13_59:
	add.s32 	%r182, %r226, 2;
	setp.eq.s16	%p86, %rs53, 0;
	cvt.u32.u64	%r183, %rd43;
	selp.b32	%r227, %r182, %r183, %p86;
	shl.b32 	%r226, %r227, 1;
	add.s32 	%r225, %r226, 1;
	setp.lt.u32	%p87, %r225, %r93;
	@%p87 bra 	BB13_57;

BB13_60:
	mul.wide.u32 	%rd153, %r227, 40;
	add.s64 	%rd154, %rd42, %rd153;
	ld.u64 	%rd155, [%rd154+24];
	ld.u64 	%rd156, [%rd155+48];


	mov.u32 	%r184, 1;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 param1;
	st.param.b32	[param1+0], %r184;
	prototype_13 : .callprototype ()_ (.param .b64 _, .param .b32 _) ;
	call 
%rd156,
	(
	param0, 
	param1
	)
	, prototype_13;
	
	//{
	}// Callseq End 13

BB13_61:
	add.s32 	%r188, %r3, %r188;
	ld.global.u32 	%r185, [SIZE_Y];
	ld.global.u32 	%r186, [SIZE_X];
	mul.lo.s32 	%r187, %r185, %r186;
	setp.lt.s32	%p88, %r188, %r187;
	@%p88 bra 	BB13_2;

BB13_62:
	ret;
}

	// .globl	_Z12alive_updatev
.visible .entry _Z12alive_updatev(

)
{
	.reg .pred 	%p<131>;
	.reg .b16 	%rs<85>;
	.reg .b32 	%r<322>;
	.reg .b64 	%rd<268>;


	mov.u32 	%r143, %tid.x;
	mov.u32 	%r144, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mad.lo.s32 	%r267, %r144, %r1, %r143;
	ld.global.u32 	%r145, [SIZE_Y];
	ld.global.u32 	%r146, [SIZE_X];
	mul.lo.s32 	%r147, %r145, %r146;
	setp.ge.s32	%p1, %r267, %r147;
	@%p1 bra 	BB14_100;

	mov.u32 	%r148, %nctaid.x;
	mul.lo.s32 	%r3, %r148, %r1;

BB14_2:
	ld.global.u64 	%rd69, [cells];
	mul.wide.s32 	%rd70, %r267, 8;
	add.s64 	%rd71, %rd69, %rd70;
	ld.u64 	%rd72, [%rd71];
	ld.u64 	%rd73, [%rd72];
	ld.u64 	%rd74, [%rd73];
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd72;
	.param .b64 retval0;
	prototype_14 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
	%rd74, 
	(
	param0
	)
	, prototype_14;
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 14
	setp.eq.s64	%p2, %rd1, 0;
	@%p2 bra 	BB14_99;

	ld.global.u64 	%rd2, [range_tree];
	ld.global.u32 	%r5, [tree_size];
	mov.u32 	%r269, 0;
	mov.u32 	%r268, 1;
	setp.lt.u32	%p3, %r5, 2;
	mov.u32 	%r270, %r269;
	@%p3 bra 	BB14_7;

BB14_4:
	cvt.u64.u32	%rd3, %r268;
	mul.wide.u32 	%rd75, %r268, 40;
	add.s64 	%rd4, %rd2, %rd75;
	ld.u64 	%rd76, [%rd4];
	setp.gt.u64	%p4, %rd76, %rd1;
	mov.u16 	%rs68, 0;
	@%p4 bra 	BB14_6;

	ld.u64 	%rd77, [%rd4+8];
	setp.ge.u64	%p5, %rd77, %rd1;
	selp.u16	%rs68, 1, 0, %p5;

BB14_6:
	add.s32 	%r152, %r269, 2;
	setp.eq.s16	%p6, %rs68, 0;
	cvt.u32.u64	%r153, %rd3;
	selp.b32	%r270, %r152, %r153, %p6;
	shl.b32 	%r269, %r270, 1;
	add.s32 	%r268, %r269, 1;
	setp.lt.u32	%p7, %r268, %r5;
	@%p7 bra 	BB14_4;

BB14_7:
	mul.wide.u32 	%rd78, %r270, 40;
	add.s64 	%rd79, %rd2, %rd78;
	ld.u64 	%rd80, [%rd79+24];
	ld.u64 	%rd81, [%rd80+16];


	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_15 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd81,
	(
	param0
	)
	, prototype_15;
	ld.param.b32	%r154, [retval0+0];
	
	//{
	}// Callseq End 15
	cvt.u16.u32	%rs36, %r154;
	and.b16  	%rs37, %rs36, 255;
	setp.eq.s16	%p8, %rs37, 0;
	@%p8 bra 	BB14_99;

	ld.global.u64 	%rd6, [range_tree];
	ld.global.u32 	%r12, [tree_size];
	mov.u32 	%r275, 0;
	mov.u32 	%r271, 1;
	setp.lt.u32	%p9, %r12, 2;
	mov.u32 	%r272, %r275;
	mov.u32 	%r273, %r275;
	@%p9 bra 	BB14_12;

BB14_9:
	cvt.u64.u32	%rd7, %r271;
	mul.wide.u32 	%rd84, %r271, 40;
	add.s64 	%rd8, %rd6, %rd84;
	ld.u64 	%rd85, [%rd8];
	setp.gt.u64	%p10, %rd85, %rd1;
	mov.u16 	%rs69, 0;
	@%p10 bra 	BB14_11;

	ld.u64 	%rd86, [%rd8+8];
	setp.ge.u64	%p11, %rd86, %rd1;
	selp.u16	%rs69, 1, 0, %p11;

BB14_11:
	add.s32 	%r158, %r272, 2;
	setp.eq.s16	%p12, %rs69, 0;
	cvt.u32.u64	%r159, %rd7;
	selp.b32	%r273, %r158, %r159, %p12;
	shl.b32 	%r272, %r273, 1;
	add.s32 	%r271, %r272, 1;
	setp.lt.u32	%p13, %r271, %r12;
	@%p13 bra 	BB14_9;

BB14_12:
	mul.wide.u32 	%rd87, %r273, 40;
	add.s64 	%rd88, %rd6, %rd87;
	ld.u64 	%rd89, [%rd88+24];
	ld.u64 	%rd90, [%rd89+64];


	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_16 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd90,
	(
	param0
	)
	, prototype_16;
	ld.param.b32	%r19, [retval0+0];
	
	//{
	}// Callseq End 16
	ld.global.u64 	%rd9, [range_tree];
	ld.global.u32 	%r20, [tree_size];
	mov.u32 	%r274, 1;
	setp.lt.u32	%p14, %r20, 2;
	mov.u32 	%r276, %r275;
	@%p14 bra 	BB14_16;

BB14_13:
	cvt.u64.u32	%rd10, %r274;
	mul.wide.u32 	%rd93, %r274, 40;
	add.s64 	%rd11, %rd9, %rd93;
	ld.u64 	%rd94, [%rd11];
	setp.gt.u64	%p15, %rd94, %rd1;
	mov.u16 	%rs70, 0;
	@%p15 bra 	BB14_15;

	ld.u64 	%rd95, [%rd11+8];
	setp.ge.u64	%p16, %rd95, %rd1;
	selp.u16	%rs70, 1, 0, %p16;

BB14_15:
	add.s32 	%r163, %r275, 2;
	setp.eq.s16	%p17, %rs70, 0;
	cvt.u32.u64	%r164, %rd10;
	selp.b32	%r276, %r163, %r164, %p17;
	shl.b32 	%r275, %r276, 1;
	add.s32 	%r274, %r275, 1;
	setp.lt.u32	%p18, %r274, %r20;
	@%p18 bra 	BB14_13;

BB14_16:
	mul.wide.u32 	%rd96, %r276, 40;
	add.s64 	%rd97, %rd9, %rd96;
	ld.u64 	%rd98, [%rd97+24];
	ld.u64 	%rd99, [%rd98+32];


	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_17 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd99,
	(
	param0
	)
	, prototype_17;
	ld.param.b32	%r165, [retval0+0];
	
	//{
	}// Callseq End 17
	cvt.u16.u32	%rs40, %r165;
	and.b16  	%rs41, %rs40, 255;
	setp.eq.s16	%p19, %rs41, 0;
	ld.global.u64 	%rd12, [range_tree];
	ld.global.u32 	%r27, [tree_size];
	@%p19 bra 	BB14_89;
	bra.uni 	BB14_17;

BB14_89:
	mov.u32 	%r317, 0;
	mov.u32 	%r316, 1;
	setp.lt.u32	%p119, %r27, 2;
	mov.u32 	%r318, %r317;
	@%p119 bra 	BB14_93;

BB14_90:
	cvt.u64.u32	%rd62, %r316;
	mul.wide.u32 	%rd246, %r316, 40;
	add.s64 	%rd63, %rd12, %rd246;
	ld.u64 	%rd247, [%rd63];
	setp.gt.u64	%p120, %rd247, %rd1;
	mov.u16 	%rs83, 0;
	@%p120 bra 	BB14_92;

	ld.u64 	%rd248, [%rd63+8];
	setp.ge.u64	%p121, %rd248, %rd1;
	selp.u16	%rs83, 1, 0, %p121;

BB14_92:
	add.s32 	%r255, %r317, 2;
	setp.eq.s16	%p122, %rs83, 0;
	cvt.u32.u64	%r256, %rd62;
	selp.b32	%r318, %r255, %r256, %p122;
	shl.b32 	%r317, %r318, 1;
	add.s32 	%r316, %r317, 1;
	setp.lt.u32	%p123, %r316, %r27;
	@%p123 bra 	BB14_90;

BB14_93:
	mul.wide.u32 	%rd249, %r318, 40;
	add.s64 	%rd250, %rd12, %rd249;
	ld.u64 	%rd251, [%rd250+24];
	ld.u64 	%rd252, [%rd251+56];


	// Callseq Start 33
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_33 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd252,
	(
	param0
	)
	, prototype_33;
	ld.param.b32	%r257, [retval0+0];
	
	//{
	}// Callseq End 33
	setp.ne.s32	%p124, %r257, 1;
	@%p124 bra 	BB14_99;

	ld.global.u64 	%rd255, [cells];
	mul.wide.s32 	%rd256, %r19, 8;
	add.s64 	%rd64, %rd255, %rd256;
	ld.u64 	%rd65, [%rd64];
	ld.global.u64 	%rd66, [range_tree];
	ld.global.u32 	%r135, [tree_size];
	mov.u32 	%r320, 0;
	mov.u32 	%r319, 1;
	setp.lt.u32	%p125, %r135, 2;
	mov.u32 	%r321, %r320;
	@%p125 bra 	BB14_98;

BB14_95:
	cvt.u64.u32	%rd67, %r319;
	mul.wide.u32 	%rd257, %r319, 40;
	add.s64 	%rd68, %rd66, %rd257;
	ld.u64 	%rd258, [%rd68];
	setp.gt.u64	%p126, %rd258, %rd65;
	mov.u16 	%rs84, 0;
	@%p126 bra 	BB14_97;

	ld.u64 	%rd259, [%rd68+8];
	setp.ge.u64	%p127, %rd259, %rd65;
	selp.u16	%rs84, 1, 0, %p127;

BB14_97:
	add.s32 	%r261, %r320, 2;
	setp.eq.s16	%p128, %rs84, 0;
	cvt.u32.u64	%r262, %rd67;
	selp.b32	%r321, %r261, %r262, %p128;
	shl.b32 	%r320, %r321, 1;
	add.s32 	%r319, %r320, 1;
	setp.lt.u32	%p129, %r319, %r135;
	@%p129 bra 	BB14_95;

BB14_98:
	mul.wide.u32 	%rd260, %r321, 40;
	add.s64 	%rd261, %rd66, %rd260;
	ld.u64 	%rd262, [%rd261+24];
	ld.u64 	%rd263, [%rd262+24];
	ld.u64 	%rd264, [%rd64];


	mov.u32 	%r263, 1;
	// Callseq Start 34
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd264;
	.param .b32 param1;
	st.param.b32	[param1+0], %r19;
	.param .b32 param2;
	st.param.b32	[param2+0], %r263;
	prototype_34 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _) ;
	call 
%rd263,
	(
	param0, 
	param1, 
	param2
	)
	, prototype_34;
	
	//{
	}// Callseq End 34
	bra.uni 	BB14_99;

BB14_17:
	mov.u32 	%r278, 0;
	mov.u32 	%r277, 1;
	setp.lt.u32	%p20, %r27, 2;
	mov.u32 	%r279, %r278;
	@%p20 bra 	BB14_21;

BB14_18:
	cvt.u64.u32	%rd13, %r277;
	mul.wide.u32 	%rd102, %r277, 40;
	add.s64 	%rd14, %rd12, %rd102;
	ld.u64 	%rd103, [%rd14];
	setp.gt.u64	%p21, %rd103, %rd1;
	mov.u16 	%rs71, 0;
	@%p21 bra 	BB14_20;

	ld.u64 	%rd104, [%rd14+8];
	setp.ge.u64	%p22, %rd104, %rd1;
	selp.u16	%rs71, 1, 0, %p22;

BB14_20:
	add.s32 	%r169, %r278, 2;
	setp.eq.s16	%p23, %rs71, 0;
	cvt.u32.u64	%r170, %rd13;
	selp.b32	%r279, %r169, %r170, %p23;
	shl.b32 	%r278, %r279, 1;
	add.s32 	%r277, %r278, 1;
	setp.lt.u32	%p24, %r277, %r27;
	@%p24 bra 	BB14_18;

BB14_21:
	mul.wide.u32 	%rd105, %r279, 40;
	add.s64 	%rd106, %rd12, %rd105;
	ld.u64 	%rd107, [%rd106+24];
	ld.u64 	%rd108, [%rd107+32];


	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_18 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd108,
	(
	param0
	)
	, prototype_18;
	ld.param.b32	%r171, [retval0+0];
	
	//{
	}// Callseq End 18
	cvt.u16.u32	%rs43, %r171;
	and.b16  	%rs44, %rs43, 255;
	setp.ne.s16	%p25, %rs44, 0;
	@%p25 bra 	BB14_23;

	mov.u64 	%rd111, $str5;
	cvta.global.u64 	%rd112, %rd111;
	mov.u64 	%rd113, $str4;
	cvta.global.u64 	%rd114, %rd113;
	mov.u64 	%rd115, __unnamed_2;
	cvta.global.u64 	%rd116, %rd115;
	mov.u32 	%r172, 87;
	mov.u64 	%rd117, 1;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd112;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd114;
	.param .b32 param2;
	st.param.b32	[param2+0], %r172;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd116;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd117;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 19

BB14_23:
	ld.global.u64 	%rd15, [range_tree];
	ld.global.u32 	%r34, [tree_size];
	mov.u32 	%r281, 0;
	mov.u32 	%r280, 1;
	setp.lt.u32	%p26, %r34, 2;
	mov.u32 	%r282, %r281;
	@%p26 bra 	BB14_27;

BB14_24:
	cvt.u64.u32	%rd16, %r280;
	mul.wide.u32 	%rd118, %r280, 40;
	add.s64 	%rd17, %rd15, %rd118;
	ld.u64 	%rd119, [%rd17];
	setp.gt.u64	%p27, %rd119, %rd1;
	mov.u16 	%rs72, 0;
	@%p27 bra 	BB14_26;

	ld.u64 	%rd120, [%rd17+8];
	setp.ge.u64	%p28, %rd120, %rd1;
	selp.u16	%rs72, 1, 0, %p28;

BB14_26:
	add.s32 	%r176, %r281, 2;
	setp.eq.s16	%p29, %rs72, 0;
	cvt.u32.u64	%r177, %rd16;
	selp.b32	%r282, %r176, %r177, %p29;
	shl.b32 	%r281, %r282, 1;
	add.s32 	%r280, %r281, 1;
	setp.lt.u32	%p30, %r280, %r34;
	@%p30 bra 	BB14_24;

BB14_27:
	mul.wide.u32 	%rd121, %r282, 40;
	add.s64 	%rd122, %rd15, %rd121;
	ld.u64 	%rd123, [%rd122+24];
	ld.u64 	%rd124, [%rd123+16];


	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_20 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd124,
	(
	param0
	)
	, prototype_20;
	ld.param.b32	%r178, [retval0+0];
	
	//{
	}// Callseq End 20
	cvt.u16.u32	%rs46, %r178;
	and.b16  	%rs47, %rs46, 255;
	setp.ne.s16	%p31, %rs47, 0;
	@%p31 bra 	BB14_29;

	mov.u64 	%rd127, $str6;
	cvta.global.u64 	%rd128, %rd127;
	mov.u64 	%rd129, $str4;
	cvta.global.u64 	%rd130, %rd129;
	mov.u64 	%rd131, __unnamed_2;
	cvta.global.u64 	%rd132, %rd131;
	mov.u32 	%r179, 88;
	mov.u64 	%rd133, 1;
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd128;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd130;
	.param .b32 param2;
	st.param.b32	[param2+0], %r179;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd132;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd133;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 21

BB14_29:
	ld.global.u64 	%rd18, [range_tree];
	ld.global.u32 	%r41, [tree_size];
	mov.u32 	%r287, 0;
	mov.u32 	%r283, 1;
	setp.lt.u32	%p32, %r41, 2;
	mov.u32 	%r284, %r287;
	mov.u32 	%r285, %r287;
	@%p32 bra 	BB14_33;

BB14_30:
	cvt.u64.u32	%rd19, %r283;
	mul.wide.u32 	%rd134, %r283, 40;
	add.s64 	%rd20, %rd18, %rd134;
	ld.u64 	%rd135, [%rd20];
	setp.gt.u64	%p33, %rd135, %rd1;
	mov.u16 	%rs73, 0;
	@%p33 bra 	BB14_32;

	ld.u64 	%rd136, [%rd20+8];
	setp.ge.u64	%p34, %rd136, %rd1;
	selp.u16	%rs73, 1, 0, %p34;

BB14_32:
	add.s32 	%r183, %r284, 2;
	setp.eq.s16	%p35, %rs73, 0;
	cvt.u32.u64	%r184, %rd19;
	selp.b32	%r285, %r183, %r184, %p35;
	shl.b32 	%r284, %r285, 1;
	add.s32 	%r283, %r284, 1;
	setp.lt.u32	%p36, %r283, %r41;
	@%p36 bra 	BB14_30;

BB14_33:
	mul.wide.u32 	%rd137, %r285, 40;
	add.s64 	%rd138, %rd18, %rd137;
	ld.u64 	%rd139, [%rd138+24];
	ld.u64 	%rd140, [%rd139+64];


	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_22 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd140,
	(
	param0
	)
	, prototype_22;
	ld.param.b32	%r188, [retval0+0];
	
	//{
	}// Callseq End 22
	ld.global.u32 	%r189, [SIZE_X];
	rem.s32 	%r48, %r188, %r189;
	ld.global.u64 	%rd21, [range_tree];
	ld.global.u32 	%r49, [tree_size];
	mov.u32 	%r286, 1;
	setp.lt.u32	%p37, %r49, 2;
	mov.u32 	%r288, %r287;
	@%p37 bra 	BB14_37;

BB14_34:
	cvt.u64.u32	%rd22, %r286;
	mul.wide.u32 	%rd143, %r286, 40;
	add.s64 	%rd23, %rd21, %rd143;
	ld.u64 	%rd144, [%rd23];
	setp.gt.u64	%p38, %rd144, %rd1;
	mov.u16 	%rs74, 0;
	@%p38 bra 	BB14_36;

	ld.u64 	%rd145, [%rd23+8];
	setp.ge.u64	%p39, %rd145, %rd1;
	selp.u16	%rs74, 1, 0, %p39;

BB14_36:
	add.s32 	%r190, %r287, 2;
	setp.eq.s16	%p40, %rs74, 0;
	cvt.u32.u64	%r191, %rd22;
	selp.b32	%r288, %r190, %r191, %p40;
	shl.b32 	%r287, %r288, 1;
	add.s32 	%r286, %r287, 1;
	setp.lt.u32	%p41, %r286, %r49;
	@%p41 bra 	BB14_34;

BB14_37:
	mul.wide.u32 	%rd146, %r288, 40;
	add.s64 	%rd147, %rd21, %rd146;
	ld.u64 	%rd148, [%rd147+24];
	ld.u64 	%rd149, [%rd148+64];


	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_23 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd149,
	(
	param0
	)
	, prototype_23;
	ld.param.b32	%r193, [retval0+0];
	
	//{
	}// Callseq End 23
	ld.global.u32 	%r194, [SIZE_X];
	div.s32 	%r56, %r193, %r194;
	mov.u32 	%r192, -1;
	mov.u32 	%r289, %r192;

BB14_38:
	add.s32 	%r58, %r289, %r48;
	mov.u32 	%r290, %r192;

BB14_39:
	ld.global.u32 	%r60, [SIZE_X];
	setp.ge.s32	%p42, %r58, %r60;
	setp.lt.s32	%p43, %r58, 0;
	or.pred  	%p44, %p43, %p42;
	add.s32 	%r61, %r290, %r56;
	setp.lt.s32	%p45, %r61, 0;
	or.pred  	%p46, %p44, %p45;
	ld.global.u32 	%r196, [SIZE_Y];
	setp.ge.s32	%p47, %r61, %r196;
	or.pred  	%p48, %p46, %p47;
	@%p48 bra 	BB14_87;

	ld.global.u64 	%rd152, [cells];
	mad.lo.s32 	%r200, %r60, %r61, %r58;
	mul.wide.s32 	%rd153, %r200, 8;
	add.s64 	%rd24, %rd152, %rd153;
	ld.u64 	%rd25, [%rd24];
	ld.global.u64 	%rd26, [range_tree];
	ld.global.u32 	%r62, [tree_size];
	mov.u32 	%r292, 0;
	mov.u32 	%r291, 1;
	setp.lt.u32	%p49, %r62, 2;
	mov.u32 	%r293, %r292;
	@%p49 bra 	BB14_44;

BB14_41:
	cvt.u64.u32	%rd27, %r291;
	mul.wide.u32 	%rd154, %r291, 40;
	add.s64 	%rd28, %rd26, %rd154;
	ld.u64 	%rd155, [%rd28];
	setp.gt.u64	%p50, %rd155, %rd25;
	mov.u16 	%rs75, 0;
	@%p50 bra 	BB14_43;

	ld.u64 	%rd156, [%rd28+8];
	setp.ge.u64	%p51, %rd156, %rd25;
	selp.u16	%rs75, 1, 0, %p51;

BB14_43:
	add.s32 	%r201, %r292, 2;
	setp.eq.s16	%p52, %rs75, 0;
	cvt.u32.u64	%r202, %rd27;
	selp.b32	%r293, %r201, %r202, %p52;
	shl.b32 	%r292, %r293, 1;
	add.s32 	%r291, %r292, 1;
	setp.lt.u32	%p53, %r291, %r62;
	@%p53 bra 	BB14_41;

BB14_44:
	mul.wide.u32 	%rd157, %r293, 40;
	add.s64 	%rd158, %rd26, %rd157;
	ld.u64 	%rd159, [%rd158+24];
	ld.u64 	%rd160, [%rd159+40];
	ld.u64 	%rd161, [%rd24];


	// Callseq Start 24
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd161;
	.param .b32 retval0;
	prototype_24 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd160,
	(
	param0
	)
	, prototype_24;
	ld.param.b32	%r203, [retval0+0];
	
	//{
	}// Callseq End 24
	cvt.u16.u32	%rs51, %r203;
	and.b16  	%rs52, %rs51, 255;
	setp.eq.s16	%p54, %rs52, 0;
	@%p54 bra 	BB14_87;

	add.s32 	%r69, %r61, -1;
	mov.u32 	%r294, -1;
	add.s32 	%r70, %r61, 1;

BB14_46:
	add.s32 	%r72, %r294, %r58;
	setp.lt.s32	%p55, %r72, 0;
	ld.global.u32 	%r73, [SIZE_X];
	setp.ge.s32	%p56, %r72, %r73;
	or.pred  	%p57, %p55, %p56;
	setp.lt.s32	%p58, %r61, 1;
	or.pred  	%p59, %p57, %p58;
	ld.global.u32 	%r205, [SIZE_Y];
	setp.gt.s32	%p60, %r61, %r205;
	or.pred  	%p61, %p59, %p60;
	@%p61 bra 	BB14_57;

	ld.global.u64 	%rd164, [cells];
	mad.lo.s32 	%r209, %r73, %r69, %r72;
	mul.wide.s32 	%rd165, %r209, 8;
	add.s64 	%rd29, %rd164, %rd165;
	ld.u64 	%rd30, [%rd29];
	ld.global.u64 	%rd31, [range_tree];
	ld.global.u32 	%r74, [tree_size];
	mov.u32 	%r296, 0;
	mov.u32 	%r295, 1;
	setp.lt.u32	%p62, %r74, 2;
	mov.u32 	%r297, %r296;
	@%p62 bra 	BB14_51;

BB14_48:
	cvt.u64.u32	%rd32, %r295;
	mul.wide.u32 	%rd166, %r295, 40;
	add.s64 	%rd33, %rd31, %rd166;
	ld.u64 	%rd167, [%rd33];
	setp.gt.u64	%p63, %rd167, %rd30;
	mov.u16 	%rs76, 0;
	@%p63 bra 	BB14_50;

	ld.u64 	%rd168, [%rd33+8];
	setp.ge.u64	%p64, %rd168, %rd30;
	selp.u16	%rs76, 1, 0, %p64;

BB14_50:
	add.s32 	%r210, %r296, 2;
	setp.eq.s16	%p65, %rs76, 0;
	cvt.u32.u64	%r211, %rd32;
	selp.b32	%r297, %r210, %r211, %p65;
	shl.b32 	%r296, %r297, 1;
	add.s32 	%r295, %r296, 1;
	setp.lt.u32	%p66, %r295, %r74;
	@%p66 bra 	BB14_48;

BB14_51:
	mul.wide.u32 	%rd169, %r297, 40;
	add.s64 	%rd170, %rd31, %rd169;
	ld.u64 	%rd171, [%rd170+24];
	ld.u64 	%rd172, [%rd171+16];
	ld.u64 	%rd173, [%rd29];


	// Callseq Start 25
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd173;
	.param .b64 retval0;
	prototype_25 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
%rd172,
	(
	param0
	)
	, prototype_25;
	ld.param.b64	%rd267, [retval0+0];
	
	//{
	}// Callseq End 25
	setp.eq.s64	%p67, %rd267, 0;
	@%p67 bra 	BB14_57;

	ld.global.u64 	%rd35, [range_tree];
	ld.global.u32 	%r81, [tree_size];
	mov.u32 	%r299, 0;
	mov.u32 	%r298, 1;
	setp.lt.u32	%p68, %r81, 2;
	mov.u32 	%r300, %r299;
	@%p68 bra 	BB14_56;

BB14_53:
	cvt.u64.u32	%rd36, %r298;
	mul.wide.u32 	%rd176, %r298, 40;
	add.s64 	%rd37, %rd35, %rd176;
	ld.u64 	%rd177, [%rd37];
	setp.gt.u64	%p69, %rd177, %rd267;
	mov.u16 	%rs77, 0;
	@%p69 bra 	BB14_55;

	ld.u64 	%rd178, [%rd37+8];
	setp.ge.u64	%p70, %rd178, %rd267;
	selp.u16	%rs77, 1, 0, %p70;

BB14_55:
	add.s32 	%r215, %r299, 2;
	setp.eq.s16	%p71, %rs77, 0;
	cvt.u32.u64	%r216, %rd36;
	selp.b32	%r300, %r215, %r216, %p71;
	shl.b32 	%r299, %r300, 1;
	add.s32 	%r298, %r299, 1;
	setp.lt.u32	%p72, %r298, %r81;
	@%p72 bra 	BB14_53;

BB14_56:
	mul.wide.u32 	%rd179, %r300, 40;
	add.s64 	%rd180, %rd35, %rd179;
	ld.u64 	%rd181, [%rd180+24];
	ld.u64 	%rd182, [%rd181+32];


	// Callseq Start 26
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd267;
	.param .b32 retval0;
	prototype_26 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd182,
	(
	param0
	)
	, prototype_26;
	ld.param.b32	%r217, [retval0+0];
	
	//{
	}// Callseq End 26
	cvt.u16.u32	%rs55, %r217;
	and.b16  	%rs56, %rs55, 255;
	setp.ne.s16	%p73, %rs56, 0;
	@%p73 bra 	BB14_79;

BB14_57:
	ld.global.u32 	%r88, [SIZE_X];
	setp.ge.s32	%p75, %r72, %r88;
	or.pred  	%p76, %p55, %p75;
	ld.global.u32 	%r218, [SIZE_Y];
	setp.ge.s32	%p77, %r61, %r218;
	or.pred  	%p78, %p76, %p77;
	@%p78 bra 	BB14_68;

	ld.global.u64 	%rd185, [cells];
	mad.lo.s32 	%r222, %r88, %r61, %r72;
	mul.wide.s32 	%rd186, %r222, 8;
	add.s64 	%rd38, %rd185, %rd186;
	ld.u64 	%rd39, [%rd38];
	ld.global.u64 	%rd40, [range_tree];
	ld.global.u32 	%r89, [tree_size];
	mov.u32 	%r302, 0;
	mov.u32 	%r301, 1;
	setp.lt.u32	%p79, %r89, 2;
	mov.u32 	%r303, %r302;
	@%p79 bra 	BB14_62;

BB14_59:
	cvt.u64.u32	%rd41, %r301;
	mul.wide.u32 	%rd187, %r301, 40;
	add.s64 	%rd42, %rd40, %rd187;
	ld.u64 	%rd188, [%rd42];
	setp.gt.u64	%p80, %rd188, %rd39;
	mov.u16 	%rs78, 0;
	@%p80 bra 	BB14_61;

	ld.u64 	%rd189, [%rd42+8];
	setp.ge.u64	%p81, %rd189, %rd39;
	selp.u16	%rs78, 1, 0, %p81;

BB14_61:
	add.s32 	%r223, %r302, 2;
	setp.eq.s16	%p82, %rs78, 0;
	cvt.u32.u64	%r224, %rd41;
	selp.b32	%r303, %r223, %r224, %p82;
	shl.b32 	%r302, %r303, 1;
	add.s32 	%r301, %r302, 1;
	setp.lt.u32	%p83, %r301, %r89;
	@%p83 bra 	BB14_59;

BB14_62:
	mul.wide.u32 	%rd190, %r303, 40;
	add.s64 	%rd191, %rd40, %rd190;
	ld.u64 	%rd192, [%rd191+24];
	ld.u64 	%rd193, [%rd192+16];
	ld.u64 	%rd194, [%rd38];


	// Callseq Start 27
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd194;
	.param .b64 retval0;
	prototype_27 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
%rd193,
	(
	param0
	)
	, prototype_27;
	ld.param.b64	%rd267, [retval0+0];
	
	//{
	}// Callseq End 27
	setp.eq.s64	%p84, %rd267, 0;
	@%p84 bra 	BB14_68;

	ld.global.u64 	%rd44, [range_tree];
	ld.global.u32 	%r96, [tree_size];
	mov.u32 	%r305, 0;
	mov.u32 	%r304, 1;
	setp.lt.u32	%p85, %r96, 2;
	mov.u32 	%r306, %r305;
	@%p85 bra 	BB14_67;

BB14_64:
	cvt.u64.u32	%rd45, %r304;
	mul.wide.u32 	%rd197, %r304, 40;
	add.s64 	%rd46, %rd44, %rd197;
	ld.u64 	%rd198, [%rd46];
	setp.gt.u64	%p86, %rd198, %rd267;
	mov.u16 	%rs79, 0;
	@%p86 bra 	BB14_66;

	ld.u64 	%rd199, [%rd46+8];
	setp.ge.u64	%p87, %rd199, %rd267;
	selp.u16	%rs79, 1, 0, %p87;

BB14_66:
	add.s32 	%r228, %r305, 2;
	setp.eq.s16	%p88, %rs79, 0;
	cvt.u32.u64	%r229, %rd45;
	selp.b32	%r306, %r228, %r229, %p88;
	shl.b32 	%r305, %r306, 1;
	add.s32 	%r304, %r305, 1;
	setp.lt.u32	%p89, %r304, %r96;
	@%p89 bra 	BB14_64;

BB14_67:
	mul.wide.u32 	%rd200, %r306, 40;
	add.s64 	%rd201, %rd44, %rd200;
	ld.u64 	%rd202, [%rd201+24];
	ld.u64 	%rd203, [%rd202+32];


	// Callseq Start 28
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd267;
	.param .b32 retval0;
	prototype_28 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd203,
	(
	param0
	)
	, prototype_28;
	ld.param.b32	%r230, [retval0+0];
	
	//{
	}// Callseq End 28
	cvt.u16.u32	%rs59, %r230;
	and.b16  	%rs60, %rs59, 255;
	setp.ne.s16	%p90, %rs60, 0;
	@%p90 bra 	BB14_79;

BB14_68:
	ld.global.u32 	%r103, [SIZE_X];
	setp.ge.s32	%p92, %r72, %r103;
	or.pred  	%p93, %p55, %p92;
	setp.lt.s32	%p94, %r61, -1;
	or.pred  	%p95, %p93, %p94;
	ld.global.u32 	%r231, [SIZE_Y];
	setp.ge.s32	%p96, %r70, %r231;
	or.pred  	%p97, %p95, %p96;
	@%p97 bra 	BB14_85;

	ld.global.u64 	%rd206, [cells];
	mad.lo.s32 	%r235, %r103, %r70, %r72;
	mul.wide.s32 	%rd207, %r235, 8;
	add.s64 	%rd47, %rd206, %rd207;
	ld.u64 	%rd48, [%rd47];
	ld.global.u64 	%rd49, [range_tree];
	ld.global.u32 	%r104, [tree_size];
	mov.u32 	%r308, 0;
	mov.u32 	%r307, 1;
	setp.lt.u32	%p98, %r104, 2;
	mov.u32 	%r309, %r308;
	@%p98 bra 	BB14_73;

BB14_70:
	cvt.u64.u32	%rd50, %r307;
	mul.wide.u32 	%rd208, %r307, 40;
	add.s64 	%rd51, %rd49, %rd208;
	ld.u64 	%rd209, [%rd51];
	setp.gt.u64	%p99, %rd209, %rd48;
	mov.u16 	%rs80, 0;
	@%p99 bra 	BB14_72;

	ld.u64 	%rd210, [%rd51+8];
	setp.ge.u64	%p100, %rd210, %rd48;
	selp.u16	%rs80, 1, 0, %p100;

BB14_72:
	add.s32 	%r236, %r308, 2;
	setp.eq.s16	%p101, %rs80, 0;
	cvt.u32.u64	%r237, %rd50;
	selp.b32	%r309, %r236, %r237, %p101;
	shl.b32 	%r308, %r309, 1;
	add.s32 	%r307, %r308, 1;
	setp.lt.u32	%p102, %r307, %r104;
	@%p102 bra 	BB14_70;

BB14_73:
	mul.wide.u32 	%rd211, %r309, 40;
	add.s64 	%rd212, %rd49, %rd211;
	ld.u64 	%rd213, [%rd212+24];
	ld.u64 	%rd214, [%rd213+16];
	ld.u64 	%rd215, [%rd47];


	// Callseq Start 29
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd215;
	.param .b64 retval0;
	prototype_29 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
%rd214,
	(
	param0
	)
	, prototype_29;
	ld.param.b64	%rd267, [retval0+0];
	
	//{
	}// Callseq End 29
	setp.eq.s64	%p103, %rd267, 0;
	@%p103 bra 	BB14_85;

	ld.global.u64 	%rd53, [range_tree];
	ld.global.u32 	%r111, [tree_size];
	mov.u32 	%r311, 0;
	mov.u32 	%r310, 1;
	setp.lt.u32	%p104, %r111, 2;
	mov.u32 	%r312, %r311;
	@%p104 bra 	BB14_78;

BB14_75:
	cvt.u64.u32	%rd54, %r310;
	mul.wide.u32 	%rd218, %r310, 40;
	add.s64 	%rd55, %rd53, %rd218;
	ld.u64 	%rd219, [%rd55];
	setp.gt.u64	%p105, %rd219, %rd267;
	mov.u16 	%rs81, 0;
	@%p105 bra 	BB14_77;

	ld.u64 	%rd220, [%rd55+8];
	setp.ge.u64	%p106, %rd220, %rd267;
	selp.u16	%rs81, 1, 0, %p106;

BB14_77:
	add.s32 	%r241, %r311, 2;
	setp.eq.s16	%p107, %rs81, 0;
	cvt.u32.u64	%r242, %rd54;
	selp.b32	%r312, %r241, %r242, %p107;
	shl.b32 	%r311, %r312, 1;
	add.s32 	%r310, %r311, 1;
	setp.lt.u32	%p108, %r310, %r111;
	@%p108 bra 	BB14_75;

BB14_78:
	mul.wide.u32 	%rd221, %r312, 40;
	add.s64 	%rd222, %rd53, %rd221;
	ld.u64 	%rd223, [%rd222+24];
	ld.u64 	%rd224, [%rd223+32];


	// Callseq Start 30
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd267;
	.param .b32 retval0;
	prototype_30 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd224,
	(
	param0
	)
	, prototype_30;
	ld.param.b32	%r243, [retval0+0];
	
	//{
	}// Callseq End 30
	cvt.u16.u32	%rs63, %r243;
	and.b16  	%rs64, %rs63, 255;
	setp.eq.s16	%p109, %rs64, 0;
	@%p109 bra 	BB14_85;
	bra.uni 	BB14_79;

BB14_85:
	add.s32 	%r294, %r294, 1;
	setp.lt.s32	%p116, %r294, 2;
	@%p116 bra 	BB14_46;

	mov.u64 	%rd239, $str3;
	cvta.global.u64 	%rd240, %rd239;
	mov.u64 	%rd241, $str4;
	cvta.global.u64 	%rd242, %rd241;
	mov.u64 	%rd243, __unnamed_1;
	cvta.global.u64 	%rd244, %rd243;
	mov.u32 	%r251, 82;
	mov.u64 	%rd245, 1;
	// Callseq Start 32
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd240;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd242;
	.param .b32 param2;
	st.param.b32	[param2+0], %r251;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd244;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd245;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 32
	bra.uni 	BB14_87;

BB14_79:
	setp.ne.s64	%p110, %rd267, %rd1;
	@%p110 bra 	BB14_87;

	ld.global.u64 	%rd227, [cells];
	ld.global.u32 	%r247, [SIZE_X];
	mad.lo.s32 	%r118, %r247, %r61, %r58;
	mul.wide.s32 	%rd228, %r118, 8;
	add.s64 	%rd57, %rd227, %rd228;
	ld.u64 	%rd58, [%rd57];
	ld.global.u64 	%rd59, [range_tree];
	ld.global.u32 	%r119, [tree_size];
	mov.u32 	%r314, 0;
	mov.u32 	%r313, 1;
	setp.lt.u32	%p111, %r119, 2;
	mov.u32 	%r315, %r314;
	@%p111 bra 	BB14_84;

BB14_81:
	cvt.u64.u32	%rd60, %r313;
	mul.wide.u32 	%rd229, %r313, 40;
	add.s64 	%rd61, %rd59, %rd229;
	ld.u64 	%rd230, [%rd61];
	setp.gt.u64	%p112, %rd230, %rd58;
	mov.u16 	%rs82, 0;
	@%p112 bra 	BB14_83;

	ld.u64 	%rd231, [%rd61+8];
	setp.ge.u64	%p113, %rd231, %rd58;
	selp.u16	%rs82, 1, 0, %p113;

BB14_83:
	add.s32 	%r248, %r314, 2;
	setp.eq.s16	%p114, %rs82, 0;
	cvt.u32.u64	%r249, %rd60;
	selp.b32	%r315, %r248, %r249, %p114;
	shl.b32 	%r314, %r315, 1;
	add.s32 	%r313, %r314, 1;
	setp.lt.u32	%p115, %r313, %r119;
	@%p115 bra 	BB14_81;

BB14_84:
	mul.wide.u32 	%rd232, %r315, 40;
	add.s64 	%rd233, %rd59, %rd232;
	ld.u64 	%rd234, [%rd233+24];
	ld.u64 	%rd235, [%rd234+24];
	ld.u64 	%rd236, [%rd57];


	mov.u32 	%r250, 1;
	// Callseq Start 31
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd236;
	.param .b32 param1;
	st.param.b32	[param1+0], %r118;
	.param .b32 param2;
	st.param.b32	[param2+0], %r250;
	prototype_31 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _) ;
	call 
%rd235,
	(
	param0, 
	param1, 
	param2
	)
	, prototype_31;
	
	//{
	}// Callseq End 31

BB14_87:
	add.s32 	%r290, %r290, 1;
	setp.lt.s32	%p117, %r290, 2;
	@%p117 bra 	BB14_39;

	add.s32 	%r289, %r289, 1;
	setp.lt.s32	%p118, %r289, 2;
	@%p118 bra 	BB14_38;

BB14_99:
	add.s32 	%r267, %r3, %r267;
	ld.global.u32 	%r264, [SIZE_Y];
	ld.global.u32 	%r265, [SIZE_X];
	mul.lo.s32 	%r266, %r264, %r265;
	setp.lt.s32	%p130, %r267, %r266;
	@%p130 bra 	BB14_2;

BB14_100:
	ret;
}

	// .globl	_Z17candidate_preparev
.visible .entry _Z17candidate_preparev(

)
{
	.reg .pred 	%p<90>;
	.reg .b16 	%rs<53>;
	.reg .b32 	%r<226>;
	.reg .b64 	%rd<159>;


	mov.u32 	%r102, %tid.x;
	mov.u32 	%r103, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mad.lo.s32 	%r186, %r103, %r1, %r102;
	ld.global.u32 	%r104, [SIZE_Y];
	ld.global.u32 	%r105, [SIZE_X];
	mul.lo.s32 	%r106, %r104, %r105;
	setp.ge.s32	%p1, %r186, %r106;
	@%p1 bra 	BB15_64;

	mov.u32 	%r107, %nctaid.x;
	mul.lo.s32 	%r3, %r107, %r1;

BB15_2:
	ld.global.u64 	%rd45, [cells];
	mul.wide.s32 	%rd46, %r186, 8;
	add.s64 	%rd47, %rd45, %rd46;
	ld.u64 	%rd48, [%rd47];
	ld.u64 	%rd49, [%rd48];
	ld.u64 	%rd50, [%rd49];
	// Callseq Start 35
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd48;
	.param .b64 retval0;
	prototype_35 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
	%rd50, 
	(
	param0
	)
	, prototype_35;
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 35
	setp.eq.s64	%p2, %rd1, 0;
	@%p2 bra 	BB15_63;

	ld.global.u64 	%rd2, [range_tree];
	ld.global.u32 	%r5, [tree_size];
	mov.u32 	%r188, 0;
	mov.u32 	%r187, 1;
	setp.lt.u32	%p3, %r5, 2;
	mov.u32 	%r189, %r188;
	@%p3 bra 	BB15_7;

BB15_4:
	cvt.u64.u32	%rd3, %r187;
	mul.wide.u32 	%rd51, %r187, 40;
	add.s64 	%rd4, %rd2, %rd51;
	ld.u64 	%rd52, [%rd4];
	setp.gt.u64	%p4, %rd52, %rd1;
	mov.u16 	%rs42, 0;
	@%p4 bra 	BB15_6;

	ld.u64 	%rd53, [%rd4+8];
	setp.ge.u64	%p5, %rd53, %rd1;
	selp.u16	%rs42, 1, 0, %p5;

BB15_6:
	add.s32 	%r111, %r188, 2;
	setp.eq.s16	%p6, %rs42, 0;
	cvt.u32.u64	%r112, %rd3;
	selp.b32	%r189, %r111, %r112, %p6;
	shl.b32 	%r188, %r189, 1;
	add.s32 	%r187, %r188, 1;
	setp.lt.u32	%p7, %r187, %r5;
	@%p7 bra 	BB15_4;

BB15_7:
	mul.wide.u32 	%rd54, %r189, 40;
	add.s64 	%rd55, %rd2, %rd54;
	ld.u64 	%rd56, [%rd55+24];
	ld.u64 	%rd57, [%rd56+24];


	// Callseq Start 36
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_36 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd57,
	(
	param0
	)
	, prototype_36;
	ld.param.b32	%r113, [retval0+0];
	
	//{
	}// Callseq End 36
	cvt.u16.u32	%rs24, %r113;
	and.b16  	%rs25, %rs24, 255;
	setp.eq.s16	%p8, %rs25, 0;
	@%p8 bra 	BB15_63;

	ld.global.u64 	%rd6, [range_tree];
	ld.global.u32 	%r12, [tree_size];
	mov.u32 	%r33, 0;
	mov.u32 	%r190, 1;
	setp.lt.u32	%p9, %r12, 2;
	mov.u32 	%r191, %r33;
	mov.u32 	%r192, %r33;
	@%p9 bra 	BB15_12;

BB15_9:
	cvt.u64.u32	%rd7, %r190;
	mul.wide.u32 	%rd60, %r190, 40;
	add.s64 	%rd8, %rd6, %rd60;
	ld.u64 	%rd61, [%rd8];
	setp.gt.u64	%p10, %rd61, %rd1;
	mov.u16 	%rs43, 0;
	@%p10 bra 	BB15_11;

	ld.u64 	%rd62, [%rd8+8];
	setp.ge.u64	%p11, %rd62, %rd1;
	selp.u16	%rs43, 1, 0, %p11;

BB15_11:
	add.s32 	%r117, %r191, 2;
	setp.eq.s16	%p12, %rs43, 0;
	cvt.u32.u64	%r118, %rd7;
	selp.b32	%r192, %r117, %r118, %p12;
	shl.b32 	%r191, %r192, 1;
	add.s32 	%r190, %r191, 1;
	setp.lt.u32	%p13, %r190, %r12;
	@%p13 bra 	BB15_9;

BB15_12:
	mul.wide.u32 	%rd63, %r192, 40;
	add.s64 	%rd64, %rd6, %rd63;
	ld.u64 	%rd65, [%rd64+24];
	ld.u64 	%rd66, [%rd65+64];


	// Callseq Start 37
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_37 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd66,
	(
	param0
	)
	, prototype_37;
	ld.param.b32	%r122, [retval0+0];
	
	//{
	}// Callseq End 37
	ld.global.u32 	%r123, [SIZE_X];
	rem.s32 	%r19, %r122, %r123;
	ld.global.u64 	%rd9, [range_tree];
	ld.global.u32 	%r20, [tree_size];
	mov.u32 	%r193, 1;
	setp.lt.u32	%p14, %r20, 2;
	mov.u32 	%r194, %r33;
	mov.u32 	%r195, %r33;
	@%p14 bra 	BB15_16;

BB15_13:
	cvt.u64.u32	%rd10, %r193;
	mul.wide.u32 	%rd69, %r193, 40;
	add.s64 	%rd11, %rd9, %rd69;
	ld.u64 	%rd70, [%rd11];
	setp.gt.u64	%p15, %rd70, %rd1;
	mov.u16 	%rs44, 0;
	@%p15 bra 	BB15_15;

	ld.u64 	%rd71, [%rd11+8];
	setp.ge.u64	%p16, %rd71, %rd1;
	selp.u16	%rs44, 1, 0, %p16;

BB15_15:
	add.s32 	%r124, %r194, 2;
	setp.eq.s16	%p17, %rs44, 0;
	cvt.u32.u64	%r125, %rd10;
	selp.b32	%r195, %r124, %r125, %p17;
	shl.b32 	%r194, %r195, 1;
	add.s32 	%r193, %r194, 1;
	setp.lt.u32	%p18, %r193, %r20;
	@%p18 bra 	BB15_13;

BB15_16:
	mul.wide.u32 	%rd72, %r195, 40;
	add.s64 	%rd73, %rd9, %rd72;
	ld.u64 	%rd74, [%rd73+24];
	ld.u64 	%rd75, [%rd74+64];


	// Callseq Start 38
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_38 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd75,
	(
	param0
	)
	, prototype_38;
	ld.param.b32	%r128, [retval0+0];
	
	//{
	}// Callseq End 38
	ld.global.u32 	%r196, [SIZE_X];
	div.s32 	%r28, %r128, %r196;
	add.s32 	%r29, %r28, -1;
	mov.u32 	%r197, -1;
	add.s32 	%r30, %r28, 1;
	bra.uni 	BB15_17;

BB15_65:
	ld.global.u32 	%r196, [SIZE_X];

BB15_17:
	add.s32 	%r34, %r197, %r19;
	setp.lt.s32	%p19, %r34, 0;
	setp.ge.s32	%p20, %r34, %r196;
	or.pred  	%p21, %p19, %p20;
	setp.lt.s32	%p22, %r28, 1;
	or.pred  	%p23, %p21, %p22;
	ld.global.u32 	%r129, [SIZE_Y];
	setp.gt.s32	%p24, %r28, %r129;
	or.pred  	%p25, %p23, %p24;
	@%p25 bra 	BB15_28;

	ld.global.u64 	%rd78, [cells];
	mad.lo.s32 	%r133, %r196, %r29, %r34;
	mul.wide.s32 	%rd79, %r133, 8;
	add.s64 	%rd12, %rd78, %rd79;
	ld.u64 	%rd13, [%rd12];
	ld.global.u64 	%rd14, [range_tree];
	ld.global.u32 	%r35, [tree_size];
	mov.u32 	%r200, 0;
	mov.u32 	%r199, 1;
	setp.lt.u32	%p26, %r35, 2;
	mov.u32 	%r201, %r200;
	@%p26 bra 	BB15_22;

BB15_19:
	cvt.u64.u32	%rd15, %r199;
	mul.wide.u32 	%rd80, %r199, 40;
	add.s64 	%rd16, %rd14, %rd80;
	ld.u64 	%rd81, [%rd16];
	setp.gt.u64	%p27, %rd81, %rd13;
	mov.u16 	%rs45, 0;
	@%p27 bra 	BB15_21;

	ld.u64 	%rd82, [%rd16+8];
	setp.ge.u64	%p28, %rd82, %rd13;
	selp.u16	%rs45, 1, 0, %p28;

BB15_21:
	add.s32 	%r134, %r200, 2;
	setp.eq.s16	%p29, %rs45, 0;
	cvt.u32.u64	%r135, %rd15;
	selp.b32	%r201, %r134, %r135, %p29;
	shl.b32 	%r200, %r201, 1;
	add.s32 	%r199, %r200, 1;
	setp.lt.u32	%p30, %r199, %r35;
	@%p30 bra 	BB15_19;

BB15_22:
	mul.wide.u32 	%rd83, %r201, 40;
	add.s64 	%rd84, %rd14, %rd83;
	ld.u64 	%rd85, [%rd84+24];
	ld.u64 	%rd86, [%rd85+16];
	ld.u64 	%rd87, [%rd12];


	// Callseq Start 39
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd87;
	.param .b64 retval0;
	prototype_39 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
%rd86,
	(
	param0
	)
	, prototype_39;
	ld.param.b64	%rd17, [retval0+0];
	
	//{
	}// Callseq End 39
	setp.eq.s64	%p31, %rd17, 0;
	@%p31 bra 	BB15_28;

	ld.global.u64 	%rd18, [range_tree];
	ld.global.u32 	%r42, [tree_size];
	mov.u32 	%r203, 0;
	mov.u32 	%r202, 1;
	setp.lt.u32	%p32, %r42, 2;
	mov.u32 	%r204, %r203;
	@%p32 bra 	BB15_27;

BB15_24:
	cvt.u64.u32	%rd19, %r202;
	mul.wide.u32 	%rd90, %r202, 40;
	add.s64 	%rd20, %rd18, %rd90;
	ld.u64 	%rd91, [%rd20];
	setp.gt.u64	%p33, %rd91, %rd17;
	mov.u16 	%rs46, 0;
	@%p33 bra 	BB15_26;

	ld.u64 	%rd92, [%rd20+8];
	setp.ge.u64	%p34, %rd92, %rd17;
	selp.u16	%rs46, 1, 0, %p34;

BB15_26:
	add.s32 	%r139, %r203, 2;
	setp.eq.s16	%p35, %rs46, 0;
	cvt.u32.u64	%r140, %rd19;
	selp.b32	%r204, %r139, %r140, %p35;
	shl.b32 	%r203, %r204, 1;
	add.s32 	%r202, %r203, 1;
	setp.lt.u32	%p36, %r202, %r42;
	@%p36 bra 	BB15_24;

BB15_27:
	mul.wide.u32 	%rd93, %r204, 40;
	add.s64 	%rd94, %rd18, %rd93;
	ld.u64 	%rd95, [%rd94+24];
	ld.u64 	%rd96, [%rd95+16];


	// Callseq Start 40
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd17;
	.param .b32 retval0;
	prototype_40 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd96,
	(
	param0
	)
	, prototype_40;
	ld.param.b32	%r141, [retval0+0];
	
	//{
	}// Callseq End 40
	cvt.u16.u32	%rs30, %r141;
	and.b16  	%rs31, %rs30, 255;
	setp.ne.s16	%p37, %rs31, 0;
	selp.u32	%r142, 1, 0, %p37;
	add.s32 	%r33, %r142, %r33;

BB15_28:
	ld.global.u32 	%r51, [SIZE_X];
	setp.ge.s32	%p38, %r34, %r51;
	or.pred  	%p40, %p19, %p38;
	setp.lt.s32	%p41, %r28, 0;
	or.pred  	%p42, %p40, %p41;
	ld.global.u32 	%r143, [SIZE_Y];
	setp.ge.s32	%p43, %r28, %r143;
	or.pred  	%p44, %p42, %p43;
	@%p44 bra 	BB15_39;

	ld.global.u64 	%rd99, [cells];
	mad.lo.s32 	%r147, %r51, %r28, %r34;
	mul.wide.s32 	%rd100, %r147, 8;
	add.s64 	%rd21, %rd99, %rd100;
	ld.u64 	%rd22, [%rd21];
	ld.global.u64 	%rd23, [range_tree];
	ld.global.u32 	%r52, [tree_size];
	mov.u32 	%r207, 0;
	mov.u32 	%r206, 1;
	setp.lt.u32	%p45, %r52, 2;
	mov.u32 	%r208, %r207;
	@%p45 bra 	BB15_33;

BB15_30:
	cvt.u64.u32	%rd24, %r206;
	mul.wide.u32 	%rd101, %r206, 40;
	add.s64 	%rd25, %rd23, %rd101;
	ld.u64 	%rd102, [%rd25];
	setp.gt.u64	%p46, %rd102, %rd22;
	mov.u16 	%rs47, 0;
	@%p46 bra 	BB15_32;

	ld.u64 	%rd103, [%rd25+8];
	setp.ge.u64	%p47, %rd103, %rd22;
	selp.u16	%rs47, 1, 0, %p47;

BB15_32:
	add.s32 	%r148, %r207, 2;
	setp.eq.s16	%p48, %rs47, 0;
	cvt.u32.u64	%r149, %rd24;
	selp.b32	%r208, %r148, %r149, %p48;
	shl.b32 	%r207, %r208, 1;
	add.s32 	%r206, %r207, 1;
	setp.lt.u32	%p49, %r206, %r52;
	@%p49 bra 	BB15_30;

BB15_33:
	mul.wide.u32 	%rd104, %r208, 40;
	add.s64 	%rd105, %rd23, %rd104;
	ld.u64 	%rd106, [%rd105+24];
	ld.u64 	%rd107, [%rd106+16];
	ld.u64 	%rd108, [%rd21];


	// Callseq Start 41
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd108;
	.param .b64 retval0;
	prototype_41 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
%rd107,
	(
	param0
	)
	, prototype_41;
	ld.param.b64	%rd26, [retval0+0];
	
	//{
	}// Callseq End 41
	setp.eq.s64	%p50, %rd26, 0;
	@%p50 bra 	BB15_39;

	ld.global.u64 	%rd27, [range_tree];
	ld.global.u32 	%r59, [tree_size];
	mov.u32 	%r210, 0;
	mov.u32 	%r209, 1;
	setp.lt.u32	%p51, %r59, 2;
	mov.u32 	%r211, %r210;
	@%p51 bra 	BB15_38;

BB15_35:
	cvt.u64.u32	%rd28, %r209;
	mul.wide.u32 	%rd111, %r209, 40;
	add.s64 	%rd29, %rd27, %rd111;
	ld.u64 	%rd112, [%rd29];
	setp.gt.u64	%p52, %rd112, %rd26;
	mov.u16 	%rs48, 0;
	@%p52 bra 	BB15_37;

	ld.u64 	%rd113, [%rd29+8];
	setp.ge.u64	%p53, %rd113, %rd26;
	selp.u16	%rs48, 1, 0, %p53;

BB15_37:
	add.s32 	%r153, %r210, 2;
	setp.eq.s16	%p54, %rs48, 0;
	cvt.u32.u64	%r154, %rd28;
	selp.b32	%r211, %r153, %r154, %p54;
	shl.b32 	%r210, %r211, 1;
	add.s32 	%r209, %r210, 1;
	setp.lt.u32	%p55, %r209, %r59;
	@%p55 bra 	BB15_35;

BB15_38:
	mul.wide.u32 	%rd114, %r211, 40;
	add.s64 	%rd115, %rd27, %rd114;
	ld.u64 	%rd116, [%rd115+24];
	ld.u64 	%rd117, [%rd116+16];


	// Callseq Start 42
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd26;
	.param .b32 retval0;
	prototype_42 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd117,
	(
	param0
	)
	, prototype_42;
	ld.param.b32	%r155, [retval0+0];
	
	//{
	}// Callseq End 42
	cvt.u16.u32	%rs34, %r155;
	and.b16  	%rs35, %rs34, 255;
	setp.ne.s16	%p56, %rs35, 0;
	selp.u32	%r156, 1, 0, %p56;
	add.s32 	%r33, %r156, %r33;

BB15_39:
	ld.global.u32 	%r68, [SIZE_X];
	setp.ge.s32	%p57, %r34, %r68;
	or.pred  	%p59, %p19, %p57;
	setp.lt.s32	%p60, %r28, -1;
	or.pred  	%p61, %p59, %p60;
	ld.global.u32 	%r157, [SIZE_Y];
	setp.ge.s32	%p62, %r30, %r157;
	or.pred  	%p63, %p61, %p62;
	@%p63 bra 	BB15_50;

	ld.global.u64 	%rd120, [cells];
	mad.lo.s32 	%r161, %r68, %r30, %r34;
	mul.wide.s32 	%rd121, %r161, 8;
	add.s64 	%rd30, %rd120, %rd121;
	ld.u64 	%rd31, [%rd30];
	ld.global.u64 	%rd32, [range_tree];
	ld.global.u32 	%r69, [tree_size];
	mov.u32 	%r214, 0;
	mov.u32 	%r213, 1;
	setp.lt.u32	%p64, %r69, 2;
	mov.u32 	%r215, %r214;
	@%p64 bra 	BB15_44;

BB15_41:
	cvt.u64.u32	%rd33, %r213;
	mul.wide.u32 	%rd122, %r213, 40;
	add.s64 	%rd34, %rd32, %rd122;
	ld.u64 	%rd123, [%rd34];
	setp.gt.u64	%p65, %rd123, %rd31;
	mov.u16 	%rs49, 0;
	@%p65 bra 	BB15_43;

	ld.u64 	%rd124, [%rd34+8];
	setp.ge.u64	%p66, %rd124, %rd31;
	selp.u16	%rs49, 1, 0, %p66;

BB15_43:
	add.s32 	%r162, %r214, 2;
	setp.eq.s16	%p67, %rs49, 0;
	cvt.u32.u64	%r163, %rd33;
	selp.b32	%r215, %r162, %r163, %p67;
	shl.b32 	%r214, %r215, 1;
	add.s32 	%r213, %r214, 1;
	setp.lt.u32	%p68, %r213, %r69;
	@%p68 bra 	BB15_41;

BB15_44:
	mul.wide.u32 	%rd125, %r215, 40;
	add.s64 	%rd126, %rd32, %rd125;
	ld.u64 	%rd127, [%rd126+24];
	ld.u64 	%rd128, [%rd127+16];
	ld.u64 	%rd129, [%rd30];


	// Callseq Start 43
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd129;
	.param .b64 retval0;
	prototype_43 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
%rd128,
	(
	param0
	)
	, prototype_43;
	ld.param.b64	%rd35, [retval0+0];
	
	//{
	}// Callseq End 43
	setp.eq.s64	%p69, %rd35, 0;
	@%p69 bra 	BB15_50;

	ld.global.u64 	%rd36, [range_tree];
	ld.global.u32 	%r76, [tree_size];
	mov.u32 	%r217, 0;
	mov.u32 	%r216, 1;
	setp.lt.u32	%p70, %r76, 2;
	mov.u32 	%r218, %r217;
	@%p70 bra 	BB15_49;

BB15_46:
	cvt.u64.u32	%rd37, %r216;
	mul.wide.u32 	%rd132, %r216, 40;
	add.s64 	%rd38, %rd36, %rd132;
	ld.u64 	%rd133, [%rd38];
	setp.gt.u64	%p71, %rd133, %rd35;
	mov.u16 	%rs50, 0;
	@%p71 bra 	BB15_48;

	ld.u64 	%rd134, [%rd38+8];
	setp.ge.u64	%p72, %rd134, %rd35;
	selp.u16	%rs50, 1, 0, %p72;

BB15_48:
	add.s32 	%r167, %r217, 2;
	setp.eq.s16	%p73, %rs50, 0;
	cvt.u32.u64	%r168, %rd37;
	selp.b32	%r218, %r167, %r168, %p73;
	shl.b32 	%r217, %r218, 1;
	add.s32 	%r216, %r217, 1;
	setp.lt.u32	%p74, %r216, %r76;
	@%p74 bra 	BB15_46;

BB15_49:
	mul.wide.u32 	%rd135, %r218, 40;
	add.s64 	%rd136, %rd36, %rd135;
	ld.u64 	%rd137, [%rd136+24];
	ld.u64 	%rd138, [%rd137+16];


	// Callseq Start 44
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd35;
	.param .b32 retval0;
	prototype_44 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd138,
	(
	param0
	)
	, prototype_44;
	ld.param.b32	%r169, [retval0+0];
	
	//{
	}// Callseq End 44
	cvt.u16.u32	%rs38, %r169;
	and.b16  	%rs39, %rs38, 255;
	setp.ne.s16	%p75, %rs39, 0;
	selp.u32	%r170, 1, 0, %p75;
	add.s32 	%r33, %r170, %r33;

BB15_50:
	add.s32 	%r197, %r197, 1;
	setp.lt.s32	%p76, %r197, 2;
	@%p76 bra 	BB15_65;

	setp.eq.s32	%p77, %r33, 3;
	@%p77 bra 	BB15_58;
	bra.uni 	BB15_52;

BB15_58:
	ld.global.u64 	%rd42, [range_tree];
	ld.global.u32 	%r93, [tree_size];
	mov.u32 	%r224, 0;
	mov.u32 	%r223, 1;
	setp.lt.u32	%p84, %r93, 2;
	mov.u32 	%r225, %r224;
	@%p84 bra 	BB15_62;

BB15_59:
	cvt.u64.u32	%rd43, %r223;
	mul.wide.u32 	%rd150, %r223, 40;
	add.s64 	%rd44, %rd42, %rd150;
	ld.u64 	%rd151, [%rd44];
	setp.gt.u64	%p85, %rd151, %rd1;
	mov.u16 	%rs52, 0;
	@%p85 bra 	BB15_61;

	ld.u64 	%rd152, [%rd44+8];
	setp.ge.u64	%p86, %rd152, %rd1;
	selp.u16	%rs52, 1, 0, %p86;

BB15_61:
	add.s32 	%r180, %r224, 2;
	setp.eq.s16	%p87, %rs52, 0;
	cvt.u32.u64	%r181, %rd43;
	selp.b32	%r225, %r180, %r181, %p87;
	shl.b32 	%r224, %r225, 1;
	add.s32 	%r223, %r224, 1;
	setp.lt.u32	%p88, %r223, %r93;
	@%p88 bra 	BB15_59;

BB15_62:
	mul.wide.u32 	%rd153, %r225, 40;
	add.s64 	%rd154, %rd42, %rd153;
	ld.u64 	%rd155, [%rd154+24];
	ld.u64 	%rd156, [%rd155+48];


	mov.u32 	%r182, 2;
	// Callseq Start 46
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 param1;
	st.param.b32	[param1+0], %r182;
	prototype_46 : .callprototype ()_ (.param .b64 _, .param .b32 _) ;
	call 
%rd156,
	(
	param0, 
	param1
	)
	, prototype_46;
	
	//{
	}// Callseq End 46
	bra.uni 	BB15_63;

BB15_52:
	setp.ne.s32	%p78, %r33, 0;
	@%p78 bra 	BB15_63;

	ld.global.u64 	%rd39, [range_tree];
	ld.global.u32 	%r86, [tree_size];
	mov.u32 	%r221, 0;
	mov.u32 	%r220, 1;
	setp.lt.u32	%p79, %r86, 2;
	mov.u32 	%r222, %r221;
	@%p79 bra 	BB15_57;

BB15_54:
	cvt.u64.u32	%rd40, %r220;
	mul.wide.u32 	%rd141, %r220, 40;
	add.s64 	%rd41, %rd39, %rd141;
	ld.u64 	%rd142, [%rd41];
	setp.gt.u64	%p80, %rd142, %rd1;
	mov.u16 	%rs51, 0;
	@%p80 bra 	BB15_56;

	ld.u64 	%rd143, [%rd41+8];
	setp.ge.u64	%p81, %rd143, %rd1;
	selp.u16	%rs51, 1, 0, %p81;

BB15_56:
	add.s32 	%r174, %r221, 2;
	setp.eq.s16	%p82, %rs51, 0;
	cvt.u32.u64	%r175, %rd40;
	selp.b32	%r222, %r174, %r175, %p82;
	shl.b32 	%r221, %r222, 1;
	add.s32 	%r220, %r221, 1;
	setp.lt.u32	%p83, %r220, %r86;
	@%p83 bra 	BB15_54;

BB15_57:
	mul.wide.u32 	%rd144, %r222, 40;
	add.s64 	%rd145, %rd39, %rd144;
	ld.u64 	%rd146, [%rd145+24];
	ld.u64 	%rd147, [%rd146+48];


	mov.u32 	%r176, 1;
	// Callseq Start 45
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 param1;
	st.param.b32	[param1+0], %r176;
	prototype_45 : .callprototype ()_ (.param .b64 _, .param .b32 _) ;
	call 
%rd147,
	(
	param0, 
	param1
	)
	, prototype_45;
	
	//{
	}// Callseq End 45

BB15_63:
	add.s32 	%r186, %r3, %r186;
	ld.global.u32 	%r183, [SIZE_Y];
	ld.global.u32 	%r184, [SIZE_X];
	mul.lo.s32 	%r185, %r183, %r184;
	setp.lt.s32	%p89, %r186, %r185;
	@%p89 bra 	BB15_2;

BB15_64:
	ret;
}

	// .globl	_Z16candidate_updatev
.visible .entry _Z16candidate_updatev(

)
{
	.reg .pred 	%p<37>;
	.reg .b16 	%rs<27>;
	.reg .b32 	%r<111>;
	.reg .b64 	%rd<91>;


	mov.u32 	%r49, %tid.x;
	mov.u32 	%r50, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mad.lo.s32 	%r92, %r50, %r1, %r49;
	ld.global.u32 	%r51, [SIZE_Y];
	ld.global.u32 	%r52, [SIZE_X];
	mul.lo.s32 	%r53, %r51, %r52;
	setp.ge.s32	%p1, %r92, %r53;
	@%p1 bra 	BB16_33;

	mov.u32 	%r54, %nctaid.x;
	mul.lo.s32 	%r3, %r54, %r1;

BB16_2:
	ld.global.u64 	%rd25, [cells];
	mul.wide.s32 	%rd26, %r92, 8;
	add.s64 	%rd27, %rd25, %rd26;
	ld.u64 	%rd28, [%rd27];
	ld.u64 	%rd29, [%rd28];
	ld.u64 	%rd30, [%rd29];
	// Callseq Start 47
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd28;
	.param .b64 retval0;
	prototype_47 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
	%rd30, 
	(
	param0
	)
	, prototype_47;
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 47
	setp.eq.s64	%p2, %rd1, 0;
	@%p2 bra 	BB16_32;

	ld.global.u64 	%rd2, [range_tree];
	ld.global.u32 	%r5, [tree_size];
	mov.u32 	%r94, 0;
	mov.u32 	%r93, 1;
	setp.lt.u32	%p3, %r5, 2;
	mov.u32 	%r95, %r94;
	@%p3 bra 	BB16_7;

BB16_4:
	cvt.u64.u32	%rd3, %r93;
	mul.wide.u32 	%rd31, %r93, 40;
	add.s64 	%rd4, %rd2, %rd31;
	ld.u64 	%rd32, [%rd4];
	setp.gt.u64	%p4, %rd32, %rd1;
	mov.u16 	%rs21, 0;
	@%p4 bra 	BB16_6;

	ld.u64 	%rd33, [%rd4+8];
	setp.ge.u64	%p5, %rd33, %rd1;
	selp.u16	%rs21, 1, 0, %p5;

BB16_6:
	add.s32 	%r58, %r94, 2;
	setp.eq.s16	%p6, %rs21, 0;
	cvt.u32.u64	%r59, %rd3;
	selp.b32	%r95, %r58, %r59, %p6;
	shl.b32 	%r94, %r95, 1;
	add.s32 	%r93, %r94, 1;
	setp.lt.u32	%p7, %r93, %r5;
	@%p7 bra 	BB16_4;

BB16_7:
	mul.wide.u32 	%rd34, %r95, 40;
	add.s64 	%rd35, %rd2, %rd34;
	ld.u64 	%rd36, [%rd35+24];
	ld.u64 	%rd37, [%rd36+24];


	// Callseq Start 48
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_48 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd37,
	(
	param0
	)
	, prototype_48;
	ld.param.b32	%r60, [retval0+0];
	
	//{
	}// Callseq End 48
	cvt.u16.u32	%rs14, %r60;
	and.b16  	%rs15, %rs14, 255;
	setp.eq.s16	%p8, %rs15, 0;
	@%p8 bra 	BB16_32;

	ld.global.u64 	%rd6, [range_tree];
	ld.global.u32 	%r12, [tree_size];
	mov.u32 	%r100, 0;
	mov.u32 	%r96, 1;
	setp.lt.u32	%p9, %r12, 2;
	mov.u32 	%r97, %r100;
	mov.u32 	%r98, %r100;
	@%p9 bra 	BB16_12;

BB16_9:
	cvt.u64.u32	%rd7, %r96;
	mul.wide.u32 	%rd40, %r96, 40;
	add.s64 	%rd8, %rd6, %rd40;
	ld.u64 	%rd41, [%rd8];
	setp.gt.u64	%p10, %rd41, %rd1;
	mov.u16 	%rs22, 0;
	@%p10 bra 	BB16_11;

	ld.u64 	%rd42, [%rd8+8];
	setp.ge.u64	%p11, %rd42, %rd1;
	selp.u16	%rs22, 1, 0, %p11;

BB16_11:
	add.s32 	%r64, %r97, 2;
	setp.eq.s16	%p12, %rs22, 0;
	cvt.u32.u64	%r65, %rd7;
	selp.b32	%r98, %r64, %r65, %p12;
	shl.b32 	%r97, %r98, 1;
	add.s32 	%r96, %r97, 1;
	setp.lt.u32	%p13, %r96, %r12;
	@%p13 bra 	BB16_9;

BB16_12:
	mul.wide.u32 	%rd43, %r98, 40;
	add.s64 	%rd44, %rd6, %rd43;
	ld.u64 	%rd45, [%rd44+24];
	ld.u64 	%rd46, [%rd45+64];


	// Callseq Start 49
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_49 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd46,
	(
	param0
	)
	, prototype_49;
	ld.param.b32	%r19, [retval0+0];
	
	//{
	}// Callseq End 49
	ld.global.u64 	%rd9, [range_tree];
	ld.global.u32 	%r20, [tree_size];
	mov.u32 	%r99, 1;
	setp.lt.u32	%p14, %r20, 2;
	mov.u32 	%r101, %r100;
	@%p14 bra 	BB16_16;

BB16_13:
	cvt.u64.u32	%rd10, %r99;
	mul.wide.u32 	%rd49, %r99, 40;
	add.s64 	%rd11, %rd9, %rd49;
	ld.u64 	%rd50, [%rd11];
	setp.gt.u64	%p15, %rd50, %rd1;
	mov.u16 	%rs23, 0;
	@%p15 bra 	BB16_15;

	ld.u64 	%rd51, [%rd11+8];
	setp.ge.u64	%p16, %rd51, %rd1;
	selp.u16	%rs23, 1, 0, %p16;

BB16_15:
	add.s32 	%r69, %r100, 2;
	setp.eq.s16	%p17, %rs23, 0;
	cvt.u32.u64	%r70, %rd10;
	selp.b32	%r101, %r69, %r70, %p17;
	shl.b32 	%r100, %r101, 1;
	add.s32 	%r99, %r100, 1;
	setp.lt.u32	%p18, %r99, %r20;
	@%p18 bra 	BB16_13;

BB16_16:
	mul.wide.u32 	%rd52, %r101, 40;
	add.s64 	%rd53, %rd9, %rd52;
	ld.u64 	%rd54, [%rd53+24];
	ld.u64 	%rd55, [%rd54+56];


	// Callseq Start 50
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_50 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd55,
	(
	param0
	)
	, prototype_50;
	ld.param.b32	%r71, [retval0+0];
	
	//{
	}// Callseq End 50
	setp.eq.s32	%p19, %r71, 2;
	@%p19 bra 	BB16_27;
	bra.uni 	BB16_17;

BB16_27:
	ld.global.u64 	%rd79, [cells];
	mul.wide.s32 	%rd80, %r19, 8;
	add.s64 	%rd20, %rd79, %rd80;
	ld.u64 	%rd21, [%rd20];
	ld.global.u64 	%rd22, [range_tree];
	ld.global.u32 	%r41, [tree_size];
	mov.u32 	%r85, 0;
	mov.u32 	%r108, 1;
	setp.lt.u32	%p31, %r41, 2;
	mov.u32 	%r109, %r85;
	mov.u32 	%r110, %r85;
	@%p31 bra 	BB16_31;

BB16_28:
	cvt.u64.u32	%rd23, %r108;
	mul.wide.u32 	%rd81, %r108, 40;
	add.s64 	%rd24, %rd22, %rd81;
	ld.u64 	%rd82, [%rd24];
	setp.gt.u64	%p32, %rd82, %rd21;
	mov.u16 	%rs26, 0;
	@%p32 bra 	BB16_30;

	ld.u64 	%rd83, [%rd24+8];
	setp.ge.u64	%p33, %rd83, %rd21;
	selp.u16	%rs26, 1, 0, %p33;

BB16_30:
	add.s32 	%r86, %r109, 2;
	setp.eq.s16	%p34, %rs26, 0;
	cvt.u32.u64	%r87, %rd23;
	selp.b32	%r110, %r86, %r87, %p34;
	shl.b32 	%r109, %r110, 1;
	add.s32 	%r108, %r109, 1;
	setp.lt.u32	%p35, %r108, %r41;
	@%p35 bra 	BB16_28;

BB16_31:
	mul.wide.u32 	%rd84, %r110, 40;
	add.s64 	%rd85, %rd22, %rd84;
	ld.u64 	%rd86, [%rd85+24];
	ld.u64 	%rd87, [%rd86+24];
	ld.u64 	%rd88, [%rd20];


	// Callseq Start 53
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd88;
	.param .b32 param1;
	st.param.b32	[param1+0], %r19;
	.param .b32 param2;
	st.param.b32	[param2+0], %r85;
	prototype_53 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _) ;
	call 
%rd87,
	(
	param0, 
	param1, 
	param2
	)
	, prototype_53;
	
	//{
	}// Callseq End 53
	bra.uni 	BB16_32;

BB16_17:
	ld.global.u64 	%rd12, [range_tree];
	ld.global.u32 	%r27, [tree_size];
	mov.u32 	%r103, 0;
	mov.u32 	%r102, 1;
	setp.lt.u32	%p20, %r27, 2;
	mov.u32 	%r104, %r103;
	@%p20 bra 	BB16_21;

BB16_18:
	cvt.u64.u32	%rd13, %r102;
	mul.wide.u32 	%rd58, %r102, 40;
	add.s64 	%rd14, %rd12, %rd58;
	ld.u64 	%rd59, [%rd14];
	setp.gt.u64	%p21, %rd59, %rd1;
	mov.u16 	%rs24, 0;
	@%p21 bra 	BB16_20;

	ld.u64 	%rd60, [%rd14+8];
	setp.ge.u64	%p22, %rd60, %rd1;
	selp.u16	%rs24, 1, 0, %p22;

BB16_20:
	add.s32 	%r75, %r103, 2;
	setp.eq.s16	%p23, %rs24, 0;
	cvt.u32.u64	%r76, %rd13;
	selp.b32	%r104, %r75, %r76, %p23;
	shl.b32 	%r103, %r104, 1;
	add.s32 	%r102, %r103, 1;
	setp.lt.u32	%p24, %r102, %r27;
	@%p24 bra 	BB16_18;

BB16_21:
	mul.wide.u32 	%rd61, %r104, 40;
	add.s64 	%rd62, %rd12, %rd61;
	ld.u64 	%rd63, [%rd62+24];
	ld.u64 	%rd64, [%rd63+56];


	// Callseq Start 51
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b32 retval0;
	prototype_51 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd64,
	(
	param0
	)
	, prototype_51;
	ld.param.b32	%r77, [retval0+0];
	
	//{
	}// Callseq End 51
	setp.ne.s32	%p25, %r77, 1;
	@%p25 bra 	BB16_32;

	ld.global.u64 	%rd67, [cells];
	mul.wide.s32 	%rd68, %r19, 8;
	add.s64 	%rd15, %rd67, %rd68;
	ld.u64 	%rd16, [%rd15];
	ld.global.u64 	%rd17, [range_tree];
	ld.global.u32 	%r34, [tree_size];
	mov.u32 	%r106, 0;
	mov.u32 	%r105, 1;
	setp.lt.u32	%p26, %r34, 2;
	mov.u32 	%r107, %r106;
	@%p26 bra 	BB16_26;

BB16_23:
	cvt.u64.u32	%rd18, %r105;
	mul.wide.u32 	%rd69, %r105, 40;
	add.s64 	%rd19, %rd17, %rd69;
	ld.u64 	%rd70, [%rd19];
	setp.gt.u64	%p27, %rd70, %rd16;
	mov.u16 	%rs25, 0;
	@%p27 bra 	BB16_25;

	ld.u64 	%rd71, [%rd19+8];
	setp.ge.u64	%p28, %rd71, %rd16;
	selp.u16	%rs25, 1, 0, %p28;

BB16_25:
	add.s32 	%r81, %r106, 2;
	setp.eq.s16	%p29, %rs25, 0;
	cvt.u32.u64	%r82, %rd18;
	selp.b32	%r107, %r81, %r82, %p29;
	shl.b32 	%r106, %r107, 1;
	add.s32 	%r105, %r106, 1;
	setp.lt.u32	%p30, %r105, %r34;
	@%p30 bra 	BB16_23;

BB16_26:
	mul.wide.u32 	%rd72, %r107, 40;
	add.s64 	%rd73, %rd17, %rd72;
	ld.u64 	%rd74, [%rd73+24];
	ld.u64 	%rd75, [%rd74+32];
	ld.u64 	%rd76, [%rd15];


	// Callseq Start 52
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd76;
	prototype_52 : .callprototype ()_ (.param .b64 _) ;
	call 
%rd75,
	(
	param0
	)
	, prototype_52;
	
	//{
	}// Callseq End 52

BB16_32:
	add.s32 	%r92, %r3, %r92;
	ld.global.u32 	%r89, [SIZE_Y];
	ld.global.u32 	%r90, [SIZE_X];
	mul.lo.s32 	%r91, %r89, %r90;
	setp.lt.s32	%p36, %r92, %r91;
	@%p36 bra 	BB16_2;

BB16_33:
	ret;
}

	// .globl	_Z12create_cellsv
.visible .entry _Z12create_cellsv(

)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<24>;


	mov.u32 	%r6, %tid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mad.lo.s32 	%r17, %r7, %r1, %r6;
	ld.global.u32 	%r8, [SIZE_Y];
	ld.global.u32 	%r9, [SIZE_X];
	mul.lo.s32 	%r10, %r8, %r9;
	setp.ge.s32	%p1, %r17, %r10;
	@%p1 bra 	BB17_7;

	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB17_2:
	mov.u64 	%rd5, 32;
	// Callseq Start 54
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 54
	setp.eq.s64	%p2, %rd1, 0;
	mov.u64 	%rd23, 0;
	@%p2 bra 	BB17_4;

	mov.u64 	%rd6, _ZTV4Cell;
	add.s64 	%rd7, %rd6, 16;
	cvta.global.u64 	%rd8, %rd7;
	st.u64 	[%rd1], %rd8;
	mov.u32 	%r12, 0;
	mov.u64 	%rd9, 0;
	st.u64 	[%rd1+8], %rd9;
	st.u32 	[%rd1+24], %r12;
	mov.u64 	%rd23, %rd1;

BB17_4:
	ld.global.u64 	%rd10, [cells];
	mul.wide.s32 	%rd11, %r17, 8;
	add.s64 	%rd12, %rd10, %rd11;
	st.u64 	[%rd12], %rd23;
	ld.global.u64 	%rd13, [cells];
	add.s64 	%rd14, %rd13, %rd11;
	ld.u64 	%rd15, [%rd14];
	setp.ne.s64	%p3, %rd15, 0;
	@%p3 bra 	BB17_6;

	mov.u64 	%rd16, $str7;
	cvta.global.u64 	%rd17, %rd16;
	mov.u64 	%rd18, $str4;
	cvta.global.u64 	%rd19, %rd18;
	mov.u64 	%rd20, __unnamed_3;
	cvta.global.u64 	%rd21, %rd20;
	mov.u32 	%r13, 236;
	mov.u64 	%rd22, 1;
	// Callseq Start 55
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd17;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd19;
	.param .b32 param2;
	st.param.b32	[param2+0], %r13;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd21;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd22;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 55

BB17_6:
	add.s32 	%r17, %r3, %r17;
	ld.global.u32 	%r14, [SIZE_Y];
	ld.global.u32 	%r15, [SIZE_X];
	mul.lo.s32 	%r16, %r14, %r15;
	setp.lt.s32	%p4, %r17, %r16;
	@%p4 bra 	BB17_2;

BB17_7:
	ret;
}

	// .globl	_Z9load_gamePii
.visible .entry _Z9load_gamePii(
	.param .u64 _Z9load_gamePii_param_0,
	.param .u32 _Z9load_gamePii_param_1
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<27>;


	ld.param.u64 	%rd2, [_Z9load_gamePii_param_0];
	ld.param.u32 	%r6, [_Z9load_gamePii_param_1];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r16, %r7, %r1, %r8;
	setp.ge.s32	%p1, %r16, %r6;
	@%p1 bra 	BB18_5;

	cvta.to.global.u64 	%rd1, %rd2;
	mov.u32 	%r9, %nctaid.x;
	mul.lo.s32 	%r3, %r9, %r1;

BB18_2:
	mul.wide.s32 	%rd3, %r16, 4;
	add.s64 	%rd4, %rd1, %rd3;
	ld.global.u32 	%r10, [%rd4];
	ld.global.u64 	%rd5, [cells];
	mul.wide.s32 	%rd6, %r10, 8;
	add.s64 	%rd7, %rd5, %rd6;
	ld.u64 	%rd8, [%rd7];
	ld.u64 	%rd9, [%rd8];
	ld.u64 	%rd10, [%rd9+8];
	mov.u32 	%r11, 0;
	// Callseq Start 56
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b32 param1;
	st.param.b32	[param1+0], %r10;
	.param .b32 param2;
	st.param.b32	[param2+0], %r11;
	prototype_56 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _) ;
	call 
	%rd10, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_56;
	
	//{
	}// Callseq End 56
	ld.global.u32 	%r12, [%rd4];
	ld.global.u64 	%rd11, [cells];
	mul.wide.s32 	%rd12, %r12, 8;
	add.s64 	%rd13, %rd11, %rd12;
	ld.u64 	%rd14, [%rd13];
	ld.u64 	%rd15, [%rd14];
	ld.u64 	%rd16, [%rd15];
	// Callseq Start 57
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 retval0;
	prototype_57 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
	%rd16, 
	(
	param0
	)
	, prototype_57;
	ld.param.b64	%rd17, [retval0+0];
	
	//{
	}// Callseq End 57
	ld.u64 	%rd18, [%rd17];
	ld.u64 	%rd19, [%rd18+48];
	// Callseq Start 58
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd17;
	.param .b32 retval0;
	prototype_58 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
	%rd19, 
	(
	param0
	)
	, prototype_58;
	ld.param.b32	%r13, [retval0+0];
	
	//{
	}// Callseq End 58
	ld.global.u32 	%r14, [%rd4];
	setp.eq.s32	%p2, %r13, %r14;
	@%p2 bra 	BB18_4;

	mov.u64 	%rd20, $str8;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, $str4;
	cvta.global.u64 	%rd23, %rd22;
	mov.u64 	%rd24, __unnamed_4;
	cvta.global.u64 	%rd25, %rd24;
	mov.u32 	%r15, 245;
	mov.u64 	%rd26, 1;
	// Callseq Start 59
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd23;
	.param .b32 param2;
	st.param.b32	[param2+0], %r15;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd25;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd26;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 59

BB18_4:
	add.s32 	%r16, %r3, %r16;
	setp.lt.s32	%p3, %r16, %r6;
	@%p3 bra 	BB18_2;

BB18_5:
	ret;
}

	// .globl	_Z15update_checksumv
.visible .entry _Z15update_checksumv(

)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<10>;


	mov.u32 	%r6, %tid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mad.lo.s32 	%r15, %r7, %r1, %r6;
	ld.global.u32 	%r8, [SIZE_Y];
	ld.global.u32 	%r9, [SIZE_X];
	mul.lo.s32 	%r10, %r8, %r9;
	setp.ge.s32	%p1, %r15, %r10;
	@%p1 bra 	BB19_5;

	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB19_2:
	ld.global.u64 	%rd2, [cells];
	mul.wide.s32 	%rd3, %r15, 8;
	add.s64 	%rd4, %rd2, %rd3;
	ld.u64 	%rd5, [%rd4];
	ld.u64 	%rd6, [%rd5];
	ld.u64 	%rd7, [%rd6];
	// Callseq Start 60
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 retval0;
	prototype_60 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
	%rd7, 
	(
	param0
	)
	, prototype_60;
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 60
	setp.eq.s64	%p2, %rd1, 0;
	@%p2 bra 	BB19_4;

	ld.u64 	%rd8, [%rd1];
	ld.u64 	%rd9, [%rd8+56];
	// Callseq Start 61
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	prototype_61 : .callprototype ()_ (.param .b64 _) ;
	call 
	%rd9, 
	(
	param0
	)
	, prototype_61;
	
	//{
	}// Callseq End 61

BB19_4:
	add.s32 	%r15, %r3, %r15;
	ld.global.u32 	%r12, [SIZE_Y];
	ld.global.u32 	%r13, [SIZE_X];
	mul.lo.s32 	%r14, %r12, %r13;
	setp.lt.s32	%p3, %r15, %r14;
	@%p3 bra 	BB19_2;

BB19_5:
	ret;
}

	// .globl	_Z11dump_vtableI5AgentEvPPvS2_
.visible .entry _Z11dump_vtableI5AgentEvPPvS2_(
	.param .u64 _Z11dump_vtableI5AgentEvPPvS2__param_0,
	.param .u64 _Z11dump_vtableI5AgentEvPPvS2__param_1
)
{
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<59>;


	ld.param.u64 	%rd17, [_Z11dump_vtableI5AgentEvPPvS2__param_0];
	ld.param.u64 	%rd18, [_Z11dump_vtableI5AgentEvPPvS2__param_1];
	mov.u64 	%rd58, 0;
	mov.u64 	%rd20, buf5;
	cvta.global.u64 	%rd21, %rd20;
	setp.eq.s64	%p1, %rd21, 0;
	@%p1 bra 	BB20_2;

	mov.u64 	%rd23, _ZTV5Agent;
	add.s64 	%rd24, %rd23, 16;
	cvta.global.u64 	%rd25, %rd24;
	st.global.u64 	[buf5], %rd25;
	mov.u32 	%r3, 2;
	st.global.u32 	[buf5+12], %r3;
	mov.u64 	%rd58, %rd20;

BB20_2:
	cvta.to.global.u64 	%rd2, %rd17;
	ld.global.u8 	%rs1, [%rd58];
	cvta.to.global.u64 	%rd26, %rd18;
	st.global.u8 	[%rd26], %rs1;
	ld.global.u8 	%rs2, [%rd58+1];
	st.global.u8 	[%rd26+1], %rs2;
	ld.global.u8 	%rs3, [%rd58+2];
	st.global.u8 	[%rd26+2], %rs3;
	ld.global.u8 	%rs4, [%rd58+3];
	st.global.u8 	[%rd26+3], %rs4;
	ld.global.u8 	%rs5, [%rd58+4];
	st.global.u8 	[%rd26+4], %rs5;
	ld.global.u8 	%rs6, [%rd58+5];
	st.global.u8 	[%rd26+5], %rs6;
	ld.global.u8 	%rs7, [%rd58+6];
	st.global.u8 	[%rd26+6], %rs7;
	ld.global.u8 	%rs8, [%rd58+7];
	st.global.u8 	[%rd26+7], %rs8;
	mov.u32 	%r15, 0;

BB20_3:
	cvt.s64.s32	%rd4, %r15;
	ld.global.u64 	%rd27, [%rd58];
	mul.wide.s32 	%rd28, %r15, 8;
	add.s64 	%rd29, %rd27, %rd28;
	ld.u64 	%rd5, [%rd29];
	setp.eq.s64	%p2, %rd5, 0;
	@%p2 bra 	BB20_14;

	add.s64 	%rd6, %rd2, %rd28;
	st.global.u64 	[%rd6], %rd5;
	add.s32 	%r5, %r15, 1;
	ld.global.u64 	%rd31, [%rd58];
	mul.wide.s32 	%rd32, %r5, 8;
	add.s64 	%rd33, %rd31, %rd32;
	ld.u64 	%rd7, [%rd33];
	setp.eq.s64	%p3, %rd7, 0;
	@%p3 bra 	BB20_14;

	st.global.u64 	[%rd6+8], %rd7;
	add.s32 	%r6, %r15, 2;
	ld.global.u64 	%rd34, [%rd58];
	mul.wide.s32 	%rd35, %r6, 8;
	add.s64 	%rd36, %rd34, %rd35;
	ld.u64 	%rd9, [%rd36];
	setp.eq.s64	%p4, %rd9, 0;
	@%p4 bra 	BB20_14;

	st.global.u64 	[%rd6+16], %rd9;
	add.s32 	%r7, %r15, 3;
	ld.global.u64 	%rd37, [%rd58];
	mul.wide.s32 	%rd38, %r7, 8;
	add.s64 	%rd39, %rd37, %rd38;
	ld.u64 	%rd10, [%rd39];
	setp.eq.s64	%p5, %rd10, 0;
	@%p5 bra 	BB20_14;

	st.global.u64 	[%rd6+24], %rd10;
	add.s32 	%r8, %r15, 4;
	ld.global.u64 	%rd40, [%rd58];
	mul.wide.s32 	%rd41, %r8, 8;
	add.s64 	%rd42, %rd40, %rd41;
	ld.u64 	%rd11, [%rd42];
	setp.eq.s64	%p6, %rd11, 0;
	@%p6 bra 	BB20_14;

	st.global.u64 	[%rd6+32], %rd11;
	add.s32 	%r9, %r15, 5;
	ld.global.u64 	%rd43, [%rd58];
	mul.wide.s32 	%rd44, %r9, 8;
	add.s64 	%rd45, %rd43, %rd44;
	ld.u64 	%rd12, [%rd45];
	setp.eq.s64	%p7, %rd12, 0;
	@%p7 bra 	BB20_14;

	st.global.u64 	[%rd6+40], %rd12;
	add.s32 	%r10, %r15, 6;
	ld.global.u64 	%rd46, [%rd58];
	mul.wide.s32 	%rd47, %r10, 8;
	add.s64 	%rd48, %rd46, %rd47;
	ld.u64 	%rd13, [%rd48];
	setp.eq.s64	%p8, %rd13, 0;
	@%p8 bra 	BB20_14;

	st.global.u64 	[%rd6+48], %rd13;
	add.s32 	%r11, %r15, 7;
	ld.global.u64 	%rd49, [%rd58];
	mul.wide.s32 	%rd50, %r11, 8;
	add.s64 	%rd51, %rd49, %rd50;
	ld.u64 	%rd14, [%rd51];
	setp.eq.s64	%p9, %rd14, 0;
	@%p9 bra 	BB20_14;

	st.global.u64 	[%rd6+56], %rd14;
	add.s32 	%r12, %r15, 8;
	ld.global.u64 	%rd52, [%rd58];
	mul.wide.s32 	%rd53, %r12, 8;
	add.s64 	%rd54, %rd52, %rd53;
	ld.u64 	%rd15, [%rd54];
	setp.eq.s64	%p10, %rd15, 0;
	@%p10 bra 	BB20_14;

	st.global.u64 	[%rd6+64], %rd15;
	add.s32 	%r13, %r15, 9;
	ld.global.u64 	%rd55, [%rd58];
	mul.wide.s32 	%rd56, %r13, 8;
	add.s64 	%rd57, %rd55, %rd56;
	ld.u64 	%rd16, [%rd57];
	setp.eq.s64	%p11, %rd16, 0;
	@%p11 bra 	BB20_14;

	cvt.u32.u64	%r14, %rd4;
	st.global.u64 	[%rd6+72], %rd16;
	add.s32 	%r15, %r14, 10;
	setp.lt.s32	%p12, %r15, 30;
	@%p12 bra 	BB20_3;

BB20_14:
	ret;
}

	// .globl	_Z11dump_vtableI4CellEvPPvS2_
.visible .entry _Z11dump_vtableI4CellEvPPvS2_(
	.param .u64 _Z11dump_vtableI4CellEvPPvS2__param_0,
	.param .u64 _Z11dump_vtableI4CellEvPPvS2__param_1
)
{
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<60>;


	ld.param.u64 	%rd17, [_Z11dump_vtableI4CellEvPPvS2__param_0];
	ld.param.u64 	%rd18, [_Z11dump_vtableI4CellEvPPvS2__param_1];
	mov.u64 	%rd59, 0;
	mov.u64 	%rd20, buf5;
	cvta.global.u64 	%rd21, %rd20;
	setp.eq.s64	%p1, %rd21, 0;
	@%p1 bra 	BB21_2;

	mov.u32 	%r3, 0;
	st.global.u32 	[buf5+24], %r3;
	mov.u64 	%rd23, _ZTV4Cell;
	add.s64 	%rd24, %rd23, 16;
	cvta.global.u64 	%rd25, %rd24;
	mov.u64 	%rd26, 0;
	st.global.v2.u64 	[buf5], {%rd25, %rd26};
	mov.u64 	%rd59, %rd20;

BB21_2:
	cvta.to.global.u64 	%rd2, %rd17;
	ld.global.u8 	%rs1, [%rd59];
	cvta.to.global.u64 	%rd27, %rd18;
	st.global.u8 	[%rd27], %rs1;
	ld.global.u8 	%rs2, [%rd59+1];
	st.global.u8 	[%rd27+1], %rs2;
	ld.global.u8 	%rs3, [%rd59+2];
	st.global.u8 	[%rd27+2], %rs3;
	ld.global.u8 	%rs4, [%rd59+3];
	st.global.u8 	[%rd27+3], %rs4;
	ld.global.u8 	%rs5, [%rd59+4];
	st.global.u8 	[%rd27+4], %rs5;
	ld.global.u8 	%rs6, [%rd59+5];
	st.global.u8 	[%rd27+5], %rs6;
	ld.global.u8 	%rs7, [%rd59+6];
	st.global.u8 	[%rd27+6], %rs7;
	ld.global.u8 	%rs8, [%rd59+7];
	st.global.u8 	[%rd27+7], %rs8;
	mov.u32 	%r15, 0;

BB21_3:
	cvt.s64.s32	%rd4, %r15;
	ld.global.u64 	%rd28, [%rd59];
	mul.wide.s32 	%rd29, %r15, 8;
	add.s64 	%rd30, %rd28, %rd29;
	ld.u64 	%rd5, [%rd30];
	setp.eq.s64	%p2, %rd5, 0;
	@%p2 bra 	BB21_14;

	add.s64 	%rd6, %rd2, %rd29;
	st.global.u64 	[%rd6], %rd5;
	add.s32 	%r5, %r15, 1;
	ld.global.u64 	%rd32, [%rd59];
	mul.wide.s32 	%rd33, %r5, 8;
	add.s64 	%rd34, %rd32, %rd33;
	ld.u64 	%rd7, [%rd34];
	setp.eq.s64	%p3, %rd7, 0;
	@%p3 bra 	BB21_14;

	st.global.u64 	[%rd6+8], %rd7;
	add.s32 	%r6, %r15, 2;
	ld.global.u64 	%rd35, [%rd59];
	mul.wide.s32 	%rd36, %r6, 8;
	add.s64 	%rd37, %rd35, %rd36;
	ld.u64 	%rd9, [%rd37];
	setp.eq.s64	%p4, %rd9, 0;
	@%p4 bra 	BB21_14;

	st.global.u64 	[%rd6+16], %rd9;
	add.s32 	%r7, %r15, 3;
	ld.global.u64 	%rd38, [%rd59];
	mul.wide.s32 	%rd39, %r7, 8;
	add.s64 	%rd40, %rd38, %rd39;
	ld.u64 	%rd10, [%rd40];
	setp.eq.s64	%p5, %rd10, 0;
	@%p5 bra 	BB21_14;

	st.global.u64 	[%rd6+24], %rd10;
	add.s32 	%r8, %r15, 4;
	ld.global.u64 	%rd41, [%rd59];
	mul.wide.s32 	%rd42, %r8, 8;
	add.s64 	%rd43, %rd41, %rd42;
	ld.u64 	%rd11, [%rd43];
	setp.eq.s64	%p6, %rd11, 0;
	@%p6 bra 	BB21_14;

	st.global.u64 	[%rd6+32], %rd11;
	add.s32 	%r9, %r15, 5;
	ld.global.u64 	%rd44, [%rd59];
	mul.wide.s32 	%rd45, %r9, 8;
	add.s64 	%rd46, %rd44, %rd45;
	ld.u64 	%rd12, [%rd46];
	setp.eq.s64	%p7, %rd12, 0;
	@%p7 bra 	BB21_14;

	st.global.u64 	[%rd6+40], %rd12;
	add.s32 	%r10, %r15, 6;
	ld.global.u64 	%rd47, [%rd59];
	mul.wide.s32 	%rd48, %r10, 8;
	add.s64 	%rd49, %rd47, %rd48;
	ld.u64 	%rd13, [%rd49];
	setp.eq.s64	%p8, %rd13, 0;
	@%p8 bra 	BB21_14;

	st.global.u64 	[%rd6+48], %rd13;
	add.s32 	%r11, %r15, 7;
	ld.global.u64 	%rd50, [%rd59];
	mul.wide.s32 	%rd51, %r11, 8;
	add.s64 	%rd52, %rd50, %rd51;
	ld.u64 	%rd14, [%rd52];
	setp.eq.s64	%p9, %rd14, 0;
	@%p9 bra 	BB21_14;

	st.global.u64 	[%rd6+56], %rd14;
	add.s32 	%r12, %r15, 8;
	ld.global.u64 	%rd53, [%rd59];
	mul.wide.s32 	%rd54, %r12, 8;
	add.s64 	%rd55, %rd53, %rd54;
	ld.u64 	%rd15, [%rd55];
	setp.eq.s64	%p10, %rd15, 0;
	@%p10 bra 	BB21_14;

	st.global.u64 	[%rd6+64], %rd15;
	add.s32 	%r13, %r15, 9;
	ld.global.u64 	%rd56, [%rd59];
	mul.wide.s32 	%rd57, %r13, 8;
	add.s64 	%rd58, %rd56, %rd57;
	ld.u64 	%rd16, [%rd58];
	setp.eq.s64	%p11, %rd16, 0;
	@%p11 bra 	BB21_14;

	cvt.u32.u64	%r14, %rd4;
	st.global.u64 	[%rd6+72], %rd16;
	add.s32 	%r15, %r14, 10;
	setp.lt.s32	%p12, %r15, 30;
	@%p12 bra 	BB21_3;

BB21_14:
	ret;
}


