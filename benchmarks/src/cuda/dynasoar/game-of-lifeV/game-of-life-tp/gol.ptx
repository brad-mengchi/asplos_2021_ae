//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26218862
// Cuda compilation tools, release 10.1, V10.1.168
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_70
.address_size 64

.func  (.param .b32 func_retval0) _ZN5Agent7isAliveEv
(
	.param .b64 _ZN5Agent7isAliveEv_param_0
)
;
.func  (.param .b32 func_retval0) _ZN5Agent11isCandidateEv
(
	.param .b64 _ZN5Agent11isCandidateEv_param_0
)
;
.func  (.param .b32 func_retval0) _ZN5Agent6is_newEv
(
	.param .b64 _ZN5Agent6is_newEv_param_0
)
;
.func _ZN5Agent10set_is_newEb
(
	.param .b64 _ZN5Agent10set_is_newEb_param_0,
	.param .b32 _ZN5Agent10set_is_newEb_param_1
)
;
.func _ZN5Agent10set_actionEi
(
	.param .b64 _ZN5Agent10set_actionEi_param_0,
	.param .b32 _ZN5Agent10set_actionEi_param_1
)
;
.func  (.param .b32 func_retval0) _ZN5Agent10get_actionEv
(
	.param .b64 _ZN5Agent10get_actionEv_param_0
)
;
.func  (.param .b32 func_retval0) _ZN5Agent7cell_idEv
(
	.param .b64 _ZN5Agent7cell_idEv_param_0
)
;
.func _ZN5Agent15update_checksumEv
(
	.param .b64 _ZN5Agent15update_checksumEv_param_0
)
;
.func  (.param .b64 func_retval0) _ZN4Cell5agentEv
(
	.param .b64 _ZN4Cell5agentEv_param_0
)
;
.func _ZN4Cell9set_agentEi9AgentType
(
	.param .b64 _ZN4Cell9set_agentEi9AgentType_param_0,
	.param .b32 _ZN4Cell9set_agentEi9AgentType_param_1,
	.param .b32 _ZN4Cell9set_agentEi9AgentType_param_2
)
;
.func _ZN4Cell12delete_agentEv
(
	.param .b64 _ZN4Cell12delete_agentEv_param_0
)
;
.func  (.param .b32 func_retval0) _ZN4Cell8is_emptyEv
(
	.param .b64 _ZN4Cell8is_emptyEv_param_0
)
;
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.global .attribute(.managed) .align 16 .b8 buf5[128];
.global .attribute(.managed) .align 8 .u64 vfun_table;
.global .attribute(.managed) .align 4 .u32 tree_size_g;
.global .attribute(.managed) .align 8 .u64 temp_copyBack;
.global .attribute(.managed) .align 8 .u64 temp_TP;
.global .align 8 .u64 _ZTV5Agent[10] = {0, 0, _ZN5Agent7isAliveEv, _ZN5Agent11isCandidateEv, _ZN5Agent6is_newEv, _ZN5Agent10set_is_newEb, _ZN5Agent10set_actionEi, _ZN5Agent10get_actionEv, _ZN5Agent7cell_idEv, _ZN5Agent15update_checksumEv};
.global .align 8 .u64 _ZTV4Cell[6] = {0, 0, _ZN4Cell5agentEv, _ZN4Cell9set_agentEi9AgentType, _ZN4Cell12delete_agentEv, _ZN4Cell8is_emptyEv};
.global .align 4 .u32 SIZE_X;
.global .align 4 .u32 SIZE_Y;
.global .attribute(.managed) .align 8 .u64 cells;
.global .align 1 .b8 __unnamed_1[48] = {118, 111, 105, 100, 32, 109, 97, 121, 98, 101, 95, 99, 114, 101, 97, 116, 101, 95, 99, 97, 110, 100, 105, 100, 97, 116, 101, 40, 65, 103, 101, 110, 116, 86, 32, 42, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 41, 0};
.global .align 1 .b8 __unnamed_2[33] = {118, 111, 105, 100, 32, 99, 114, 101, 97, 116, 101, 95, 99, 97, 110, 100, 105, 100, 97, 116, 101, 115, 40, 65, 103, 101, 110, 116, 86, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_3[27] = {118, 111, 105, 100, 32, 108, 111, 97, 100, 95, 103, 97, 109, 101, 40, 105, 110, 116, 32, 42, 44, 32, 105, 110, 116, 41, 0};
.global .align 4 .u32 device_checksum;
.global .align 4 .u32 device_num_candidates;
.global .align 1 .b8 $str3[6] = {102, 97, 108, 115, 101, 0};
.global .align 1 .b8 $str4[7] = {103, 111, 108, 46, 99, 117, 0};
.global .align 1 .b8 $str5[35] = {67, 76, 69, 65, 78, 80, 84, 82, 40, 32, 112, 116, 114, 32, 44, 32, 65, 103, 101, 110, 116, 86, 42, 41, 45, 62, 105, 115, 95, 110, 101, 119, 40, 41, 0};
.global .align 1 .b8 $str6[36] = {67, 76, 69, 65, 78, 80, 84, 82, 40, 32, 112, 116, 114, 32, 44, 32, 65, 103, 101, 110, 116, 86, 42, 41, 45, 62, 105, 115, 65, 108, 105, 118, 101, 40, 41, 0};
.global .align 1 .b8 $str7[93] = {67, 76, 69, 65, 78, 80, 84, 82, 40, 67, 76, 69, 65, 78, 80, 84, 82, 40, 32, 99, 101, 108, 108, 115, 91, 99, 101, 108, 108, 95, 105, 100, 115, 91, 105, 93, 93, 32, 44, 32, 67, 101, 108, 108, 86, 42, 41, 45, 62, 97, 103, 101, 110, 116, 40, 41, 44, 65, 103, 101, 110, 116, 86, 32, 42, 41, 45, 62, 99, 101, 108, 108, 95, 105, 100, 40, 41, 32, 61, 61, 32, 99, 101, 108, 108, 95, 105, 100, 115, 91, 105, 93, 0};

.func  (.param .b32 func_retval0) _ZN5Agent7isAliveEv(
	.param .b64 _ZN5Agent7isAliveEv_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN5Agent7isAliveEv_param_0];
	ld.u32 	%r1, [%rd1+12];
	setp.eq.s32	%p1, %r1, 0;
	selp.u32	%r2, 1, 0, %p1;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

.func  (.param .b32 func_retval0) _ZN5Agent11isCandidateEv(
	.param .b64 _ZN5Agent11isCandidateEv_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN5Agent11isCandidateEv_param_0];
	ld.u32 	%r1, [%rd1+12];
	setp.eq.s32	%p1, %r1, 1;
	selp.u32	%r2, 1, 0, %p1;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

.func  (.param .b32 func_retval0) _ZN5Agent6is_newEv(
	.param .b64 _ZN5Agent6is_newEv_param_0
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN5Agent6is_newEv_param_0];
	ld.s8 	%r1, [%rd1+16];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.func _ZN5Agent10set_is_newEb(
	.param .b64 _ZN5Agent10set_is_newEb_param_0,
	.param .b32 _ZN5Agent10set_is_newEb_param_1
)
{
	.reg .b16 	%rs<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN5Agent10set_is_newEb_param_0];
	ld.param.s8 	%rs1, [_ZN5Agent10set_is_newEb_param_1];
	st.u8 	[%rd1+16], %rs1;
	ret;
}

.func _ZN5Agent10set_actionEi(
	.param .b64 _ZN5Agent10set_actionEi_param_0,
	.param .b32 _ZN5Agent10set_actionEi_param_1
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN5Agent10set_actionEi_param_0];
	ld.param.u32 	%r1, [_ZN5Agent10set_actionEi_param_1];
	st.u32 	[%rd1+20], %r1;
	ret;
}

.func  (.param .b32 func_retval0) _ZN5Agent10get_actionEv(
	.param .b64 _ZN5Agent10get_actionEv_param_0
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN5Agent10get_actionEv_param_0];
	ld.u32 	%r1, [%rd1+20];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.func  (.param .b32 func_retval0) _ZN5Agent7cell_idEv(
	.param .b64 _ZN5Agent7cell_idEv_param_0
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN5Agent7cell_idEv_param_0];
	ld.u32 	%r1, [%rd1+8];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.func _ZN5Agent15update_checksumEv(
	.param .b64 _ZN5Agent15update_checksumEv_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [_ZN5Agent15update_checksumEv_param_0];
	ld.u64 	%rd3, [%rd2];
	ld.u64 	%rd4, [%rd3];
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_0 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
	%rd4, 
	(
	param0
	)
	, prototype_0;
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 0
	cvt.u16.u32	%rs1, %r1;
	and.b16  	%rs2, %rs1, 255;
	setp.eq.s16	%p1, %rs2, 0;
	@%p1 bra 	BB7_2;

	mov.u64 	%rd5, device_checksum;
	atom.global.add.u32 	%r2, [%rd5], 1;
	bra.uni 	BB7_4;

BB7_2:
	ld.u64 	%rd6, [%rd2];
	ld.u64 	%rd7, [%rd6+8];
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_1 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
	%rd7, 
	(
	param0
	)
	, prototype_1;
	ld.param.b32	%r3, [retval0+0];
	
	//{
	}// Callseq End 1
	cvt.u16.u32	%rs3, %r3;
	and.b16  	%rs4, %rs3, 255;
	setp.eq.s16	%p2, %rs4, 0;
	@%p2 bra 	BB7_4;

	mov.u64 	%rd8, device_num_candidates;
	atom.global.add.u32 	%r4, [%rd8], 1;

BB7_4:
	ret;
}

.func  (.param .b64 func_retval0) _ZN4Cell5agentEv(
	.param .b64 _ZN4Cell5agentEv_param_0
)
{
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN4Cell5agentEv_param_0];
	ld.u64 	%rd2, [%rd1+8];
	st.param.b64	[func_retval0+0], %rd2;
	ret;
}

.func _ZN4Cell9set_agentEi9AgentType(
	.param .b64 _ZN4Cell9set_agentEi9AgentType_param_0,
	.param .b32 _ZN4Cell9set_agentEi9AgentType_param_1,
	.param .b32 _ZN4Cell9set_agentEi9AgentType_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd6, [_ZN4Cell9set_agentEi9AgentType_param_0];
	ld.param.u32 	%r1, [_ZN4Cell9set_agentEi9AgentType_param_1];
	ld.param.u32 	%r2, [_ZN4Cell9set_agentEi9AgentType_param_2];
	add.s64 	%rd1, %rd6, 16;
	ld.u64 	%rd10, [%rd6+16];
	and.b64  	%rd3, %rd10, 281474976710655;
	setp.eq.s64	%p1, %rd3, 0;
	@%p1 bra 	BB9_2;

	mov.u64 	%rd7, _ZTV5Agent;
	add.s64 	%rd8, %rd7, 16;
	cvta.global.u64 	%rd9, %rd8;
	st.u64 	[%rd3], %rd9;
	mov.u16 	%rs1, 1;
	st.u8 	[%rd3+16], %rs1;
	mov.u32 	%r3, 0;
	st.u32 	[%rd3+20], %r3;
	st.v2.u32 	[%rd3+8], {%r1, %r2};
	ld.u64 	%rd10, [%rd1];

BB9_2:
	st.u64 	[%rd1+-8], %rd10;
	ret;
}

.func _ZN4Cell12delete_agentEv(
	.param .b64 _ZN4Cell12delete_agentEv_param_0
)
{
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN4Cell12delete_agentEv_param_0];
	mov.u64 	%rd2, 0;
	st.u64 	[%rd1+8], %rd2;
	ret;
}

.func  (.param .b32 func_retval0) _ZN4Cell8is_emptyEv(
	.param .b64 _ZN4Cell8is_emptyEv_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN4Cell8is_emptyEv_param_0];
	ld.u64 	%rd2, [%rd1+8];
	setp.eq.s64	%p1, %rd2, 0;
	selp.u32	%r1, 1, 0, %p1;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z9vptrPatchPvS_ji
.visible .entry _Z9vptrPatchPvS_ji(
	.param .u64 _Z9vptrPatchPvS_ji_param_0,
	.param .u64 _Z9vptrPatchPvS_ji_param_1,
	.param .u32 _Z9vptrPatchPvS_ji_param_2,
	.param .u32 _Z9vptrPatchPvS_ji_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [_Z9vptrPatchPvS_ji_param_0];
	ld.param.u64 	%rd2, [_Z9vptrPatchPvS_ji_param_1];
	ld.param.u32 	%r2, [_Z9vptrPatchPvS_ji_param_2];
	ld.param.u32 	%r3, [_Z9vptrPatchPvS_ji_param_3];
	mov.u32 	%r4, %tid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r4;
	setp.ge.s32	%p1, %r1, %r3;
	@%p1 bra 	BB12_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.lo.s32 	%r7, %r1, %r2;
	cvt.u64.u32	%rd4, %r7;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.u8 	%rs1, [%rd6];
	st.global.u8 	[%rd5], %rs1;
	ld.global.u8 	%rs2, [%rd6+1];
	st.global.u8 	[%rd5+1], %rs2;
	ld.global.u8 	%rs3, [%rd6+2];
	st.global.u8 	[%rd5+2], %rs3;
	ld.global.u8 	%rs4, [%rd6+3];
	st.global.u8 	[%rd5+3], %rs4;
	ld.global.u8 	%rs5, [%rd6+4];
	st.global.u8 	[%rd5+4], %rs5;
	ld.global.u8 	%rs6, [%rd6+5];
	st.global.u8 	[%rd5+5], %rs6;
	ld.global.u8 	%rs7, [%rd6+6];
	st.global.u8 	[%rd5+6], %rs7;
	ld.global.u8 	%rs8, [%rd6+7];
	st.global.u8 	[%rd5+7], %rs8;

BB12_2:
	ret;
}

	// .globl	_Z13alive_preparev
.visible .entry _Z13alive_preparev(

)
{
	.reg .pred 	%p<34>;
	.reg .b16 	%rs<10>;
	.reg .b32 	%r<64>;
	.reg .b64 	%rd<102>;


	mov.u32 	%r21, %tid.x;
	mov.u32 	%r22, %ctaid.x;
	mov.u32 	%r23, %ntid.x;
	mad.lo.s32 	%r57, %r22, %r23, %r21;
	ld.global.u32 	%r24, [SIZE_Y];
	ld.global.u32 	%r25, [SIZE_X];
	mul.lo.s32 	%r26, %r24, %r25;
	setp.ge.s32	%p1, %r57, %r26;
	@%p1 bra 	BB13_17;

BB13_1:
	ld.global.u64 	%rd10, [cells];
	mul.wide.s32 	%rd11, %r57, 8;
	add.s64 	%rd12, %rd10, %rd11;
	ld.u64 	%rd13, [%rd12];
	and.b64  	%rd14, %rd13, 281474976710655;
	ld.u64 	%rd15, [%rd14];
	ld.u64 	%rd16, [%rd15];
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 retval0;
	prototype_2 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
	%rd16, 
	(
	param0
	)
	, prototype_2;
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 2
	and.b64  	%rd2, %rd1, 281474976710655;
	setp.eq.s64	%p2, %rd2, 0;
	@%p2 bra 	BB13_16;

	shr.u64 	%rd3, %rd1, 48;
	ld.global.u64 	%rd17, [vfun_table];
	mul.lo.s64 	%rd18, %rd3, 240;
	add.s64 	%rd19, %rd17, %rd18;
	ld.u64 	%rd20, [%rd19];


	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_3 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd20,
	(
	param0
	)
	, prototype_3;
	ld.param.b32	%r27, [retval0+0];
	
	//{
	}// Callseq End 3
	cvt.u16.u32	%rs1, %r27;
	and.b16  	%rs2, %rs1, 255;
	setp.eq.s16	%p3, %rs2, 0;
	@%p3 bra 	BB13_16;

	ld.global.u64 	%rd23, [vfun_table];
	add.s64 	%rd25, %rd23, %rd18;
	ld.u64 	%rd26, [%rd25+24];


	mov.u16 	%rs3, 0;
	cvt.s32.s16	%r30, %rs3;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 param1;
	st.param.b32	[param1+0], %r30;
	prototype_4 : .callprototype ()_ (.param .b64 _, .param .b32 _) ;
	call 
%rd26,
	(
	param0, 
	param1
	)
	, prototype_4;
	
	//{
	}// Callseq End 4
	ld.global.u64 	%rd29, [vfun_table];
	add.s64 	%rd30, %rd29, %rd18;
	ld.u64 	%rd31, [%rd30+48];


	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_5 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd31,
	(
	param0
	)
	, prototype_5;
	ld.param.b32	%r31, [retval0+0];
	
	//{
	}// Callseq End 5
	ld.global.u32 	%r32, [SIZE_X];
	rem.s32 	%r3, %r31, %r32;
	ld.global.u64 	%rd34, [vfun_table];
	add.s64 	%rd35, %rd34, %rd18;
	ld.u64 	%rd36, [%rd35+48];


	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_6 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd36,
	(
	param0
	)
	, prototype_6;
	ld.param.b32	%r33, [retval0+0];
	
	//{
	}// Callseq End 6
	ld.global.u32 	%r58, [SIZE_X];
	div.s32 	%r5, %r33, %r58;
	mov.u32 	%r8, 0;
	mov.u32 	%r59, -1;
	bra.uni 	BB13_4;

BB13_18:
	ld.global.u32 	%r58, [SIZE_X];

BB13_4:
	add.s32 	%r9, %r59, %r3;
	setp.lt.s32	%p4, %r9, 0;
	setp.ge.s32	%p5, %r9, %r58;
	or.pred  	%p6, %p4, %p5;
	setp.lt.s32	%p7, %r5, 1;
	or.pred  	%p8, %p6, %p7;
	ld.global.u32 	%r34, [SIZE_Y];
	setp.gt.s32	%p9, %r5, %r34;
	or.pred  	%p10, %p8, %p9;
	@%p10 bra 	BB13_7;

	ld.global.u64 	%rd39, [cells];
	add.s32 	%r35, %r5, -1;
	mad.lo.s32 	%r36, %r58, %r35, %r9;
	mul.wide.s32 	%rd40, %r36, 8;
	add.s64 	%rd41, %rd39, %rd40;
	ld.u16 	%rd42, [%rd41+6];
	ld.global.u64 	%rd43, [vfun_table];
	mul.lo.s64 	%rd44, %rd42, 240;
	add.s64 	%rd45, %rd43, %rd44;
	ld.u64 	%rd46, [%rd45];
	ld.u64 	%rd47, [%rd41];
	and.b64  	%rd48, %rd47, 281474976710655;


	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd48;
	.param .b64 retval0;
	prototype_7 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
%rd46,
	(
	param0
	)
	, prototype_7;
	ld.param.b64	%rd4, [retval0+0];
	
	//{
	}// Callseq End 7
	and.b64  	%rd5, %rd4, 281474976710655;
	setp.eq.s64	%p11, %rd5, 0;
	@%p11 bra 	BB13_7;

	shr.u64 	%rd51, %rd4, 48;
	ld.global.u64 	%rd52, [vfun_table];
	mul.lo.s64 	%rd53, %rd51, 240;
	add.s64 	%rd54, %rd52, %rd53;
	ld.u64 	%rd55, [%rd54];


	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b32 retval0;
	prototype_8 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd55,
	(
	param0
	)
	, prototype_8;
	ld.param.b32	%r37, [retval0+0];
	
	//{
	}// Callseq End 8
	cvt.u16.u32	%rs4, %r37;
	and.b16  	%rs5, %rs4, 255;
	setp.ne.s16	%p12, %rs5, 0;
	selp.u32	%r38, 1, 0, %p12;
	add.s32 	%r8, %r38, %r8;

BB13_7:
	ld.global.u32 	%r12, [SIZE_X];
	setp.ge.s32	%p13, %r9, %r12;
	or.pred  	%p15, %p4, %p13;
	setp.lt.s32	%p16, %r5, 0;
	or.pred  	%p17, %p15, %p16;
	ld.global.u32 	%r39, [SIZE_Y];
	setp.ge.s32	%p18, %r5, %r39;
	or.pred  	%p19, %p17, %p18;
	@%p19 bra 	BB13_10;

	ld.global.u64 	%rd58, [cells];
	mad.lo.s32 	%r40, %r12, %r5, %r9;
	mul.wide.s32 	%rd59, %r40, 8;
	add.s64 	%rd60, %rd58, %rd59;
	ld.u16 	%rd61, [%rd60+6];
	ld.global.u64 	%rd62, [vfun_table];
	mul.lo.s64 	%rd63, %rd61, 240;
	add.s64 	%rd64, %rd62, %rd63;
	ld.u64 	%rd65, [%rd64];
	ld.u64 	%rd66, [%rd60];
	and.b64  	%rd67, %rd66, 281474976710655;


	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd67;
	.param .b64 retval0;
	prototype_9 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
%rd65,
	(
	param0
	)
	, prototype_9;
	ld.param.b64	%rd6, [retval0+0];
	
	//{
	}// Callseq End 9
	and.b64  	%rd7, %rd6, 281474976710655;
	setp.eq.s64	%p20, %rd7, 0;
	@%p20 bra 	BB13_10;

	shr.u64 	%rd70, %rd6, 48;
	ld.global.u64 	%rd71, [vfun_table];
	mul.lo.s64 	%rd72, %rd70, 240;
	add.s64 	%rd73, %rd71, %rd72;
	ld.u64 	%rd74, [%rd73];


	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b32 retval0;
	prototype_10 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd74,
	(
	param0
	)
	, prototype_10;
	ld.param.b32	%r41, [retval0+0];
	
	//{
	}// Callseq End 10
	cvt.u16.u32	%rs6, %r41;
	and.b16  	%rs7, %rs6, 255;
	setp.ne.s16	%p21, %rs7, 0;
	selp.u32	%r42, 1, 0, %p21;
	add.s32 	%r8, %r42, %r8;

BB13_10:
	ld.global.u32 	%r15, [SIZE_X];
	setp.ge.s32	%p22, %r9, %r15;
	or.pred  	%p24, %p4, %p22;
	setp.lt.s32	%p25, %r5, -1;
	or.pred  	%p26, %p24, %p25;
	add.s32 	%r43, %r5, 1;
	ld.global.u32 	%r44, [SIZE_Y];
	setp.ge.s32	%p27, %r43, %r44;
	or.pred  	%p28, %p26, %p27;
	@%p28 bra 	BB13_13;

	ld.global.u64 	%rd77, [cells];
	mad.lo.s32 	%r46, %r15, %r43, %r9;
	mul.wide.s32 	%rd78, %r46, 8;
	add.s64 	%rd79, %rd77, %rd78;
	ld.u16 	%rd80, [%rd79+6];
	ld.global.u64 	%rd81, [vfun_table];
	mul.lo.s64 	%rd82, %rd80, 240;
	add.s64 	%rd83, %rd81, %rd82;
	ld.u64 	%rd84, [%rd83];
	ld.u64 	%rd85, [%rd79];
	and.b64  	%rd86, %rd85, 281474976710655;


	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd86;
	.param .b64 retval0;
	prototype_11 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
%rd84,
	(
	param0
	)
	, prototype_11;
	ld.param.b64	%rd8, [retval0+0];
	
	//{
	}// Callseq End 11
	and.b64  	%rd9, %rd8, 281474976710655;
	setp.eq.s64	%p29, %rd9, 0;
	@%p29 bra 	BB13_13;

	shr.u64 	%rd89, %rd8, 48;
	ld.global.u64 	%rd90, [vfun_table];
	mul.lo.s64 	%rd91, %rd89, 240;
	add.s64 	%rd92, %rd90, %rd91;
	ld.u64 	%rd93, [%rd92];


	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd9;
	.param .b32 retval0;
	prototype_12 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd93,
	(
	param0
	)
	, prototype_12;
	ld.param.b32	%r47, [retval0+0];
	
	//{
	}// Callseq End 12
	cvt.u16.u32	%rs8, %r47;
	and.b16  	%rs9, %rs8, 255;
	setp.ne.s16	%p30, %rs9, 0;
	selp.u32	%r48, 1, 0, %p30;
	add.s32 	%r8, %r48, %r8;

BB13_13:
	add.s32 	%r59, %r59, 1;
	setp.lt.s32	%p31, %r59, 2;
	@%p31 bra 	BB13_18;

	add.s32 	%r49, %r8, -1;
	and.b32  	%r50, %r49, -2;
	setp.eq.s32	%p32, %r50, 2;
	@%p32 bra 	BB13_16;

	ld.global.u64 	%rd96, [vfun_table];
	add.s64 	%rd98, %rd96, %rd18;
	ld.u64 	%rd99, [%rd98+32];


	mov.u32 	%r51, 1;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 param1;
	st.param.b32	[param1+0], %r51;
	prototype_13 : .callprototype ()_ (.param .b64 _, .param .b32 _) ;
	call 
%rd99,
	(
	param0, 
	param1
	)
	, prototype_13;
	
	//{
	}// Callseq End 13

BB13_16:
	mov.u32 	%r52, %nctaid.x;
	mad.lo.s32 	%r57, %r52, %r23, %r57;
	ld.global.u32 	%r54, [SIZE_Y];
	ld.global.u32 	%r55, [SIZE_X];
	mul.lo.s32 	%r56, %r54, %r55;
	setp.lt.s32	%p33, %r57, %r56;
	@%p33 bra 	BB13_1;

BB13_17:
	ret;
}

	// .globl	_Z12alive_updatev
.visible .entry _Z12alive_updatev(

)
{
	.reg .pred 	%p<46>;
	.reg .b16 	%rs<17>;
	.reg .b32 	%r<68>;
	.reg .b64 	%rd<177>;


	mov.u32 	%r22, %tid.x;
	mov.u32 	%r23, %ctaid.x;
	mov.u32 	%r24, %ntid.x;
	mad.lo.s32 	%r64, %r23, %r24, %r22;
	ld.global.u32 	%r25, [SIZE_Y];
	ld.global.u32 	%r26, [SIZE_X];
	mul.lo.s32 	%r27, %r25, %r26;
	setp.ge.s32	%p1, %r64, %r27;
	@%p1 bra 	BB14_31;

BB14_1:
	ld.global.u64 	%rd10, [cells];
	mul.wide.s32 	%rd11, %r64, 8;
	add.s64 	%rd12, %rd10, %rd11;
	ld.u64 	%rd13, [%rd12];
	and.b64  	%rd14, %rd13, 281474976710655;
	ld.u64 	%rd15, [%rd14];
	ld.u64 	%rd16, [%rd15];
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 retval0;
	prototype_14 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
	%rd16, 
	(
	param0
	)
	, prototype_14;
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 14
	and.b64  	%rd2, %rd1, 281474976710655;
	setp.eq.s64	%p2, %rd2, 0;
	@%p2 bra 	BB14_30;

	shr.u64 	%rd3, %rd1, 48;
	ld.global.u64 	%rd17, [vfun_table];
	mul.lo.s64 	%rd18, %rd3, 240;
	add.s64 	%rd19, %rd17, %rd18;
	ld.u64 	%rd20, [%rd19];


	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_15 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd20,
	(
	param0
	)
	, prototype_15;
	ld.param.b32	%r28, [retval0+0];
	
	//{
	}// Callseq End 15
	cvt.u16.u32	%rs1, %r28;
	and.b16  	%rs2, %rs1, 255;
	setp.eq.s16	%p3, %rs2, 0;
	@%p3 bra 	BB14_30;

	ld.global.u64 	%rd23, [vfun_table];
	add.s64 	%rd25, %rd23, %rd18;
	ld.u64 	%rd26, [%rd25+48];


	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_16 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd26,
	(
	param0
	)
	, prototype_16;
	ld.param.b32	%r3, [retval0+0];
	
	//{
	}// Callseq End 16
	ld.global.u64 	%rd29, [vfun_table];
	add.s64 	%rd30, %rd29, %rd18;
	ld.u64 	%rd31, [%rd30+16];


	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_17 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd31,
	(
	param0
	)
	, prototype_17;
	ld.param.b32	%r29, [retval0+0];
	
	//{
	}// Callseq End 17
	cvt.u16.u32	%rs3, %r29;
	and.b16  	%rs4, %rs3, 255;
	setp.eq.s16	%p4, %rs4, 0;
	ld.global.u64 	%rd34, [vfun_table];
	add.s64 	%rd35, %rd34, %rd18;
	add.s64 	%rd5, %rd35, 16;
	@%p4 bra 	BB14_28;
	bra.uni 	BB14_4;

BB14_28:
	ld.u64 	%rd161, [%rd5+24];


	// Callseq Start 33
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_33 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd161,
	(
	param0
	)
	, prototype_33;
	ld.param.b32	%r57, [retval0+0];
	
	//{
	}// Callseq End 33
	setp.ne.s32	%p44, %r57, 1;
	@%p44 bra 	BB14_30;

	ld.global.u64 	%rd164, [cells];
	mul.wide.s32 	%rd165, %r3, 8;
	add.s64 	%rd166, %rd164, %rd165;
	ld.u16 	%rd167, [%rd166+6];
	ld.global.u64 	%rd168, [vfun_table];
	mul.lo.s64 	%rd169, %rd167, 240;
	add.s64 	%rd170, %rd168, %rd169;
	ld.u64 	%rd171, [%rd170+8];
	ld.u64 	%rd172, [%rd166];
	and.b64  	%rd173, %rd172, 281474976710655;


	mov.u32 	%r58, 1;
	// Callseq Start 34
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd173;
	.param .b32 param1;
	st.param.b32	[param1+0], %r3;
	.param .b32 param2;
	st.param.b32	[param2+0], %r58;
	prototype_34 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _) ;
	call 
%rd171,
	(
	param0, 
	param1, 
	param2
	)
	, prototype_34;
	
	//{
	}// Callseq End 34
	bra.uni 	BB14_30;

BB14_4:
	ld.u64 	%rd36, [%rd5];


	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_18 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd36,
	(
	param0
	)
	, prototype_18;
	ld.param.b32	%r30, [retval0+0];
	
	//{
	}// Callseq End 18
	cvt.u16.u32	%rs5, %r30;
	and.b16  	%rs6, %rs5, 255;
	setp.ne.s16	%p5, %rs6, 0;
	@%p5 bra 	BB14_6;

	mov.u64 	%rd39, $str5;
	cvta.global.u64 	%rd40, %rd39;
	mov.u64 	%rd41, $str4;
	cvta.global.u64 	%rd42, %rd41;
	mov.u64 	%rd43, __unnamed_2;
	cvta.global.u64 	%rd44, %rd43;
	mov.u32 	%r31, 87;
	mov.u64 	%rd45, 1;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd40;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r31;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd44;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd45;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 19

BB14_6:
	ld.global.u64 	%rd46, [vfun_table];
	add.s64 	%rd48, %rd46, %rd18;
	ld.u64 	%rd49, [%rd48];


	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_20 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd49,
	(
	param0
	)
	, prototype_20;
	ld.param.b32	%r32, [retval0+0];
	
	//{
	}// Callseq End 20
	cvt.u16.u32	%rs7, %r32;
	and.b16  	%rs8, %rs7, 255;
	setp.ne.s16	%p6, %rs8, 0;
	@%p6 bra 	BB14_8;

	mov.u64 	%rd52, $str6;
	cvta.global.u64 	%rd53, %rd52;
	mov.u64 	%rd54, $str4;
	cvta.global.u64 	%rd55, %rd54;
	mov.u64 	%rd56, __unnamed_2;
	cvta.global.u64 	%rd57, %rd56;
	mov.u32 	%r33, 89;
	mov.u64 	%rd58, 1;
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd53;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd55;
	.param .b32 param2;
	st.param.b32	[param2+0], %r33;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd57;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd58;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 21

BB14_8:
	ld.global.u64 	%rd59, [vfun_table];
	add.s64 	%rd61, %rd59, %rd18;
	ld.u64 	%rd62, [%rd61+48];


	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_22 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd62,
	(
	param0
	)
	, prototype_22;
	ld.param.b32	%r35, [retval0+0];
	
	//{
	}// Callseq End 22
	ld.global.u32 	%r36, [SIZE_X];
	rem.s32 	%r4, %r35, %r36;
	ld.global.u64 	%rd65, [vfun_table];
	add.s64 	%rd66, %rd65, %rd18;
	ld.u64 	%rd67, [%rd66+48];


	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_23 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd67,
	(
	param0
	)
	, prototype_23;
	ld.param.b32	%r37, [retval0+0];
	
	//{
	}// Callseq End 23
	ld.global.u32 	%r38, [SIZE_X];
	div.s32 	%r5, %r37, %r38;
	mov.u32 	%r34, -1;
	mov.u32 	%r65, %r34;

BB14_9:
	add.s32 	%r7, %r65, %r4;
	mov.u32 	%r66, %r34;

BB14_10:
	ld.global.u32 	%r9, [SIZE_X];
	setp.ge.s32	%p7, %r7, %r9;
	setp.lt.s32	%p8, %r7, 0;
	or.pred  	%p9, %p8, %p7;
	add.s32 	%r10, %r66, %r5;
	setp.lt.s32	%p10, %r10, 0;
	or.pred  	%p11, %p9, %p10;
	ld.global.u32 	%r40, [SIZE_Y];
	setp.ge.s32	%p12, %r10, %r40;
	or.pred  	%p13, %p11, %p12;
	@%p13 bra 	BB14_26;

	ld.global.u64 	%rd70, [cells];
	mad.lo.s32 	%r41, %r9, %r10, %r7;
	mul.wide.s32 	%rd71, %r41, 8;
	add.s64 	%rd72, %rd70, %rd71;
	ld.u16 	%rd73, [%rd72+6];
	ld.global.u64 	%rd74, [vfun_table];
	mul.lo.s64 	%rd75, %rd73, 240;
	add.s64 	%rd76, %rd74, %rd75;
	ld.u64 	%rd77, [%rd76+24];
	ld.u64 	%rd78, [%rd72];
	and.b64  	%rd79, %rd78, 281474976710655;


	// Callseq Start 24
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd79;
	.param .b32 retval0;
	prototype_24 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd77,
	(
	param0
	)
	, prototype_24;
	ld.param.b32	%r42, [retval0+0];
	
	//{
	}// Callseq End 24
	cvt.u16.u32	%rs9, %r42;
	and.b16  	%rs10, %rs9, 255;
	setp.eq.s16	%p14, %rs10, 0;
	@%p14 bra 	BB14_26;

	add.s32 	%r11, %r10, -1;
	mov.u32 	%r67, -1;
	add.s32 	%r12, %r10, 1;

BB14_13:
	add.s32 	%r14, %r67, %r7;
	setp.lt.s32	%p15, %r14, 0;
	ld.global.u32 	%r15, [SIZE_X];
	setp.ge.s32	%p16, %r14, %r15;
	or.pred  	%p17, %p15, %p16;
	setp.lt.s32	%p18, %r10, 1;
	or.pred  	%p19, %p17, %p18;
	ld.global.u32 	%r44, [SIZE_Y];
	setp.gt.s32	%p20, %r10, %r44;
	or.pred  	%p21, %p19, %p20;
	@%p21 bra 	BB14_16;

	ld.global.u64 	%rd82, [cells];
	mad.lo.s32 	%r45, %r15, %r11, %r14;
	mul.wide.s32 	%rd83, %r45, 8;
	add.s64 	%rd84, %rd82, %rd83;
	ld.u16 	%rd85, [%rd84+6];
	ld.global.u64 	%rd86, [vfun_table];
	mul.lo.s64 	%rd87, %rd85, 240;
	add.s64 	%rd88, %rd86, %rd87;
	ld.u64 	%rd89, [%rd88];
	ld.u64 	%rd90, [%rd84];
	and.b64  	%rd91, %rd90, 281474976710655;


	// Callseq Start 25
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd91;
	.param .b64 retval0;
	prototype_25 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
%rd89,
	(
	param0
	)
	, prototype_25;
	ld.param.b64	%rd176, [retval0+0];
	
	//{
	}// Callseq End 25
	setp.eq.s64	%p22, %rd176, 0;
	@%p22 bra 	BB14_16;

	ld.global.u64 	%rd94, [vfun_table];
	shr.u64 	%rd95, %rd176, 48;
	mul.lo.s64 	%rd96, %rd95, 240;
	add.s64 	%rd97, %rd94, %rd96;
	ld.u64 	%rd98, [%rd97+16];
	and.b64  	%rd99, %rd176, 281474976710655;


	// Callseq Start 26
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd99;
	.param .b32 retval0;
	prototype_26 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd98,
	(
	param0
	)
	, prototype_26;
	ld.param.b32	%r46, [retval0+0];
	
	//{
	}// Callseq End 26
	cvt.u16.u32	%rs11, %r46;
	and.b16  	%rs12, %rs11, 255;
	setp.ne.s16	%p23, %rs12, 0;
	@%p23 bra 	BB14_22;

BB14_16:
	ld.global.u32 	%r16, [SIZE_X];
	setp.ge.s32	%p25, %r14, %r16;
	or.pred  	%p26, %p15, %p25;
	ld.global.u32 	%r47, [SIZE_Y];
	setp.ge.s32	%p27, %r10, %r47;
	or.pred  	%p28, %p26, %p27;
	@%p28 bra 	BB14_19;

	ld.global.u64 	%rd102, [cells];
	mad.lo.s32 	%r48, %r16, %r10, %r14;
	mul.wide.s32 	%rd103, %r48, 8;
	add.s64 	%rd104, %rd102, %rd103;
	ld.u16 	%rd105, [%rd104+6];
	ld.global.u64 	%rd106, [vfun_table];
	mul.lo.s64 	%rd107, %rd105, 240;
	add.s64 	%rd108, %rd106, %rd107;
	ld.u64 	%rd109, [%rd108];
	ld.u64 	%rd110, [%rd104];
	and.b64  	%rd111, %rd110, 281474976710655;


	// Callseq Start 27
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd111;
	.param .b64 retval0;
	prototype_27 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
%rd109,
	(
	param0
	)
	, prototype_27;
	ld.param.b64	%rd176, [retval0+0];
	
	//{
	}// Callseq End 27
	setp.eq.s64	%p29, %rd176, 0;
	@%p29 bra 	BB14_19;

	ld.global.u64 	%rd114, [vfun_table];
	shr.u64 	%rd115, %rd176, 48;
	mul.lo.s64 	%rd116, %rd115, 240;
	add.s64 	%rd117, %rd114, %rd116;
	ld.u64 	%rd118, [%rd117+16];
	and.b64  	%rd119, %rd176, 281474976710655;


	// Callseq Start 28
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd119;
	.param .b32 retval0;
	prototype_28 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd118,
	(
	param0
	)
	, prototype_28;
	ld.param.b32	%r49, [retval0+0];
	
	//{
	}// Callseq End 28
	cvt.u16.u32	%rs13, %r49;
	and.b16  	%rs14, %rs13, 255;
	setp.ne.s16	%p30, %rs14, 0;
	@%p30 bra 	BB14_22;

BB14_19:
	ld.global.u32 	%r17, [SIZE_X];
	setp.ge.s32	%p32, %r14, %r17;
	or.pred  	%p33, %p15, %p32;
	setp.lt.s32	%p34, %r10, -1;
	or.pred  	%p35, %p33, %p34;
	ld.global.u32 	%r50, [SIZE_Y];
	setp.ge.s32	%p36, %r12, %r50;
	or.pred  	%p37, %p35, %p36;
	@%p37 bra 	BB14_24;

	ld.global.u64 	%rd122, [cells];
	mad.lo.s32 	%r51, %r17, %r12, %r14;
	mul.wide.s32 	%rd123, %r51, 8;
	add.s64 	%rd124, %rd122, %rd123;
	ld.u16 	%rd125, [%rd124+6];
	ld.global.u64 	%rd126, [vfun_table];
	mul.lo.s64 	%rd127, %rd125, 240;
	add.s64 	%rd128, %rd126, %rd127;
	ld.u64 	%rd129, [%rd128];
	ld.u64 	%rd130, [%rd124];
	and.b64  	%rd131, %rd130, 281474976710655;


	// Callseq Start 29
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd131;
	.param .b64 retval0;
	prototype_29 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
%rd129,
	(
	param0
	)
	, prototype_29;
	ld.param.b64	%rd176, [retval0+0];
	
	//{
	}// Callseq End 29
	setp.eq.s64	%p38, %rd176, 0;
	@%p38 bra 	BB14_24;

	ld.global.u64 	%rd134, [vfun_table];
	shr.u64 	%rd135, %rd176, 48;
	mul.lo.s64 	%rd136, %rd135, 240;
	add.s64 	%rd137, %rd134, %rd136;
	ld.u64 	%rd138, [%rd137+16];
	and.b64  	%rd139, %rd176, 281474976710655;


	// Callseq Start 30
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd139;
	.param .b32 retval0;
	prototype_30 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd138,
	(
	param0
	)
	, prototype_30;
	ld.param.b32	%r52, [retval0+0];
	
	//{
	}// Callseq End 30
	cvt.u16.u32	%rs15, %r52;
	and.b16  	%rs16, %rs15, 255;
	setp.eq.s16	%p39, %rs16, 0;
	@%p39 bra 	BB14_24;
	bra.uni 	BB14_22;

BB14_24:
	add.s32 	%r67, %r67, 1;
	setp.lt.s32	%p41, %r67, 2;
	@%p41 bra 	BB14_13;

	mov.u64 	%rd154, $str3;
	cvta.global.u64 	%rd155, %rd154;
	mov.u64 	%rd156, $str4;
	cvta.global.u64 	%rd157, %rd156;
	mov.u64 	%rd158, __unnamed_1;
	cvta.global.u64 	%rd159, %rd158;
	mov.u32 	%r56, 82;
	mov.u64 	%rd160, 1;
	// Callseq Start 32
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd155;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd157;
	.param .b32 param2;
	st.param.b32	[param2+0], %r56;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd159;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd160;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 32
	bra.uni 	BB14_26;

BB14_22:
	setp.ne.s64	%p40, %rd176, %rd1;
	@%p40 bra 	BB14_26;

	ld.global.u64 	%rd142, [cells];
	ld.global.u32 	%r53, [SIZE_X];
	mad.lo.s32 	%r54, %r53, %r10, %r7;
	mul.wide.s32 	%rd143, %r54, 8;
	add.s64 	%rd144, %rd142, %rd143;
	ld.u16 	%rd145, [%rd144+6];
	ld.global.u64 	%rd146, [vfun_table];
	mul.lo.s64 	%rd147, %rd145, 240;
	add.s64 	%rd148, %rd146, %rd147;
	ld.u64 	%rd149, [%rd148+8];
	ld.u64 	%rd150, [%rd144];
	and.b64  	%rd151, %rd150, 281474976710655;


	mov.u32 	%r55, 1;
	// Callseq Start 31
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd151;
	.param .b32 param1;
	st.param.b32	[param1+0], %r54;
	.param .b32 param2;
	st.param.b32	[param2+0], %r55;
	prototype_31 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _) ;
	call 
%rd149,
	(
	param0, 
	param1, 
	param2
	)
	, prototype_31;
	
	//{
	}// Callseq End 31

BB14_26:
	add.s32 	%r66, %r66, 1;
	setp.lt.s32	%p42, %r66, 2;
	@%p42 bra 	BB14_10;

	add.s32 	%r65, %r65, 1;
	setp.lt.s32	%p43, %r65, 2;
	@%p43 bra 	BB14_9;

BB14_30:
	mov.u32 	%r59, %nctaid.x;
	mad.lo.s32 	%r64, %r59, %r24, %r64;
	ld.global.u32 	%r61, [SIZE_Y];
	ld.global.u32 	%r62, [SIZE_X];
	mul.lo.s32 	%r63, %r61, %r62;
	setp.lt.s32	%p45, %r64, %r63;
	@%p45 bra 	BB14_1;

BB14_31:
	ret;
}

	// .globl	_Z17candidate_preparev
.visible .entry _Z17candidate_preparev(

)
{
	.reg .pred 	%p<35>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<62>;
	.reg .b64 	%rd<103>;


	mov.u32 	%r21, %tid.x;
	mov.u32 	%r22, %ctaid.x;
	mov.u32 	%r23, %ntid.x;
	mad.lo.s32 	%r55, %r22, %r23, %r21;
	ld.global.u32 	%r24, [SIZE_Y];
	ld.global.u32 	%r25, [SIZE_X];
	mul.lo.s32 	%r26, %r24, %r25;
	setp.ge.s32	%p1, %r55, %r26;
	@%p1 bra 	BB15_20;

BB15_1:
	ld.global.u64 	%rd10, [cells];
	mul.wide.s32 	%rd11, %r55, 8;
	add.s64 	%rd12, %rd10, %rd11;
	ld.u64 	%rd13, [%rd12];
	and.b64  	%rd14, %rd13, 281474976710655;
	ld.u64 	%rd15, [%rd14];
	ld.u64 	%rd16, [%rd15];
	// Callseq Start 35
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 retval0;
	prototype_35 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
	%rd16, 
	(
	param0
	)
	, prototype_35;
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 35
	and.b64  	%rd2, %rd1, 281474976710655;
	setp.eq.s64	%p2, %rd2, 0;
	@%p2 bra 	BB15_19;

	shr.u64 	%rd3, %rd1, 48;
	ld.global.u64 	%rd17, [vfun_table];
	mul.lo.s64 	%rd18, %rd3, 240;
	add.s64 	%rd19, %rd17, %rd18;
	ld.u64 	%rd20, [%rd19+8];


	// Callseq Start 36
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_36 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd20,
	(
	param0
	)
	, prototype_36;
	ld.param.b32	%r27, [retval0+0];
	
	//{
	}// Callseq End 36
	cvt.u16.u32	%rs1, %r27;
	and.b16  	%rs2, %rs1, 255;
	setp.eq.s16	%p3, %rs2, 0;
	@%p3 bra 	BB15_19;

	ld.global.u64 	%rd23, [vfun_table];
	add.s64 	%rd25, %rd23, %rd18;
	ld.u64 	%rd26, [%rd25+48];


	// Callseq Start 37
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_37 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd26,
	(
	param0
	)
	, prototype_37;
	ld.param.b32	%r30, [retval0+0];
	
	//{
	}// Callseq End 37
	ld.global.u32 	%r31, [SIZE_X];
	rem.s32 	%r3, %r30, %r31;
	ld.global.u64 	%rd29, [vfun_table];
	add.s64 	%rd30, %rd29, %rd18;
	ld.u64 	%rd31, [%rd30+48];


	// Callseq Start 38
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_38 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd31,
	(
	param0
	)
	, prototype_38;
	ld.param.b32	%r32, [retval0+0];
	
	//{
	}// Callseq End 38
	ld.global.u32 	%r56, [SIZE_X];
	div.s32 	%r5, %r32, %r56;
	mov.u32 	%r8, 0;
	mov.u32 	%r57, -1;
	bra.uni 	BB15_4;

BB15_17:
	ld.global.u32 	%r56, [SIZE_X];

BB15_4:
	add.s32 	%r9, %r57, %r3;
	setp.lt.s32	%p4, %r9, 0;
	setp.ge.s32	%p5, %r9, %r56;
	or.pred  	%p6, %p4, %p5;
	setp.lt.s32	%p7, %r5, 1;
	or.pred  	%p8, %p6, %p7;
	ld.global.u32 	%r33, [SIZE_Y];
	setp.gt.s32	%p9, %r5, %r33;
	or.pred  	%p10, %p8, %p9;
	@%p10 bra 	BB15_7;

	ld.global.u64 	%rd34, [cells];
	add.s32 	%r34, %r5, -1;
	mad.lo.s32 	%r35, %r56, %r34, %r9;
	mul.wide.s32 	%rd35, %r35, 8;
	add.s64 	%rd36, %rd34, %rd35;
	ld.u16 	%rd37, [%rd36+6];
	ld.global.u64 	%rd38, [vfun_table];
	mul.lo.s64 	%rd39, %rd37, 240;
	add.s64 	%rd40, %rd38, %rd39;
	ld.u64 	%rd41, [%rd40];
	ld.u64 	%rd42, [%rd36];
	and.b64  	%rd43, %rd42, 281474976710655;


	// Callseq Start 39
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd43;
	.param .b64 retval0;
	prototype_39 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
%rd41,
	(
	param0
	)
	, prototype_39;
	ld.param.b64	%rd4, [retval0+0];
	
	//{
	}// Callseq End 39
	and.b64  	%rd5, %rd4, 281474976710655;
	setp.eq.s64	%p11, %rd5, 0;
	@%p11 bra 	BB15_7;

	shr.u64 	%rd46, %rd4, 48;
	ld.global.u64 	%rd47, [vfun_table];
	mul.lo.s64 	%rd48, %rd46, 240;
	add.s64 	%rd49, %rd47, %rd48;
	ld.u64 	%rd50, [%rd49];


	// Callseq Start 40
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b32 retval0;
	prototype_40 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd50,
	(
	param0
	)
	, prototype_40;
	ld.param.b32	%r36, [retval0+0];
	
	//{
	}// Callseq End 40
	cvt.u16.u32	%rs3, %r36;
	and.b16  	%rs4, %rs3, 255;
	setp.ne.s16	%p12, %rs4, 0;
	selp.u32	%r37, 1, 0, %p12;
	add.s32 	%r8, %r37, %r8;

BB15_7:
	ld.global.u32 	%r12, [SIZE_X];
	setp.ge.s32	%p13, %r9, %r12;
	or.pred  	%p15, %p4, %p13;
	setp.lt.s32	%p16, %r5, 0;
	or.pred  	%p17, %p15, %p16;
	ld.global.u32 	%r38, [SIZE_Y];
	setp.ge.s32	%p18, %r5, %r38;
	or.pred  	%p19, %p17, %p18;
	@%p19 bra 	BB15_10;

	ld.global.u64 	%rd53, [cells];
	mad.lo.s32 	%r39, %r12, %r5, %r9;
	mul.wide.s32 	%rd54, %r39, 8;
	add.s64 	%rd55, %rd53, %rd54;
	ld.u16 	%rd56, [%rd55+6];
	ld.global.u64 	%rd57, [vfun_table];
	mul.lo.s64 	%rd58, %rd56, 240;
	add.s64 	%rd59, %rd57, %rd58;
	ld.u64 	%rd60, [%rd59];
	ld.u64 	%rd61, [%rd55];
	and.b64  	%rd62, %rd61, 281474976710655;


	// Callseq Start 41
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd62;
	.param .b64 retval0;
	prototype_41 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
%rd60,
	(
	param0
	)
	, prototype_41;
	ld.param.b64	%rd6, [retval0+0];
	
	//{
	}// Callseq End 41
	and.b64  	%rd7, %rd6, 281474976710655;
	setp.eq.s64	%p20, %rd7, 0;
	@%p20 bra 	BB15_10;

	shr.u64 	%rd65, %rd6, 48;
	ld.global.u64 	%rd66, [vfun_table];
	mul.lo.s64 	%rd67, %rd65, 240;
	add.s64 	%rd68, %rd66, %rd67;
	ld.u64 	%rd69, [%rd68];


	// Callseq Start 42
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b32 retval0;
	prototype_42 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd69,
	(
	param0
	)
	, prototype_42;
	ld.param.b32	%r40, [retval0+0];
	
	//{
	}// Callseq End 42
	cvt.u16.u32	%rs5, %r40;
	and.b16  	%rs6, %rs5, 255;
	setp.ne.s16	%p21, %rs6, 0;
	selp.u32	%r41, 1, 0, %p21;
	add.s32 	%r8, %r41, %r8;

BB15_10:
	ld.global.u32 	%r15, [SIZE_X];
	setp.ge.s32	%p22, %r9, %r15;
	or.pred  	%p24, %p4, %p22;
	setp.lt.s32	%p25, %r5, -1;
	or.pred  	%p26, %p24, %p25;
	add.s32 	%r42, %r5, 1;
	ld.global.u32 	%r43, [SIZE_Y];
	setp.ge.s32	%p27, %r42, %r43;
	or.pred  	%p28, %p26, %p27;
	@%p28 bra 	BB15_13;

	ld.global.u64 	%rd72, [cells];
	mad.lo.s32 	%r45, %r15, %r42, %r9;
	mul.wide.s32 	%rd73, %r45, 8;
	add.s64 	%rd74, %rd72, %rd73;
	ld.u16 	%rd75, [%rd74+6];
	ld.global.u64 	%rd76, [vfun_table];
	mul.lo.s64 	%rd77, %rd75, 240;
	add.s64 	%rd78, %rd76, %rd77;
	ld.u64 	%rd79, [%rd78];
	ld.u64 	%rd80, [%rd74];
	and.b64  	%rd81, %rd80, 281474976710655;


	// Callseq Start 43
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd81;
	.param .b64 retval0;
	prototype_43 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
%rd79,
	(
	param0
	)
	, prototype_43;
	ld.param.b64	%rd8, [retval0+0];
	
	//{
	}// Callseq End 43
	and.b64  	%rd9, %rd8, 281474976710655;
	setp.eq.s64	%p29, %rd9, 0;
	@%p29 bra 	BB15_13;

	shr.u64 	%rd84, %rd8, 48;
	ld.global.u64 	%rd85, [vfun_table];
	mul.lo.s64 	%rd86, %rd84, 240;
	add.s64 	%rd87, %rd85, %rd86;
	ld.u64 	%rd88, [%rd87];


	// Callseq Start 44
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd9;
	.param .b32 retval0;
	prototype_44 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd88,
	(
	param0
	)
	, prototype_44;
	ld.param.b32	%r46, [retval0+0];
	
	//{
	}// Callseq End 44
	cvt.u16.u32	%rs7, %r46;
	and.b16  	%rs8, %rs7, 255;
	setp.ne.s16	%p30, %rs8, 0;
	selp.u32	%r47, 1, 0, %p30;
	add.s32 	%r8, %r47, %r8;

BB15_13:
	add.s32 	%r57, %r57, 1;
	setp.lt.s32	%p31, %r57, 2;
	@%p31 bra 	BB15_17;

	setp.eq.s32	%p32, %r8, 3;
	@%p32 bra 	BB15_18;
	bra.uni 	BB15_15;

BB15_18:
	ld.global.u64 	%rd97, [vfun_table];
	add.s64 	%rd99, %rd97, %rd18;
	ld.u64 	%rd100, [%rd99+32];


	mov.u32 	%r49, 2;
	// Callseq Start 46
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 param1;
	st.param.b32	[param1+0], %r49;
	prototype_46 : .callprototype ()_ (.param .b64 _, .param .b32 _) ;
	call 
%rd100,
	(
	param0, 
	param1
	)
	, prototype_46;
	
	//{
	}// Callseq End 46
	bra.uni 	BB15_19;

BB15_15:
	setp.ne.s32	%p33, %r8, 0;
	@%p33 bra 	BB15_19;

	ld.global.u64 	%rd91, [vfun_table];
	add.s64 	%rd93, %rd91, %rd18;
	ld.u64 	%rd94, [%rd93+32];


	mov.u32 	%r48, 1;
	// Callseq Start 45
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 param1;
	st.param.b32	[param1+0], %r48;
	prototype_45 : .callprototype ()_ (.param .b64 _, .param .b32 _) ;
	call 
%rd94,
	(
	param0, 
	param1
	)
	, prototype_45;
	
	//{
	}// Callseq End 45

BB15_19:
	mov.u32 	%r50, %nctaid.x;
	mad.lo.s32 	%r55, %r50, %r23, %r55;
	ld.global.u32 	%r52, [SIZE_Y];
	ld.global.u32 	%r53, [SIZE_X];
	mul.lo.s32 	%r54, %r52, %r53;
	setp.lt.s32	%p34, %r55, %r54;
	@%p34 bra 	BB15_1;

BB15_20:
	ret;
}

	// .globl	_Z16candidate_updatev
.visible .entry _Z16candidate_updatev(

)
{
	.reg .pred 	%p<7>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<21>;
	.reg .b64 	%rd<59>;


	mov.u32 	%r7, %tid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mad.lo.s32 	%r20, %r8, %r1, %r7;
	ld.global.u32 	%r9, [SIZE_Y];
	ld.global.u32 	%r10, [SIZE_X];
	mul.lo.s32 	%r11, %r9, %r10;
	setp.ge.s32	%p1, %r20, %r11;
	@%p1 bra 	BB16_9;

	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r3, %r12, %r1;

BB16_2:
	ld.global.u64 	%rd5, [cells];
	mul.wide.s32 	%rd6, %r20, 8;
	add.s64 	%rd7, %rd5, %rd6;
	ld.u64 	%rd8, [%rd7];
	and.b64  	%rd9, %rd8, 281474976710655;
	ld.u64 	%rd10, [%rd9];
	ld.u64 	%rd11, [%rd10];
	// Callseq Start 47
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd9;
	.param .b64 retval0;
	prototype_47 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
	%rd11, 
	(
	param0
	)
	, prototype_47;
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 47
	and.b64  	%rd2, %rd1, 281474976710655;
	setp.eq.s64	%p2, %rd2, 0;
	@%p2 bra 	BB16_8;

	shr.u64 	%rd3, %rd1, 48;
	ld.global.u64 	%rd12, [vfun_table];
	mul.lo.s64 	%rd13, %rd3, 240;
	add.s64 	%rd14, %rd12, %rd13;
	ld.u64 	%rd15, [%rd14+8];


	// Callseq Start 48
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_48 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd15,
	(
	param0
	)
	, prototype_48;
	ld.param.b32	%r13, [retval0+0];
	
	//{
	}// Callseq End 48
	cvt.u16.u32	%rs1, %r13;
	and.b16  	%rs2, %rs1, 255;
	setp.eq.s16	%p3, %rs2, 0;
	@%p3 bra 	BB16_8;

	ld.global.u64 	%rd18, [vfun_table];
	add.s64 	%rd20, %rd18, %rd13;
	ld.u64 	%rd21, [%rd20+48];


	// Callseq Start 49
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_49 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd21,
	(
	param0
	)
	, prototype_49;
	ld.param.b32	%r5, [retval0+0];
	
	//{
	}// Callseq End 49
	ld.global.u64 	%rd24, [vfun_table];
	add.s64 	%rd25, %rd24, %rd13;
	ld.u64 	%rd26, [%rd25+40];


	// Callseq Start 50
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_50 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd26,
	(
	param0
	)
	, prototype_50;
	ld.param.b32	%r14, [retval0+0];
	
	//{
	}// Callseq End 50
	setp.eq.s32	%p4, %r14, 2;
	@%p4 bra 	BB16_7;
	bra.uni 	BB16_5;

BB16_7:
	ld.global.u64 	%rd47, [cells];
	mul.wide.s32 	%rd48, %r5, 8;
	add.s64 	%rd49, %rd47, %rd48;
	ld.u16 	%rd50, [%rd49+6];
	ld.global.u64 	%rd51, [vfun_table];
	mul.lo.s64 	%rd52, %rd50, 240;
	add.s64 	%rd53, %rd51, %rd52;
	ld.u64 	%rd54, [%rd53+8];
	ld.u64 	%rd55, [%rd49];
	and.b64  	%rd56, %rd55, 281474976710655;


	mov.u32 	%r16, 0;
	// Callseq Start 53
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd56;
	.param .b32 param1;
	st.param.b32	[param1+0], %r5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r16;
	prototype_53 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _) ;
	call 
%rd54,
	(
	param0, 
	param1, 
	param2
	)
	, prototype_53;
	
	//{
	}// Callseq End 53
	bra.uni 	BB16_8;

BB16_5:
	ld.global.u64 	%rd29, [vfun_table];
	add.s64 	%rd31, %rd29, %rd13;
	ld.u64 	%rd32, [%rd31+40];


	// Callseq Start 51
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	prototype_51 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
%rd32,
	(
	param0
	)
	, prototype_51;
	ld.param.b32	%r15, [retval0+0];
	
	//{
	}// Callseq End 51
	setp.ne.s32	%p5, %r15, 1;
	@%p5 bra 	BB16_8;

	ld.global.u64 	%rd35, [cells];
	mul.wide.s32 	%rd36, %r5, 8;
	add.s64 	%rd37, %rd35, %rd36;
	ld.u16 	%rd38, [%rd37+6];
	ld.global.u64 	%rd39, [vfun_table];
	mul.lo.s64 	%rd40, %rd38, 240;
	add.s64 	%rd41, %rd39, %rd40;
	ld.u64 	%rd42, [%rd41+16];
	ld.u64 	%rd43, [%rd37];
	and.b64  	%rd44, %rd43, 281474976710655;


	// Callseq Start 52
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd44;
	prototype_52 : .callprototype ()_ (.param .b64 _) ;
	call 
%rd42,
	(
	param0
	)
	, prototype_52;
	
	//{
	}// Callseq End 52

BB16_8:
	add.s32 	%r20, %r3, %r20;
	ld.global.u32 	%r17, [SIZE_Y];
	ld.global.u32 	%r18, [SIZE_X];
	mul.lo.s32 	%r19, %r17, %r18;
	setp.lt.s32	%p6, %r20, %r19;
	@%p6 bra 	BB16_2;

BB16_9:
	ret;
}

	// .globl	_Z9load_gamePii
.visible .entry _Z9load_gamePii(
	.param .u64 _Z9load_gamePii_param_0,
	.param .u32 _Z9load_gamePii_param_1
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<30>;


	ld.param.u64 	%rd2, [_Z9load_gamePii_param_0];
	ld.param.u32 	%r6, [_Z9load_gamePii_param_1];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r16, %r7, %r1, %r8;
	setp.ge.s32	%p1, %r16, %r6;
	@%p1 bra 	BB17_5;

	cvta.to.global.u64 	%rd1, %rd2;
	mov.u32 	%r9, %nctaid.x;
	mul.lo.s32 	%r3, %r9, %r1;

BB17_2:
	mul.wide.s32 	%rd3, %r16, 4;
	add.s64 	%rd4, %rd1, %rd3;
	ld.global.u32 	%r10, [%rd4];
	ld.global.u64 	%rd5, [cells];
	mul.wide.s32 	%rd6, %r10, 8;
	add.s64 	%rd7, %rd5, %rd6;
	ld.u64 	%rd8, [%rd7];
	and.b64  	%rd9, %rd8, 281474976710655;
	ld.u64 	%rd10, [%rd9];
	ld.u64 	%rd11, [%rd10+8];
	mov.u32 	%r11, 0;
	// Callseq Start 54
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd9;
	.param .b32 param1;
	st.param.b32	[param1+0], %r10;
	.param .b32 param2;
	st.param.b32	[param2+0], %r11;
	prototype_54 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b32 _) ;
	call 
	%rd11, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_54;
	
	//{
	}// Callseq End 54
	ld.global.u32 	%r12, [%rd4];
	ld.global.u64 	%rd12, [cells];
	mul.wide.s32 	%rd13, %r12, 8;
	add.s64 	%rd14, %rd12, %rd13;
	ld.u64 	%rd15, [%rd14];
	and.b64  	%rd16, %rd15, 281474976710655;
	ld.u64 	%rd17, [%rd16];
	ld.u64 	%rd18, [%rd17];
	// Callseq Start 55
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 retval0;
	prototype_55 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
	%rd18, 
	(
	param0
	)
	, prototype_55;
	ld.param.b64	%rd19, [retval0+0];
	
	//{
	}// Callseq End 55
	and.b64  	%rd20, %rd19, 281474976710655;
	ld.u64 	%rd21, [%rd20];
	ld.u64 	%rd22, [%rd21+48];
	// Callseq Start 56
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd20;
	.param .b32 retval0;
	prototype_56 : .callprototype (.param .b32 _) _ (.param .b64 _) ;
	call (retval0), 
	%rd22, 
	(
	param0
	)
	, prototype_56;
	ld.param.b32	%r13, [retval0+0];
	
	//{
	}// Callseq End 56
	ld.global.u32 	%r14, [%rd4];
	setp.eq.s32	%p2, %r13, %r14;
	@%p2 bra 	BB17_4;

	mov.u64 	%rd23, $str7;
	cvta.global.u64 	%rd24, %rd23;
	mov.u64 	%rd25, $str4;
	cvta.global.u64 	%rd26, %rd25;
	mov.u64 	%rd27, __unnamed_3;
	cvta.global.u64 	%rd28, %rd27;
	mov.u32 	%r15, 240;
	mov.u64 	%rd29, 1;
	// Callseq Start 57
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd24;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd26;
	.param .b32 param2;
	st.param.b32	[param2+0], %r15;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd28;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd29;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 57

BB17_4:
	add.s32 	%r16, %r3, %r16;
	setp.lt.s32	%p3, %r16, %r6;
	@%p3 bra 	BB17_2;

BB17_5:
	ret;
}

	// .globl	_Z15update_checksumv
.visible .entry _Z15update_checksumv(

)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<12>;


	mov.u32 	%r6, %tid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mad.lo.s32 	%r15, %r7, %r1, %r6;
	ld.global.u32 	%r8, [SIZE_Y];
	ld.global.u32 	%r9, [SIZE_X];
	mul.lo.s32 	%r10, %r8, %r9;
	setp.ge.s32	%p1, %r15, %r10;
	@%p1 bra 	BB18_5;

	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB18_2:
	ld.global.u64 	%rd2, [cells];
	mul.wide.s32 	%rd3, %r15, 8;
	add.s64 	%rd4, %rd2, %rd3;
	ld.u64 	%rd5, [%rd4];
	and.b64  	%rd6, %rd5, 281474976710655;
	ld.u64 	%rd7, [%rd6];
	ld.u64 	%rd8, [%rd7];
	// Callseq Start 58
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b64 retval0;
	prototype_58 : .callprototype (.param .b64 _) _ (.param .b64 _) ;
	call (retval0), 
	%rd8, 
	(
	param0
	)
	, prototype_58;
	ld.param.b64	%rd9, [retval0+0];
	
	//{
	}// Callseq End 58
	and.b64  	%rd1, %rd9, 281474976710655;
	setp.eq.s64	%p2, %rd1, 0;
	@%p2 bra 	BB18_4;

	ld.u64 	%rd10, [%rd1];
	ld.u64 	%rd11, [%rd10+56];
	// Callseq Start 59
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	prototype_59 : .callprototype ()_ (.param .b64 _) ;
	call 
	%rd11, 
	(
	param0
	)
	, prototype_59;
	
	//{
	}// Callseq End 59

BB18_4:
	add.s32 	%r15, %r3, %r15;
	ld.global.u32 	%r12, [SIZE_Y];
	ld.global.u32 	%r13, [SIZE_X];
	mul.lo.s32 	%r14, %r12, %r13;
	setp.lt.s32	%p3, %r15, %r14;
	@%p3 bra 	BB18_2;

BB18_5:
	ret;
}

	// .globl	_Z11dump_vtableI5AgentEvPPvS2_
.visible .entry _Z11dump_vtableI5AgentEvPPvS2_(
	.param .u64 _Z11dump_vtableI5AgentEvPPvS2__param_0,
	.param .u64 _Z11dump_vtableI5AgentEvPPvS2__param_1
)
{
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<59>;


	ld.param.u64 	%rd17, [_Z11dump_vtableI5AgentEvPPvS2__param_0];
	ld.param.u64 	%rd18, [_Z11dump_vtableI5AgentEvPPvS2__param_1];
	mov.u64 	%rd58, 0;
	mov.u64 	%rd20, buf5;
	cvta.global.u64 	%rd21, %rd20;
	setp.eq.s64	%p1, %rd21, 0;
	@%p1 bra 	BB19_2;

	mov.u64 	%rd23, _ZTV5Agent;
	add.s64 	%rd24, %rd23, 16;
	cvta.global.u64 	%rd25, %rd24;
	st.global.u64 	[buf5], %rd25;
	mov.u32 	%r3, 2;
	st.global.u32 	[buf5+12], %r3;
	mov.u64 	%rd58, %rd20;

BB19_2:
	cvta.to.global.u64 	%rd2, %rd17;
	ld.global.u8 	%rs1, [%rd58];
	cvta.to.global.u64 	%rd26, %rd18;
	st.global.u8 	[%rd26], %rs1;
	ld.global.u8 	%rs2, [%rd58+1];
	st.global.u8 	[%rd26+1], %rs2;
	ld.global.u8 	%rs3, [%rd58+2];
	st.global.u8 	[%rd26+2], %rs3;
	ld.global.u8 	%rs4, [%rd58+3];
	st.global.u8 	[%rd26+3], %rs4;
	ld.global.u8 	%rs5, [%rd58+4];
	st.global.u8 	[%rd26+4], %rs5;
	ld.global.u8 	%rs6, [%rd58+5];
	st.global.u8 	[%rd26+5], %rs6;
	ld.global.u8 	%rs7, [%rd58+6];
	st.global.u8 	[%rd26+6], %rs7;
	ld.global.u8 	%rs8, [%rd58+7];
	st.global.u8 	[%rd26+7], %rs8;
	mov.u32 	%r15, 0;

BB19_3:
	cvt.s64.s32	%rd4, %r15;
	ld.global.u64 	%rd27, [%rd58];
	mul.wide.s32 	%rd28, %r15, 8;
	add.s64 	%rd29, %rd27, %rd28;
	ld.u64 	%rd5, [%rd29];
	setp.eq.s64	%p2, %rd5, 0;
	@%p2 bra 	BB19_14;

	add.s64 	%rd6, %rd2, %rd28;
	st.global.u64 	[%rd6], %rd5;
	add.s32 	%r5, %r15, 1;
	ld.global.u64 	%rd31, [%rd58];
	mul.wide.s32 	%rd32, %r5, 8;
	add.s64 	%rd33, %rd31, %rd32;
	ld.u64 	%rd7, [%rd33];
	setp.eq.s64	%p3, %rd7, 0;
	@%p3 bra 	BB19_14;

	st.global.u64 	[%rd6+8], %rd7;
	add.s32 	%r6, %r15, 2;
	ld.global.u64 	%rd34, [%rd58];
	mul.wide.s32 	%rd35, %r6, 8;
	add.s64 	%rd36, %rd34, %rd35;
	ld.u64 	%rd9, [%rd36];
	setp.eq.s64	%p4, %rd9, 0;
	@%p4 bra 	BB19_14;

	st.global.u64 	[%rd6+16], %rd9;
	add.s32 	%r7, %r15, 3;
	ld.global.u64 	%rd37, [%rd58];
	mul.wide.s32 	%rd38, %r7, 8;
	add.s64 	%rd39, %rd37, %rd38;
	ld.u64 	%rd10, [%rd39];
	setp.eq.s64	%p5, %rd10, 0;
	@%p5 bra 	BB19_14;

	st.global.u64 	[%rd6+24], %rd10;
	add.s32 	%r8, %r15, 4;
	ld.global.u64 	%rd40, [%rd58];
	mul.wide.s32 	%rd41, %r8, 8;
	add.s64 	%rd42, %rd40, %rd41;
	ld.u64 	%rd11, [%rd42];
	setp.eq.s64	%p6, %rd11, 0;
	@%p6 bra 	BB19_14;

	st.global.u64 	[%rd6+32], %rd11;
	add.s32 	%r9, %r15, 5;
	ld.global.u64 	%rd43, [%rd58];
	mul.wide.s32 	%rd44, %r9, 8;
	add.s64 	%rd45, %rd43, %rd44;
	ld.u64 	%rd12, [%rd45];
	setp.eq.s64	%p7, %rd12, 0;
	@%p7 bra 	BB19_14;

	st.global.u64 	[%rd6+40], %rd12;
	add.s32 	%r10, %r15, 6;
	ld.global.u64 	%rd46, [%rd58];
	mul.wide.s32 	%rd47, %r10, 8;
	add.s64 	%rd48, %rd46, %rd47;
	ld.u64 	%rd13, [%rd48];
	setp.eq.s64	%p8, %rd13, 0;
	@%p8 bra 	BB19_14;

	st.global.u64 	[%rd6+48], %rd13;
	add.s32 	%r11, %r15, 7;
	ld.global.u64 	%rd49, [%rd58];
	mul.wide.s32 	%rd50, %r11, 8;
	add.s64 	%rd51, %rd49, %rd50;
	ld.u64 	%rd14, [%rd51];
	setp.eq.s64	%p9, %rd14, 0;
	@%p9 bra 	BB19_14;

	st.global.u64 	[%rd6+56], %rd14;
	add.s32 	%r12, %r15, 8;
	ld.global.u64 	%rd52, [%rd58];
	mul.wide.s32 	%rd53, %r12, 8;
	add.s64 	%rd54, %rd52, %rd53;
	ld.u64 	%rd15, [%rd54];
	setp.eq.s64	%p10, %rd15, 0;
	@%p10 bra 	BB19_14;

	st.global.u64 	[%rd6+64], %rd15;
	add.s32 	%r13, %r15, 9;
	ld.global.u64 	%rd55, [%rd58];
	mul.wide.s32 	%rd56, %r13, 8;
	add.s64 	%rd57, %rd55, %rd56;
	ld.u64 	%rd16, [%rd57];
	setp.eq.s64	%p11, %rd16, 0;
	@%p11 bra 	BB19_14;

	cvt.u32.u64	%r14, %rd4;
	st.global.u64 	[%rd6+72], %rd16;
	add.s32 	%r15, %r14, 10;
	setp.lt.s32	%p12, %r15, 30;
	@%p12 bra 	BB19_3;

BB19_14:
	ret;
}

	// .globl	_Z11dump_vtableI4CellEvPPvS2_
.visible .entry _Z11dump_vtableI4CellEvPPvS2_(
	.param .u64 _Z11dump_vtableI4CellEvPPvS2__param_0,
	.param .u64 _Z11dump_vtableI4CellEvPPvS2__param_1
)
{
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<60>;


	ld.param.u64 	%rd17, [_Z11dump_vtableI4CellEvPPvS2__param_0];
	ld.param.u64 	%rd18, [_Z11dump_vtableI4CellEvPPvS2__param_1];
	mov.u64 	%rd59, 0;
	mov.u64 	%rd20, buf5;
	cvta.global.u64 	%rd21, %rd20;
	setp.eq.s64	%p1, %rd21, 0;
	@%p1 bra 	BB20_2;

	mov.u32 	%r3, 0;
	st.global.u32 	[buf5+24], %r3;
	mov.u64 	%rd23, _ZTV4Cell;
	add.s64 	%rd24, %rd23, 16;
	cvta.global.u64 	%rd25, %rd24;
	mov.u64 	%rd26, 0;
	st.global.v2.u64 	[buf5], {%rd25, %rd26};
	mov.u64 	%rd59, %rd20;

BB20_2:
	cvta.to.global.u64 	%rd2, %rd17;
	ld.global.u8 	%rs1, [%rd59];
	cvta.to.global.u64 	%rd27, %rd18;
	st.global.u8 	[%rd27], %rs1;
	ld.global.u8 	%rs2, [%rd59+1];
	st.global.u8 	[%rd27+1], %rs2;
	ld.global.u8 	%rs3, [%rd59+2];
	st.global.u8 	[%rd27+2], %rs3;
	ld.global.u8 	%rs4, [%rd59+3];
	st.global.u8 	[%rd27+3], %rs4;
	ld.global.u8 	%rs5, [%rd59+4];
	st.global.u8 	[%rd27+4], %rs5;
	ld.global.u8 	%rs6, [%rd59+5];
	st.global.u8 	[%rd27+5], %rs6;
	ld.global.u8 	%rs7, [%rd59+6];
	st.global.u8 	[%rd27+6], %rs7;
	ld.global.u8 	%rs8, [%rd59+7];
	st.global.u8 	[%rd27+7], %rs8;
	mov.u32 	%r15, 0;

BB20_3:
	cvt.s64.s32	%rd4, %r15;
	ld.global.u64 	%rd28, [%rd59];
	mul.wide.s32 	%rd29, %r15, 8;
	add.s64 	%rd30, %rd28, %rd29;
	ld.u64 	%rd5, [%rd30];
	setp.eq.s64	%p2, %rd5, 0;
	@%p2 bra 	BB20_14;

	add.s64 	%rd6, %rd2, %rd29;
	st.global.u64 	[%rd6], %rd5;
	add.s32 	%r5, %r15, 1;
	ld.global.u64 	%rd32, [%rd59];
	mul.wide.s32 	%rd33, %r5, 8;
	add.s64 	%rd34, %rd32, %rd33;
	ld.u64 	%rd7, [%rd34];
	setp.eq.s64	%p3, %rd7, 0;
	@%p3 bra 	BB20_14;

	st.global.u64 	[%rd6+8], %rd7;
	add.s32 	%r6, %r15, 2;
	ld.global.u64 	%rd35, [%rd59];
	mul.wide.s32 	%rd36, %r6, 8;
	add.s64 	%rd37, %rd35, %rd36;
	ld.u64 	%rd9, [%rd37];
	setp.eq.s64	%p4, %rd9, 0;
	@%p4 bra 	BB20_14;

	st.global.u64 	[%rd6+16], %rd9;
	add.s32 	%r7, %r15, 3;
	ld.global.u64 	%rd38, [%rd59];
	mul.wide.s32 	%rd39, %r7, 8;
	add.s64 	%rd40, %rd38, %rd39;
	ld.u64 	%rd10, [%rd40];
	setp.eq.s64	%p5, %rd10, 0;
	@%p5 bra 	BB20_14;

	st.global.u64 	[%rd6+24], %rd10;
	add.s32 	%r8, %r15, 4;
	ld.global.u64 	%rd41, [%rd59];
	mul.wide.s32 	%rd42, %r8, 8;
	add.s64 	%rd43, %rd41, %rd42;
	ld.u64 	%rd11, [%rd43];
	setp.eq.s64	%p6, %rd11, 0;
	@%p6 bra 	BB20_14;

	st.global.u64 	[%rd6+32], %rd11;
	add.s32 	%r9, %r15, 5;
	ld.global.u64 	%rd44, [%rd59];
	mul.wide.s32 	%rd45, %r9, 8;
	add.s64 	%rd46, %rd44, %rd45;
	ld.u64 	%rd12, [%rd46];
	setp.eq.s64	%p7, %rd12, 0;
	@%p7 bra 	BB20_14;

	st.global.u64 	[%rd6+40], %rd12;
	add.s32 	%r10, %r15, 6;
	ld.global.u64 	%rd47, [%rd59];
	mul.wide.s32 	%rd48, %r10, 8;
	add.s64 	%rd49, %rd47, %rd48;
	ld.u64 	%rd13, [%rd49];
	setp.eq.s64	%p8, %rd13, 0;
	@%p8 bra 	BB20_14;

	st.global.u64 	[%rd6+48], %rd13;
	add.s32 	%r11, %r15, 7;
	ld.global.u64 	%rd50, [%rd59];
	mul.wide.s32 	%rd51, %r11, 8;
	add.s64 	%rd52, %rd50, %rd51;
	ld.u64 	%rd14, [%rd52];
	setp.eq.s64	%p9, %rd14, 0;
	@%p9 bra 	BB20_14;

	st.global.u64 	[%rd6+56], %rd14;
	add.s32 	%r12, %r15, 8;
	ld.global.u64 	%rd53, [%rd59];
	mul.wide.s32 	%rd54, %r12, 8;
	add.s64 	%rd55, %rd53, %rd54;
	ld.u64 	%rd15, [%rd55];
	setp.eq.s64	%p10, %rd15, 0;
	@%p10 bra 	BB20_14;

	st.global.u64 	[%rd6+64], %rd15;
	add.s32 	%r13, %r15, 9;
	ld.global.u64 	%rd56, [%rd59];
	mul.wide.s32 	%rd57, %r13, 8;
	add.s64 	%rd58, %rd56, %rd57;
	ld.u64 	%rd16, [%rd58];
	setp.eq.s64	%p11, %rd16, 0;
	@%p11 bra 	BB20_14;

	cvt.u32.u64	%r14, %rd4;
	st.global.u64 	[%rd6+72], %rd16;
	add.s32 	%r15, %r14, 10;
	setp.lt.s32	%p12, %r15, 30;
	@%p12 bra 	BB20_3;

BB20_14:
	ret;
}


